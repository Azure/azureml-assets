trace_id,user_id,session_id,start_time,end_time,input,output,root_span
0xeb680f9487455dd80bbb9ca58dbc11a7,,,2024-02-05T15:56:04.360Z,2024-02-05T15:56:08.088Z,"{\""question\"": \""how to improve Attension calculation efficiency?\"",\""chat_history\"": [{\""inputs\"": {\""question\"": \""how to calculate Attention?\""},\""outputs\"": {\""output\"": \""To calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\""}}]}","{\""output\"": \""One way to improve the efficiency of attention calculation is to use dot-product attention, which is faster and more space-efficient than additive attention. Additionally, multi-head attention can be used to linearly project the queries, keys, and values multiple times with different, learned linear projections to different dimensions, and then perform the attention function in parallel on each of these projected versions. This can improve the model's performance while also being more parallelizable and requiring less time to train. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\""}","{\""attributes\"": \""{\\\""framework\\\"":\\\""promptflow\\\"",\\\""inputs\\\"":\\\""{\\\\n  \\\\\\\""question\\\\\\\"": \\\\\\\""how to improve Attension calculation efficiency?\\\\\\\"",\\\\n  \\\\\\\""chat_history\\\\\\\"": [\\\\n    {\\\\n      \\\\\\\""inputs\\\\\\\"": {\\\\n        \\\\\\\""question\\\\\\\"": \\\\\\\""how to calculate Attention?\\\\\\\""\\\\n      },\\\\n      \\\\\\\""outputs\\\\\\\"": {\\\\n        \\\\\\\""output\\\\\\\"": \\\\\\\""To calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\\\\\\\""\\\\n      }\\\\n    }\\\\n  ]\\\\n}\\\"",\\\""output\\\"":\\\""{\\\\n  \\\\\\\""output\\\\\\\"": \\\\\\\""One way to improve the efficiency of attention calculation is to use dot-product attention, which is faster and more space-efficient than additive attention. Additionally, multi-head attention can be used to linearly project the queries, keys, and values multiple times with different, learned linear projections to different dimensions, and then perform the attention function in parallel on each of these projected versions. This can improve the model's performance while also being more parallelizable and requiring less time to train. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\\\\\\\""\\\\n}\\\"",\\\""span_type\\\"":\\\""Flow\\\""}\"", \""context\"": \""{\\\""span_id\\\"":\\\""0x4d0bbb09563f095d\\\"",\\\""trace_id\\\"":\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\"",\\\""trace_state\\\"":\\\""[]\\\""}\"", \""end_time\"": \""2024-02-05T15:56:08.088375\"", \""events\"": \""[]\"", \""kind\"": \""SpanKind.INTERNAL\"", \""links\"": \""[]\"", \""name\"": \""promptflow.flow\"", \""parent_id\"": null, \""resource\"": \""{\\\""attributes\\\"":{\\\""service.name\\\"":\\\""promptflow\\\""},\\\""schema_url\\\"":\\\""\\\""}\"", \""start_time\"": \""2024-02-05T15:56:04.360491\"", \""status\"": \""OK\"", \""trace_id\"": \""0xeb680f9487455dd80bbb9ca58dbc11a7\"", \""span_id\"": \""0x4d0bbb09563f095d\"", \""span_type\"": \""Flow\"", \""framework\"": \""promptflow\"", \""input\"": \""{\\n  \\\""question\\\"": \\\""how to improve Attension calculation efficiency?\\\"",\\n  \\\""chat_history\\\"": [\\n    {\\n      \\\""inputs\\\"": {\\n        \\\""question\\\"": \\\""how to calculate Attention?\\\""\\n      },\\n      \\\""outputs\\\"": {\\n        \\\""output\\\"": \\\""To calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\\\""\\n      }\\n    }\\n  ]\\n}\"", \""output\"": \""{\\n  \\\""output\\\"": \\\""One way to improve the efficiency of attention calculation is to use dot-product attention, which is faster and more space-efficient than additive attention. Additionally, multi-head attention can be used to linearly project the queries, keys, and values multiple times with different, learned linear projections to different dimensions, and then perform the attention function in parallel on each of these projected versions. This can improve the model's performance while also being more parallelizable and requiring less time to train. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\\\""\\n}\"", \""children\"": [\""{\\\""attributes\\\"": \\\""{\\\\\\\""flow_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""framework\\\\\\\"":\\\\\\\""promptflow\\\\\\\"",\\\\\\\""function\\\\\\\"":\\\\\\\""AzureOpenAI.chat\\\\\\\"",\\\\\\\""inputs\\\\\\\"":\\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""prompt\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""system: \\\\\\\\\\\\\\\\nGiven the following conversation history and the users next question,rephrase the question to be a stand alone question.\\\\\\\\\\\\\\\\nIf the conversation is irrelevant or empty, just restate the original question.\\\\\\\\\\\\\\\\nDo not add more details than necessary to the question.\\\\\\\\\\\\\\\\nconversation:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n chat history: \\\\\\\\\\\\\\\\n{% for item in chat_history %} user: \\\\\\\\\\\\\\\\n{{ item.inputs.question }} \\\\\\\\\\\\\\\\nassistant: \\\\\\\\\\\\\\\\n{{ item.outputs.output }} \\\\\\\\\\\\\\\\n{% endfor %}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nuser:\\\\\\\\\\\\\\\\nFollow up Input: {{question}} \\\\\\\\\\\\\\\\nStandalone Question:\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""deployment_name\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""temperature\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\n  \\\\\\\\\\\\\\\""top_p\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\n  \\\\\\\\\\\\\\\""presence_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""frequency_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""chat_history\\\\\\\\\\\\\\\"": [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""inputs\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""question\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""how to calculate Attention?\\\\\\\\\\\\\\\""\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""outputs\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""output\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""To calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\\\\\\\\\\\\\\\""\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  ],\\\\\\\\n  \\\\\\\\\\\\\\\""question\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""how to improve Attension calculation efficiency?\\\\\\\\\\\\\\\""\\\\\\\\n}\\\\\\\"",\\\\\\\""line_run_id\\\\\\\"":\\\\\\\""d13da436-d3ad-4905-9aae-2dfc0cb2b538\\\\\\\"",\\\\\\\""node_name\\\\\\\"":\\\\\\\""modify_query_with_history\\\\\\\"",\\\\\\\""output\\\\\\\"":\\\\\\\""\\\\\\\\\\\\\\\""What are some ways to improve the efficiency of Attention calculation?\\\\\\\\\\\\\\\""\\\\\\\"",\\\\\\\""root_run_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""span_type\\\\\\\"":\\\\\\\""Tool\\\\\\\""}\\\"", \\\""context\\\"": \\\""{\\\\\\\""span_id\\\\\\\"":\\\\\\\""0x6555b4a6692fe2cd\\\\\\\"",\\\\\\\""trace_id\\\\\\\"":\\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\"",\\\\\\\""trace_state\\\\\\\"":\\\\\\\""[]\\\\\\\""}\\\"", \\\""end_time\\\"": \\\""2024-02-05T15:56:05.070253\\\"", \\\""events\\\"": \\\""[]\\\"", \\\""kind\\\"": \\\""SpanKind.INTERNAL\\\"", \\\""links\\\"": \\\""[]\\\"", \\\""name\\\"": \\\""modify_query_with_history\\\"", \\\""parent_id\\\"": \\\""0x4d0bbb09563f095d\\\"", \\\""resource\\\"": \\\""{\\\\\\\""attributes\\\\\\\"":{\\\\\\\""service.name\\\\\\\"":\\\\\\\""promptflow\\\\\\\""},\\\\\\\""schema_url\\\\\\\"":\\\\\\\""\\\\\\\""}\\\"", \\\""start_time\\\"": \\\""2024-02-05T15:56:04.362997\\\"", \\\""status\\\"": \\\""OK\\\"", \\\""trace_id\\\"": \\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\"", \\\""span_id\\\"": \\\""0x6555b4a6692fe2cd\\\"", \\\""span_type\\\"": \\\""Tool\\\"", \\\""framework\\\"": \\\""promptflow\\\"", \\\""input\\\"": \\\""{\\\\n  \\\\\\\""prompt\\\\\\\"": \\\\\\\""system: \\\\\\\\nGiven the following conversation history and the users next question,rephrase the question to be a stand alone question.\\\\\\\\nIf the conversation is irrelevant or empty, just restate the original question.\\\\\\\\nDo not add more details than necessary to the question.\\\\\\\\nconversation:\\\\\\\\n\\\\\\\\n chat history: \\\\\\\\n{% for item in chat_history %} user: \\\\\\\\n{{ item.inputs.question }} \\\\\\\\nassistant: \\\\\\\\n{{ item.outputs.output }} \\\\\\\\n{% endfor %}\\\\\\\\n\\\\\\\\nuser:\\\\\\\\nFollow up Input: {{question}} \\\\\\\\nStandalone Question:\\\\\\\"",\\\\n  \\\\\\\""deployment_name\\\\\\\"": \\\\\\\""gpt-35-turbo\\\\\\\"",\\\\n  \\\\\\\""temperature\\\\\\\"": 1.0,\\\\n  \\\\\\\""top_p\\\\\\\"": 1.0,\\\\n  \\\\\\\""presence_penalty\\\\\\\"": 0.0,\\\\n  \\\\\\\""frequency_penalty\\\\\\\"": 0.0,\\\\n  \\\\\\\""chat_history\\\\\\\"": [\\\\n    {\\\\n      \\\\\\\""inputs\\\\\\\"": {\\\\n        \\\\\\\""question\\\\\\\"": \\\\\\\""how to calculate Attention?\\\\\\\""\\\\n      },\\\\n      \\\\\\\""outputs\\\\\\\"": {\\\\n        \\\\\\\""output\\\\\\\"": \\\\\\\""To calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\\\\\\\""\\\\n      }\\\\n    }\\\\n  ],\\\\n  \\\\\\\""question\\\\\\\"": \\\\\\\""how to improve Attension calculation efficiency?\\\\\\\""\\\\n}\\\"", \\\""output\\\"": \\\""\\\\\\\""What are some ways to improve the efficiency of Attention calculation?\\\\\\\""\\\"", \\\""children\\\"": [\\\""{\\\\\\\""attributes\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""flow_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""framework\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""function\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""openai.resources.chat.completions.Completions.create\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""inputs\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""messages\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""system\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Given the following conversation history and the users next question,rephrase the question to be a stand alone question.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIf the conversation is irrelevant or empty, just restate the original question.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nDo not add more details than necessary to the question.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconversation:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n chat history:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""how to calculate Attention?\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""To calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Follow up Input: how to improve Attension calculation efficiency? \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nStandalone Question:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""temperature\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""top_p\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stream\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": false,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""max_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""presence_penalty\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""frequency_penalty\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""logit_bias\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {},\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""response_format\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""line_run_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""d13da436-d3ad-4905-9aae-2dfc0cb2b538\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""node_name\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""modify_query_with_history\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""output\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chatcmpl-8ovcCg3bbyX7xxWkJCTFAgpZZpDu9\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""choices\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""finish_reason\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""index\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0,\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""logprobs\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""message\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""What are some ways to improve the efficiency of Attention calculation?\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""function_call\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""tool_calls\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null\\\\\\\\\\\\\\\\n      }\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""created\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1707148564,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chat.completion\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""system_fingerprint\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""usage\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""completion_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 12,\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""prompt_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 216,\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""total_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 228\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""root_run_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""span_type\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""LLM\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""context\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""span_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""0xa1c01237a2bfc843\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""trace_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""trace_state\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""end_time\\\\\\\"": \\\\\\\""2024-02-05T15:56:05.066954\\\\\\\"", \\\\\\\""events\\\\\\\"": \\\\\\\""[]\\\\\\\"", \\\\\\\""kind\\\\\\\"": \\\\\\\""SpanKind.INTERNAL\\\\\\\"", \\\\\\\""links\\\\\\\"": \\\\\\\""[]\\\\\\\"", \\\\\\\""name\\\\\\\"": \\\\\\\""openai.resources.chat.completions.Completions.create\\\\\\\"", \\\\\\\""parent_id\\\\\\\"": \\\\\\\""0x6555b4a6692fe2cd\\\\\\\"", \\\\\\\""resource\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""attributes\\\\\\\\\\\\\\\"":{\\\\\\\\\\\\\\\""service.name\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\""},\\\\\\\\\\\\\\\""schema_url\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""start_time\\\\\\\"": \\\\\\\""2024-02-05T15:56:04.366469\\\\\\\"", \\\\\\\""status\\\\\\\"": \\\\\\\""OK\\\\\\\"", \\\\\\\""trace_id\\\\\\\"": \\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\"", \\\\\\\""span_id\\\\\\\"": \\\\\\\""0xa1c01237a2bfc843\\\\\\\"", \\\\\\\""span_type\\\\\\\"": \\\\\\\""LLM\\\\\\\"", \\\\\\\""framework\\\\\\\"": \\\\\\\""promptflow\\\\\\\"", \\\\\\\""input\\\\\\\"": \\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""messages\\\\\\\\\\\\\\\"": [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""system\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Given the following conversation history and the users next question,rephrase the question to be a stand alone question.\\\\\\\\\\\\\\\\nIf the conversation is irrelevant or empty, just restate the original question.\\\\\\\\\\\\\\\\nDo not add more details than necessary to the question.\\\\\\\\\\\\\\\\nconversation:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n chat history:\\\\\\\\\\\\\\\""\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""how to calculate Attention?\\\\\\\\\\\\\\\""\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""To calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\\\\\\\\\\\\\\\""\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Follow up Input: how to improve Attension calculation efficiency? \\\\\\\\\\\\\\\\nStandalone Question:\\\\\\\\\\\\\\\""\\\\\\\\n    }\\\\\\\\n  ],\\\\\\\\n  \\\\\\\\\\\\\\\""temperature\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\n  \\\\\\\\\\\\\\\""top_p\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\n  \\\\\\\\\\\\\\\""n\\\\\\\\\\\\\\\"": 1,\\\\\\\\n  \\\\\\\\\\\\\\\""stream\\\\\\\\\\\\\\\"": false,\\\\\\\\n  \\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\"": null,\\\\\\\\n  \\\\\\\\\\\\\\\""max_tokens\\\\\\\\\\\\\\\"": null,\\\\\\\\n  \\\\\\\\\\\\\\\""presence_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""frequency_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""logit_bias\\\\\\\\\\\\\\\"": {},\\\\\\\\n  \\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""response_format\\\\\\\\\\\\\\\"": null\\\\\\\\n}\\\\\\\"", \\\\\\\""output\\\\\\\"": \\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""chatcmpl-8ovcCg3bbyX7xxWkJCTFAgpZZpDu9\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""choices\\\\\\\\\\\\\\\"": [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""finish_reason\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""index\\\\\\\\\\\\\\\"": 0,\\\\\\\\n      \\\\\\\\\\\\\\\""logprobs\\\\\\\\\\\\\\\"": null,\\\\\\\\n      \\\\\\\\\\\\\\\""message\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""What are some ways to improve the efficiency of Attention calculation?\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""function_call\\\\\\\\\\\\\\\"": null,\\\\\\\\n        \\\\\\\\\\\\\\\""tool_calls\\\\\\\\\\\\\\\"": null\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  ],\\\\\\\\n  \\\\\\\\\\\\\\\""created\\\\\\\\\\\\\\\"": 1707148564,\\\\\\\\n  \\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""chat.completion\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""system_fingerprint\\\\\\\\\\\\\\\"": null,\\\\\\\\n  \\\\\\\\\\\\\\\""usage\\\\\\\\\\\\\\\"": {\\\\\\\\n    \\\\\\\\\\\\\\\""completion_tokens\\\\\\\\\\\\\\\"": 12,\\\\\\\\n    \\\\\\\\\\\\\\\""prompt_tokens\\\\\\\\\\\\\\\"": 216,\\\\\\\\n    \\\\\\\\\\\\\\\""total_tokens\\\\\\\\\\\\\\\"": 228\\\\\\\\n  }\\\\\\\\n}\\\\\\\"", \\\\\\\""children\\\\\\\"": []}\\\""]}\"", \""{\\\""attributes\\\"": \\\""{\\\\\\\""flow_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""framework\\\\\\\"":\\\\\\\""promptflow\\\\\\\"",\\\\\\\""function\\\\\\\"":\\\\\\\""my_python_tool\\\\\\\"",\\\\\\\""inputs\\\\\\\"":\\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""modified_question\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""What are some ways to improve the efficiency of Attention calculation?\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""original_question\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""how to improve Attension calculation efficiency?\\\\\\\\\\\\\\\""\\\\\\\\n}\\\\\\\"",\\\\\\\""line_run_id\\\\\\\"":\\\\\\\""d13da436-d3ad-4905-9aae-2dfc0cb2b538\\\\\\\"",\\\\\\\""node_name\\\\\\\"":\\\\\\\""prepare_question_array\\\\\\\"",\\\\\\\""output\\\\\\\"":\\\\\\\""[\\\\\\\\n  \\\\\\\\\\\\\\\""What are some ways to improve the efficiency of Attention calculation?\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""how to improve Attension calculation efficiency?\\\\\\\\\\\\\\\""\\\\\\\\n]\\\\\\\"",\\\\\\\""root_run_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""span_type\\\\\\\"":\\\\\\\""Tool\\\\\\\""}\\\"", \\\""context\\\"": \\\""{\\\\\\\""span_id\\\\\\\"":\\\\\\\""0x110d0b165f5cff88\\\\\\\"",\\\\\\\""trace_id\\\\\\\"":\\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\"",\\\\\\\""trace_state\\\\\\\"":\\\\\\\""[]\\\\\\\""}\\\"", \\\""end_time\\\"": \\\""2024-02-05T15:56:05.076515\\\"", \\\""events\\\"": \\\""[]\\\"", \\\""kind\\\"": \\\""SpanKind.INTERNAL\\\"", \\\""links\\\"": \\\""[]\\\"", \\\""name\\\"": \\\""prepare_question_array\\\"", \\\""parent_id\\\"": \\\""0x4d0bbb09563f095d\\\"", \\\""resource\\\"": \\\""{\\\\\\\""attributes\\\\\\\"":{\\\\\\\""service.name\\\\\\\"":\\\\\\\""promptflow\\\\\\\""},\\\\\\\""schema_url\\\\\\\"":\\\\\\\""\\\\\\\""}\\\"", \\\""start_time\\\"": \\\""2024-02-05T15:56:05.075939\\\"", \\\""status\\\"": \\\""OK\\\"", \\\""trace_id\\\"": \\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\"", \\\""span_id\\\"": \\\""0x110d0b165f5cff88\\\"", \\\""span_type\\\"": \\\""Tool\\\"", \\\""framework\\\"": \\\""promptflow\\\"", \\\""input\\\"": \\\""{\\\\n  \\\\\\\""modified_question\\\\\\\"": \\\\\\\""What are some ways to improve the efficiency of Attention calculation?\\\\\\\"",\\\\n  \\\\\\\""original_question\\\\\\\"": \\\\\\\""how to improve Attension calculation efficiency?\\\\\\\""\\\\n}\\\"", \\\""output\\\"": \\\""[\\\\n  \\\\\\\""What are some ways to improve the efficiency of Attention calculation?\\\\\\\"",\\\\n  \\\\\\\""how to improve Attension calculation efficiency?\\\\\\\""\\\\n]\\\"", \\\""children\\\"": []}\"", \""{\\\""attributes\\\"": \\\""{\\\\\\\""flow_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""framework\\\\\\\"":\\\\\\\""promptflow\\\\\\\"",\\\\\\\""function\\\\\\\"":\\\\\\\""search\\\\\\\"",\\\\\\\""inputs\\\\\\\"":\\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""mlindex_content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""embeddings:\\\\\\\\\\\\\\\\n  api_base: https://promptflow-ci-weu.openai.azure.com/\\\\\\\\\\\\\\\\n  api_type: azure\\\\\\\\\\\\\\\\n  api_version: 2023-03-15-preview\\\\\\\\\\\\\\\\n  batch_size: '16'\\\\\\\\\\\\\\\\n  connection:\\\\\\\\\\\\\\\\n    id: \\\\\\\\\\\\\\\\n      /subscriptions/96aede12-2f73-41cb-b983-6d11a904839b/resourceGroups/promptflow/providers/Microsoft.MachineLearningServices/workspaces/pf-xp/connections/azure_open_ai_connection\\\\\\\\\\\\\\\\n  connection_type: workspace_connection\\\\\\\\\\\\\\\\n  deployment: text-embedding-ada-003\\\\\\\\\\\\\\\\n  dimension: 1536\\\\\\\\\\\\\\\\n  file_format_version: '2'\\\\\\\\\\\\\\\\n  kind: open_ai\\\\\\\\\\\\\\\\n  model: text-embedding-ada-002\\\\\\\\\\\\\\\\n  schema_version: '2'\\\\\\\\\\\\\\\\nindex:\\\\\\\\\\\\\\\\n  engine: langchain.vectorstores.FAISS\\\\\\\\\\\\\\\\n  kind: faiss\\\\\\\\\\\\\\\\n  method: FlatL2\\\\\\\\\\\\\\\\n  path: \\\\\\\\\\\\\\\\n    azureml://subscriptions/96aede12-2f73-41cb-b983-6d11a904839b/resourcegroups/promptflow/workspaces/pf-xp/datastores/workspaceblobstore/paths/azureml/f7ee0381-06fc-4566-820f-86ba174db987/index/\\\\\\\\\\\\\\\\nself:\\\\\\\\\\\\\\\\n  path: \\\\\\\\\\\\\\\\n    azureml://subscriptions/96aede12-2f73-41cb-b983-6d11a904839b/resourcegroups/promptflow/workspaces/pf-xp/datastores/workspaceblobstore/paths/azureml/f7ee0381-06fc-4566-820f-86ba174db987/index/\\\\\\\\\\\\\\\\n  asset_id: \\\\\\\\\\\\\\\\n    azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/serene-honey-h9lrkyczzk/versions/1\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""queries\\\\\\\\\\\\\\\"": [\\\\\\\\n    \\\\\\\\\\\\\\\""What are some ways to improve the efficiency of Attention calculation?\\\\\\\\\\\\\\\"",\\\\\\\\n    \\\\\\\\\\\\\\\""how to improve Attension calculation efficiency?\\\\\\\\\\\\\\\""\\\\\\\\n  ],\\\\\\\\n  \\\\\\\\\\\\\\\""query_type\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Vector\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""top_k\\\\\\\\\\\\\\\"": 3\\\\\\\\n}\\\\\\\"",\\\\\\\""line_run_id\\\\\\\"":\\\\\\\""d13da436-d3ad-4905-9aae-2dfc0cb2b538\\\\\\\"",\\\\\\\""node_name\\\\\\\"":\\\\\\\""vector_lookup\\\\\\\"",\\\\\\\""output\\\\\\\"":\\\\\\\""[\\\\\\\\n  [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf3\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n        \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 3,\\\\\\\\n        \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 551,\\\\\\\\n          \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 2502,\\\\\\\\n          \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 35\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n        }\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.3891408443450928\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfAttention Visualizations\\\\\\\\\\\\\\\\nInput-Input Layer5\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\\\\\\\\\nthe verb \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019, completing the phrase \\\\\\\\\\\\\\\\u2018making...more difficult\\\\\\\\\\\\\\\\u2019. Attentions here shown only for\\\\\\\\\\\\\\\\nthe word \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\\\\\\\\\n13\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf12\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""2ab3047247294a730f42d2e9fb421bfa7bcf724d98adf2714c6566d1d3199abd\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n        \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 12,\\\\\\\\n        \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 254,\\\\\\\\n          \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 833,\\\\\\\\n          \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 73\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n        }\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.39398106932640076\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf0\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n        \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 0,\\\\\\\\n        \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 668,\\\\\\\\n          \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 2874,\\\\\\\\n          \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 50\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n        }\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.42212480306625366\\\\\\\\n    }\\\\\\\\n  ],\\\\\\\\n  [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf3\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n        \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 3,\\\\\\\\n        \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 551,\\\\\\\\n          \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 2502,\\\\\\\\n          \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 35\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n        }\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.403403103351593\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfAttention Visualizations\\\\\\\\\\\\\\\\nInput-Input Layer5\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\\\\\\\\\nthe verb \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019, completing the phrase \\\\\\\\\\\\\\\\u2018making...more difficult\\\\\\\\\\\\\\\\u2019. Attentions here shown only for\\\\\\\\\\\\\\\\nthe word \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\\\\\\\\\n13\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf12\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""2ab3047247294a730f42d2e9fb421bfa7bcf724d98adf2714c6566d1d3199abd\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n        \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 12,\\\\\\\\n        \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 254,\\\\\\\\n          \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 833,\\\\\\\\n          \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 73\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n        }\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.42596590518951416\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf0\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n        \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 0,\\\\\\\\n        \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 668,\\\\\\\\n          \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 2874,\\\\\\\\n          \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 50\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n        }\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.4357953667640686\\\\\\\\n    }\\\\\\\\n  ]\\\\\\\\n]\\\\\\\"",\\\\\\\""root_run_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""span_type\\\\\\\"":\\\\\\\""Tool\\\\\\\""}\\\"", \\\""context\\\"": \\\""{\\\\\\\""span_id\\\\\\\"":\\\\\\\""0x2b2a902ea98f7623\\\\\\\"",\\\\\\\""trace_id\\\\\\\"":\\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\"",\\\\\\\""trace_state\\\\\\\"":\\\\\\\""[]\\\\\\\""}\\\"", \\\""end_time\\\"": \\\""2024-02-05T15:56:05.668144\\\"", \\\""events\\\"": \\\""[]\\\"", \\\""kind\\\"": \\\""SpanKind.INTERNAL\\\"", \\\""links\\\"": \\\""[]\\\"", \\\""name\\\"": \\\""vector_lookup\\\"", \\\""parent_id\\\"": \\\""0x4d0bbb09563f095d\\\"", \\\""resource\\\"": \\\""{\\\\\\\""attributes\\\\\\\"":{\\\\\\\""service.name\\\\\\\"":\\\\\\\""promptflow\\\\\\\""},\\\\\\\""schema_url\\\\\\\"":\\\\\\\""\\\\\\\""}\\\"", \\\""start_time\\\"": \\\""2024-02-05T15:56:05.080216\\\"", \\\""status\\\"": \\\""OK\\\"", \\\""trace_id\\\"": \\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\"", \\\""span_id\\\"": \\\""0x2b2a902ea98f7623\\\"", \\\""span_type\\\"": \\\""Tool\\\"", \\\""framework\\\"": \\\""promptflow\\\"", \\\""input\\\"": \\\""{\\\\n  \\\\\\\""mlindex_content\\\\\\\"": \\\\\\\""embeddings:\\\\\\\\n  api_base: https://promptflow-ci-weu.openai.azure.com/\\\\\\\\n  api_type: azure\\\\\\\\n  api_version: 2023-03-15-preview\\\\\\\\n  batch_size: '16'\\\\\\\\n  connection:\\\\\\\\n    id: \\\\\\\\n      /subscriptions/96aede12-2f73-41cb-b983-6d11a904839b/resourceGroups/promptflow/providers/Microsoft.MachineLearningServices/workspaces/pf-xp/connections/azure_open_ai_connection\\\\\\\\n  connection_type: workspace_connection\\\\\\\\n  deployment: text-embedding-ada-003\\\\\\\\n  dimension: 1536\\\\\\\\n  file_format_version: '2'\\\\\\\\n  kind: open_ai\\\\\\\\n  model: text-embedding-ada-002\\\\\\\\n  schema_version: '2'\\\\\\\\nindex:\\\\\\\\n  engine: langchain.vectorstores.FAISS\\\\\\\\n  kind: faiss\\\\\\\\n  method: FlatL2\\\\\\\\n  path: \\\\\\\\n    azureml://subscriptions/96aede12-2f73-41cb-b983-6d11a904839b/resourcegroups/promptflow/workspaces/pf-xp/datastores/workspaceblobstore/paths/azureml/f7ee0381-06fc-4566-820f-86ba174db987/index/\\\\\\\\nself:\\\\\\\\n  path: \\\\\\\\n    azureml://subscriptions/96aede12-2f73-41cb-b983-6d11a904839b/resourcegroups/promptflow/workspaces/pf-xp/datastores/workspaceblobstore/paths/azureml/f7ee0381-06fc-4566-820f-86ba174db987/index/\\\\\\\\n  asset_id: \\\\\\\\n    azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/serene-honey-h9lrkyczzk/versions/1\\\\\\\\n\\\\\\\"",\\\\n  \\\\\\\""queries\\\\\\\"": [\\\\n    \\\\\\\""What are some ways to improve the efficiency of Attention calculation?\\\\\\\"",\\\\n    \\\\\\\""how to improve Attension calculation efficiency?\\\\\\\""\\\\n  ],\\\\n  \\\\\\\""query_type\\\\\\\"": \\\\\\\""Vector\\\\\\\"",\\\\n  \\\\\\\""top_k\\\\\\\"": 3\\\\n}\\\"", \\\""output\\\"": \\\""[\\\\n  [\\\\n    {\\\\n      \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\n Multi-Head Attention\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\nattention layers running in parallel.\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\nquery with the corresponding key.\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\nquery with all keys, divide each by\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\nvalues.\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\nthe matrix of outputs as:\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\n\\\\\\\\u221adk)V (1)\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\nof1\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\nmatrix multiplication code.\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\u221adk.\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\u00b7k=Pdk\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\n4\\\\\\\"",\\\\n      \\\\\\\""metadata\\\\\\\"": {\\\\n        \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf3\\\\\\\"",\\\\n        \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\"",\\\\n        \\\\\\\""mtime\\\\\\\"": null,\\\\n        \\\\\\\""page_number\\\\\\\"": 3,\\\\n        \\\\\\\""stats\\\\\\\"": {\\\\n          \\\\\\\""tiktokens\\\\\\\"": 551,\\\\n          \\\\\\\""chars\\\\\\\"": 2502,\\\\n          \\\\\\\""lines\\\\\\\"": 35\\\\n        },\\\\n        \\\\\\\""source\\\\\\\"": {\\\\n          \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n        }\\\\n      },\\\\n      \\\\\\\""score\\\\\\\"": 0.3891408443450928\\\\n    },\\\\n    {\\\\n      \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfAttention Visualizations\\\\\\\\nInput-Input Layer5\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\nthe verb \\\\\\\\u2018making\\\\\\\\u2019, completing the phrase \\\\\\\\u2018making...more difficult\\\\\\\\u2019. Attentions here shown only for\\\\\\\\nthe word \\\\\\\\u2018making\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\n13\\\\\\\"",\\\\n      \\\\\\\""metadata\\\\\\\"": {\\\\n        \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf12\\\\\\\"",\\\\n        \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""2ab3047247294a730f42d2e9fb421bfa7bcf724d98adf2714c6566d1d3199abd\\\\\\\"",\\\\n        \\\\\\\""mtime\\\\\\\"": null,\\\\n        \\\\\\\""page_number\\\\\\\"": 12,\\\\n        \\\\\\\""stats\\\\\\\"": {\\\\n          \\\\\\\""tiktokens\\\\\\\"": 254,\\\\n          \\\\\\\""chars\\\\\\\"": 833,\\\\n          \\\\\\\""lines\\\\\\\"": 73\\\\n        },\\\\n        \\\\\\\""source\\\\\\\"": {\\\\n          \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n        }\\\\n      },\\\\n      \\\\\\\""score\\\\\\\"": 0.39398106932640076\\\\n    },\\\\n    {\\\\n      \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\nscholarly works.\\\\\\\\nAttention Is All You Need\\\\\\\\nAshish Vaswani\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nusz@google.com\\\\\\\\nLlion Jones\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\u2217 \\\\\\\\u2020\\\\\\\\nUniversity of Toronto\\\\\\\\naidan@cs.toronto.edu\\\\\\\\u0141ukasz Kaiser\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nlukaszkaiser@google.com\\\\\\\\nIllia Polosukhin\\\\\\\\u2217 \\\\\\\\u2021\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\nAbstract\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\nlarge and limited training data.\\\\\\\\n\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\nour research.\\\\\\\\n\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\n\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\"",\\\\n      \\\\\\\""metadata\\\\\\\"": {\\\\n        \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf0\\\\\\\"",\\\\n        \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\"",\\\\n        \\\\\\\""mtime\\\\\\\"": null,\\\\n        \\\\\\\""page_number\\\\\\\"": 0,\\\\n        \\\\\\\""stats\\\\\\\"": {\\\\n          \\\\\\\""tiktokens\\\\\\\"": 668,\\\\n          \\\\\\\""chars\\\\\\\"": 2874,\\\\n          \\\\\\\""lines\\\\\\\"": 50\\\\n        },\\\\n        \\\\\\\""source\\\\\\\"": {\\\\n          \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n        }\\\\n      },\\\\n      \\\\\\\""score\\\\\\\"": 0.42212480306625366\\\\n    }\\\\n  ],\\\\n  [\\\\n    {\\\\n      \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\n Multi-Head Attention\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\nattention layers running in parallel.\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\nquery with the corresponding key.\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\nquery with all keys, divide each by\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\nvalues.\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\nthe matrix of outputs as:\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\n\\\\\\\\u221adk)V (1)\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\nof1\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\nmatrix multiplication code.\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\u221adk.\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\u00b7k=Pdk\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\n4\\\\\\\"",\\\\n      \\\\\\\""metadata\\\\\\\"": {\\\\n        \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf3\\\\\\\"",\\\\n        \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\"",\\\\n        \\\\\\\""mtime\\\\\\\"": null,\\\\n        \\\\\\\""page_number\\\\\\\"": 3,\\\\n        \\\\\\\""stats\\\\\\\"": {\\\\n          \\\\\\\""tiktokens\\\\\\\"": 551,\\\\n          \\\\\\\""chars\\\\\\\"": 2502,\\\\n          \\\\\\\""lines\\\\\\\"": 35\\\\n        },\\\\n        \\\\\\\""source\\\\\\\"": {\\\\n          \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n        }\\\\n      },\\\\n      \\\\\\\""score\\\\\\\"": 0.403403103351593\\\\n    },\\\\n    {\\\\n      \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfAttention Visualizations\\\\\\\\nInput-Input Layer5\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\nthe verb \\\\\\\\u2018making\\\\\\\\u2019, completing the phrase \\\\\\\\u2018making...more difficult\\\\\\\\u2019. Attentions here shown only for\\\\\\\\nthe word \\\\\\\\u2018making\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\n13\\\\\\\"",\\\\n      \\\\\\\""metadata\\\\\\\"": {\\\\n        \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf12\\\\\\\"",\\\\n        \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""2ab3047247294a730f42d2e9fb421bfa7bcf724d98adf2714c6566d1d3199abd\\\\\\\"",\\\\n        \\\\\\\""mtime\\\\\\\"": null,\\\\n        \\\\\\\""page_number\\\\\\\"": 12,\\\\n        \\\\\\\""stats\\\\\\\"": {\\\\n          \\\\\\\""tiktokens\\\\\\\"": 254,\\\\n          \\\\\\\""chars\\\\\\\"": 833,\\\\n          \\\\\\\""lines\\\\\\\"": 73\\\\n        },\\\\n        \\\\\\\""source\\\\\\\"": {\\\\n          \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n        }\\\\n      },\\\\n      \\\\\\\""score\\\\\\\"": 0.42596590518951416\\\\n    },\\\\n    {\\\\n      \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\nscholarly works.\\\\\\\\nAttention Is All You Need\\\\\\\\nAshish Vaswani\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nusz@google.com\\\\\\\\nLlion Jones\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\u2217 \\\\\\\\u2020\\\\\\\\nUniversity of Toronto\\\\\\\\naidan@cs.toronto.edu\\\\\\\\u0141ukasz Kaiser\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nlukaszkaiser@google.com\\\\\\\\nIllia Polosukhin\\\\\\\\u2217 \\\\\\\\u2021\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\nAbstract\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\nlarge and limited training data.\\\\\\\\n\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\nour research.\\\\\\\\n\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\n\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\"",\\\\n      \\\\\\\""metadata\\\\\\\"": {\\\\n        \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf0\\\\\\\"",\\\\n        \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\"",\\\\n        \\\\\\\""mtime\\\\\\\"": null,\\\\n        \\\\\\\""page_number\\\\\\\"": 0,\\\\n        \\\\\\\""stats\\\\\\\"": {\\\\n          \\\\\\\""tiktokens\\\\\\\"": 668,\\\\n          \\\\\\\""chars\\\\\\\"": 2874,\\\\n          \\\\\\\""lines\\\\\\\"": 50\\\\n        },\\\\n        \\\\\\\""source\\\\\\\"": {\\\\n          \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n        }\\\\n      },\\\\n      \\\\\\\""score\\\\\\\"": 0.4357953667640686\\\\n    }\\\\n  ]\\\\n]\\\"", \\\""children\\\"": [\\\""{\\\\\\\""attributes\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""retrieval.documents\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""[\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.403403103351593,\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.metadata\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf3\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 3,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 551,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 2502,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 35\\\\\\\\\\\\\\\\n            },\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\\\\\\\\\n            }\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Title: 1706.03762.pdfAttention Visualizations\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nInput-Input Layer5\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe verb \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2019, completing the phrase \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2018making...more difficult\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2019. Attentions here shown only for\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe word \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n13\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.42596590518951416,\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.metadata\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf12\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""2ab3047247294a730f42d2e9fb421bfa7bcf724d98adf2714c6566d1d3199abd\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 12,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 254,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 833,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 73\\\\\\\\\\\\\\\\n            },\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\\\\\\\\\n            }\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.4357953667640686,\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.metadata\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 668,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 2874,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 50\\\\\\\\\\\\\\\\n            },\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\\\\\\\\\n            }\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""retrieval.query\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""how to improve Attension calculation efficiency?\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""span_type\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""Retrieval\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""context\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""span_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""0xcc74e3c1dde67fce\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""trace_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""trace_state\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""end_time\\\\\\\"": \\\\\\\""2024-02-05T15:56:05.629362\\\\\\\"", \\\\\\\""events\\\\\\\"": \\\\\\\""[]\\\\\\\"", \\\\\\\""kind\\\\\\\"": \\\\\\\""SpanKind.INTERNAL\\\\\\\"", \\\\\\\""links\\\\\\\"": \\\\\\\""[]\\\\\\\"", \\\\\\\""name\\\\\\\"": \\\\\\\""search\\\\\\\"", \\\\\\\""parent_id\\\\\\\"": \\\\\\\""0x2b2a902ea98f7623\\\\\\\"", \\\\\\\""resource\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""attributes\\\\\\\\\\\\\\\"":{\\\\\\\\\\\\\\\""service.name\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\""},\\\\\\\\\\\\\\\""schema_url\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""start_time\\\\\\\"": \\\\\\\""2024-02-05T15:56:05.081516\\\\\\\"", \\\\\\\""status\\\\\\\"": \\\\\\\""UNSET\\\\\\\"", \\\\\\\""trace_id\\\\\\\"": \\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\"", \\\\\\\""span_id\\\\\\\"": \\\\\\\""0xcc74e3c1dde67fce\\\\\\\"", \\\\\\\""span_type\\\\\\\"": \\\\\\\""Retrieval\\\\\\\"", \\\\\\\""framework\\\\\\\"": null, \\\\\\\""input\\\\\\\"": null, \\\\\\\""output\\\\\\\"": null, \\\\\\\""children\\\\\\\"": [\\\\\\\""{\\\\\\\\\\\\\\\""attributes\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""flow_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""framework\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""function\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""openai.resources.embeddings.Embeddings.create\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""inputs\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""input\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      5269,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      311,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      7417,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      7867,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      2711,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      22702,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      15374,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      30\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    ]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""text-embedding-ada-002\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""line_run_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""d13da436-d3ad-4905-9aae-2dfc0cb2b538\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""node_name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""vector_lookup\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""output\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""data\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""embedding\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023424657061696053,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03388490527868271,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03262566775083542,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03462899848818779,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004618392325937748,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016799356788396835,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024168752133846283,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018659593537449837,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028690556064248085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027273913845419884,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.031051622703671455,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02695910446345806,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0008746684179641306,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.040209706872701645,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0036990067455917597,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004317892715334892,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01874545030295849,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015983715653419495,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006267562508583069,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014896193519234657,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.033341143280267715,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014638622291386127,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0027188058011233807,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004189107101410627,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004396595060825348,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010016652755439281,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022637635469436646,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017257262021303177,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005938444286584854,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029062602669000626,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023667918518185616,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0001414181460859254,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00321963825263083,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028189722448587418,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012892862781882286,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002756368136033416,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009422807954251766,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0071404422633349895,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04023832455277443,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011197187006473541,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03191019222140312,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005598593503236771,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003139147302135825,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012993029318749905,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007655584719032049,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02074878104031086,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0016294947126880288,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023954110220074654,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03027890995144844,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01565459743142128,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005337445065379143,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030622338876128197,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01347955223172903,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001774378470145166,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006088694091886282,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004396595060825348,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02504163235425949,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01595509611070156,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014445444568991661,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007186948321759701,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007097513880580664,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005541355349123478,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005691605154424906,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012299018912017345,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017185714095830917,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0033108615316450596,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005441188812255859,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007308579050004482,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016956761479377747,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007634120527654886,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018874235451221466,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03196743130683899,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005308825988322496,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016040952876210213,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.037548139691352844,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024326156824827194,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019589710980653763,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008070560172200203,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024826988577842712,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020619995892047882,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001709091360680759,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0010016652522608638,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002266267780214548,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027059271931648254,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0010445937514305115,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0007025072118267417,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021593041718006134,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010717818513512611,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020290875807404518,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0032035401090979576,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01772947609424591,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0193464495241642,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.038807373493909836,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011848269030451775,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014710170216858387,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013193362392485142,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021521493792533875,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024454941973090172,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019231973215937614,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017915498465299606,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        4.545084266283084e-06,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0019604021217674017,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.040495894849300385,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011547769419848919,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006811324041336775,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0114476028829813,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006242521107196808,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006668228656053543,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02280934900045395,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008778880350291729,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006045765243470669,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026844630017876625,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003604206256568432,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0027617341838777065,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0020033305045217276,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0025417255237698555,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005634367000311613,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0065644849091768265,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.033856287598609924,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029205696657299995,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011333126574754715,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018573736771941185,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03182433545589447,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012599518522620201,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007841608487069607,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02532782219350338,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018072903156280518,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005802503786981106,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022866586223244667,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02459803782403469,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003475420642644167,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029935482889413834,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012742613442242146,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012978719547390938,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022952444851398468,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0025882315821945667,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013665576465427876,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009286868385970592,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.037261947989463806,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0021750445012003183,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007054585497826338,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023438967764377594,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006525133736431599,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02569986879825592,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013887373730540276,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.038292232900857925,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02703065238893032,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03328390419483185,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002790353260934353,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0005218497244641185,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0005191667005419731,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014710170216858387,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004042434971779585,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013021648861467838,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004199839197099209,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00031816287082619965,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022537468001246452,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004300005733966827,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008735951967537403,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0285760797560215,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018874235451221466,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005913402419537306,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008363905362784863,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010474557057023048,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020548447966575623,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02303830161690712,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005462653003633022,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007104668766260147,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0009135723812505603,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001971134217455983,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0073336209170520306,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02866193652153015,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006464318372309208,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013164743781089783,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004772219341248274,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002786775818094611,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.037176091223955154,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0009497933206148446,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008485536091029644,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02591451071202755,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0015624189982190728,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008771725930273533,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010367235168814659,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013021648861467838,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022709183394908905,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013501016423106194,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007641274947673082,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00038568585296161473,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008034786209464073,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025900201871991158,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019747115671634674,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004428791347891092,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.036575090140104294,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023811014369130135,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.6250391006469727,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020290875807404518,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010145437903702259,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02497008442878723,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00012777939264196903,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00421057129278779,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0012011040234938264,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004976130090653896,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02784629538655281,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01638438180088997,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007433787453919649,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0027205944061279297,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0017877935897558928,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00937987957149744,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009995188564062119,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0276030320674181,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0033680994529277086,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028604697436094284,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0008308455580845475,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004271387122571468,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02097773179411888,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021092208102345467,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013880218379199505,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019460925832390785,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006450009066611528,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024841299280524254,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0023324491921812296,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016599023714661598,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012706839479506016,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0202336385846138,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016885215416550636,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002307407557964325,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014388206414878368,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026028987020254135,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.05720939487218857,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020548447966575623,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019174735993146896,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017443284392356873,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02585727348923683,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04976845532655716,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01823030784726143,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03402800112962723,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022008016705513,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018187379464507103,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024340465664863586,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011347436346113682,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006428544409573078,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010331462137401104,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004181952681392431,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03377043083310127,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005670140963047743,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01129735354334116,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014982050284743309,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005448343697935343,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0026168504264205694,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002895885845646262,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005827545654028654,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016112500801682472,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011833959259092808,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009365569800138474,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014330968260765076,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025141797959804535,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006936531979590654,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01107555627822876,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02392549067735672,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010188366286456585,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0026329488027840853,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02369653806090355,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018917163833975792,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03359871357679367,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010767901316285133,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02140701748430729,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016999689862132072,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03505828604102135,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03751951828598976,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004779374226927757,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016999689862132072,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003541602287441492,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013651266694068909,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014602848328649998,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0014568864135071635,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0033341143280267715,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02900536358356476,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015010669827461243,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0023181396536529064,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023539133369922638,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0006407974869944155,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018416332080960274,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010245604440569878,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006528710946440697,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010295688174664974,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00106158631388098,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008685869164764881,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0369185209274292,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01698538102209568,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004049589391797781,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016370072960853577,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011211495846509933,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.040581751614809036,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010767901316285133,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012313327752053738,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01521100290119648,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004872385878115892,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009072225540876389,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027946460992097855,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011397520080208778,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007555418182164431,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0031284152064472437,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.041984084993600845,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0016277061076834798,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005230123642832041,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006442854180932045,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0046040830202400684,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015926478430628777,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006163818761706352,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03966594487428665,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02541367895901203,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012864244170486927,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021507184952497482,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013300684280693531,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005541355349123478,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0011376055190339684,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03205328807234764,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.041239991784095764,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008185036480426788,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014202182181179523,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01565459743142128,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0056415218859910965,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015125145204365253,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010717818513512611,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002200086135417223,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005258742719888687,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0039064944721758366,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001746653812006116,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022637635469436646,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0012896440457552671,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015010669827461243,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018516497686505318,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004174797795712948,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02850453183054924,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017171405255794525,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010603342205286026,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01764361746609211,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.05088459700345993,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021664589643478394,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0060815392062067986,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0008558871923014522,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029048291966319084,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005448343697935343,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0014801393263041973,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0007897057221271098,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0025470915716141462,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015926478430628777,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007326466031372547,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009952260181307793,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024340465664863586,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009480046108365059,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03225362300872803,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0215644221752882,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03377043083310127,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013536790385842323,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022036636248230934,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027002032846212387,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0025739220436662436,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015497192740440369,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016641952097415924,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014638622291386127,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.032969098538160324,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04393017664551735,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02517041750252247,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001309319632127881,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03027890995144844,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005408992525190115,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01913180574774742,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013050267472863197,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014939121901988983,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029291553422808647,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0237823948264122,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001782427541911602,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015368406660854816,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021449945867061615,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025971749797463417,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020047614350914955,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010145437903702259,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03102300502359867,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0065895263105630875,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002287731971591711,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011984209530055523,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0021696784533560276,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02864762581884861,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00632837787270546,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01332930289208889,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015497192740440369,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01735742762684822,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00012565533688757569,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017242951318621635,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019017331302165985,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00520508224144578,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004668475594371557,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016570406034588814,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03943699225783348,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025871582329273224,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029592053964734077,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024311846122145653,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013966076076030731,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010603342205286026,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013393695466220379,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02547091618180275,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007555418182164431,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02268056385219097,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004968975204974413,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023753777146339417,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01472447905689478,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005938444286584854,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003734780475497246,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015511502511799335,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007158329244703054,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020104853436350822,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008471226319670677,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01288570836186409,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023939799517393112,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015597359277307987,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02694479562342167,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007186948321759701,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0058633191511034966,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003960155416280031,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023896871134638786,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03605994954705238,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02325294353067875,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01173379272222519,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027660271152853966,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013050267472863197,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017386047169566154,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0008769042906351388,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02790353260934353,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010918151587247849,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012077221646904945,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00022682799317408353,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01721433363854885,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00018647071556188166,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004103250335901976,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007498180028051138,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006042188033461571,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0030586563516408205,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0005987632903270423,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00524443294852972,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.05783901363611221,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025971749797463417,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01594078727066517,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022866586223244667,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01854511722922325,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01059618778526783,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01602664403617382,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013171898201107979,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008850428275763988,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004160488024353981,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012019983492791653,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009558748453855515,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011783876456320286,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03731918707489967,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007076049689203501,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014123479835689068,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015668906271457672,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019618330523371696,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011683709919452667,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007301424164324999,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00010368800576543435,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006038610823452473,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0074910251423716545,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011089865118265152,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0041461787186563015,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029262935742735863,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00251131784170866,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026229320093989372,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019790044054389,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011533459648489952,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.031280577182769775,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005874051246792078,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019375069066882133,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011068400926887989,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.036746807396411896,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029363101348280907,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021135136485099792,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005237278528511524,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009594522416591644,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026315176859498024,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003543390892446041,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023295871913433075,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0005799820646643639,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0003329195606056601,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002271633828058839,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007083204574882984,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0007324677426367998,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012749767862260342,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0026436808984726667,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00897205900400877,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02554246410727501,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013121815398335457,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015125145204365253,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010732128284871578,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0085642384365201,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011347436346113682,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03116609901189804,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00867871381342411,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0012923270696774125,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014001849107444286,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011111329309642315,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029735149815678596,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005924134515225887,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00845691654831171,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004042434971779585,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024240300059318542,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003171343822032213,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017114166170358658,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013980384916067123,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00010514131281524897,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005788194481283426,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0027814097702503204,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02436908520758152,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.05082735791802406,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003473632037639618,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019990377128124237,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0037777090910822153,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019661258906126022,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04289989173412323,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007068894803524017,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01307173166424036,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012764077633619308,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006117312703281641,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007308579050004482,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013243446126580238,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.032225001603364944,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03520137816667557,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017743784934282303,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017171405255794525,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013930302113294601,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011969899758696556,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005659408867359161,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022050945088267326,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018502188846468925,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01141182892024517,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026043297722935677,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019904520362615585,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0005495743826031685,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010581878013908863,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017185714095830917,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015611669048666954,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0022609014995396137,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02401134744286537,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018444949761033058,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012706839479506016,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017557760700583458,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020662924274802208,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01513945497572422,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011719483882188797,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013937456533312798,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0038313695695251226,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008893356658518314,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015024978667497635,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.035029664635658264,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009014987386763096,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005741688422858715,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024183060973882675,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008328131400048733,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00963745079934597,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02126392349600792,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0006363257416523993,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004249922465533018,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011826804839074612,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009336951188743114,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008614321239292622,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0014711958356201649,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019761424511671066,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0005222968757152557,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003067599842324853,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007033121306449175,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008993523195385933,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01941799744963646,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014223646372556686,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009844938293099403,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03992351517081261,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03050786256790161,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011139948852360249,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020205019041895866,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.05420440062880516,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0038707207422703505,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03188157454133034,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0058633191511034966,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0007539319922216237,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0012967988150194287,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012578054331243038,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020934803411364555,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02039104327559471,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017071237787604332,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002604329725727439,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019546782597899437,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.05139973759651184,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008471226319670677,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005305248778313398,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015268241055309772,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011612161993980408,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007455251645296812,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018573736771941185,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0008894251077435911,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024397704750299454,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027946460992097855,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0009417442488484085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027188057079911232,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007129710167646408,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003033614717423916,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0029048293363302946,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001126873423345387,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0023610680364072323,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009072225540876389,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.000999876530840993,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0027116509154438972,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04830888658761978,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027874913066625595,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03256843239068985,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008027631789445877,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00030810150201432407,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008571392856538296,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004507493693381548,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008056250400841236,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00738370418548584,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017085548490285873,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011368900537490845,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0021821993868798018,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011390364728868008,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002493431093171239,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006178128067404032,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014466908760368824,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019890209659934044,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03070819564163685,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002452291315421462,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014445444568991661,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004421636462211609,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015253931283950806,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0255567729473114,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01682797633111477,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03462899848818779,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006954418960958719,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0010589032899588346,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02612915448844433,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003995928913354874,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020934803411364555,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020992042496800423,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021249612793326378,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0006023406749591231,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01126157958060503,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009630296379327774,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02569986879825592,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012685375288128853,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018588045611977577,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013687040656805038,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015253931283950806,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003396718529984355,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.06256115436553955,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020333804190158844,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02531351149082184,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02082032896578312,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01052463985979557,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007505334913730621,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013608338311314583,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002838647924363613,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012506506405770779,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007340775337070227,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008041941560804844,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02999272011220455,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017700856551527977,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012728303670883179,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018416332080960274,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00797754805535078,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008063405752182007,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002606118330731988,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014330968260765076,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04839474335312843,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018130142241716385,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02451217919588089,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028590388596057892,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008371059782803059,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012012828141450882,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024268917739391327,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024340465664863586,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027230985462665558,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007301424164324999,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013787207193672657,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0034468017984181643,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012034292332828045,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0011769566917791963,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0009220686624757946,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022537468001246452,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007741441484540701,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0045861960388720036,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017443284392356873,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02703065238893032,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0072477636858820915,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005319558084011078,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022923825308680534,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018430640920996666,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005380373448133469,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014094861224293709,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014853265136480331,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03308357298374176,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0012726514833047986,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004782951436936855,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009286868385970592,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01495343167334795,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04247060790657997,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0023557019885629416,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004879540763795376,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04424498602747917,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024225989356637,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0096732247620821,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007254918571561575,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0116694001480937,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01307173166424036,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01358687411993742,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.042127180844545364,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0024809101596474648,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021535802632570267,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026386724784970284,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01913180574774742,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02612915448844433,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02273780107498169,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003305495483800769,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018001355230808258,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011061246506869793,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017400356009602547,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0015364829450845718,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0009873557137325406,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0012547646183520555,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01647023856639862,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.000512906291987747,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02421168051660061,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009065071120858192,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0007901529315859079,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02481267973780632,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018044283613562584,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009358415380120277,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019160425290465355,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015182383358478546,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019761424511671066,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0015677850460633636,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02790353260934353,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008735951967537403,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013443779200315475,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00251131784170866,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001997964456677437,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001210047397762537,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009387034922838211,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004815148189663887,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0011358169140294194,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02401134744286537,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005569974426180124,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015268241055309772,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024111513048410416,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028089556843042374,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019790044054389,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01778671331703663,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008278047665953636,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0353158563375473,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02451217919588089,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009608832187950611,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01218454260379076,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020877566188573837,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019003020599484444,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016184048727154732,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.031709861010313034,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03070819564163685,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0118911974132061,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011791030876338482,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0018709676805883646,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01325775496661663,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02924862504005432,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02037673257291317,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01823030784726143,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018945783376693726,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017085548490285873,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006968728266656399,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0107822110876441,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01742897555232048,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020061925053596497,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01355110015720129,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0010553259635344148,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004872385878115892,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.038206376135349274,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01867390237748623,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015296859666705132,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013121815398335457,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0015955097042024136,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013765743002295494,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007855917327105999,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03631751984357834,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02910553105175495,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.032081905752420425,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024555109441280365,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020763089880347252,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018144451081752777,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007158329244703054,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008650095202028751,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010646270588040352,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001974711427465081,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0034020845778286457,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014102015644311905,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019518163055181503,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01074643712490797,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015769073739647865,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0014559919945895672,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025241965427994728,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028018008917570114,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01906025968492031,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011211495846509933,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021249612793326378,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013522481545805931,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013966076076030731,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013322148472070694,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006664651446044445,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011948435567319393,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0023557019885629416,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009129463694989681,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0060815392062067986,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012871398590505123,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01831616461277008,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026558438315987587,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0008965798770077527,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009909331798553467,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007405168376863003,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029964100569486618,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03757675737142563,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.028690556064248085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029592053964734077,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018788378685712814,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012392030097544193,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010023807175457478,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01126157958060503,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020290875807404518,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00012699684884864837,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02392549067735672,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007662739139050245,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013908837921917439,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010581878013908863,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011798186227679253,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002640103455632925,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006428544409573078,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0035934741608798504,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01764361746609211,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023725157603621483,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02355344407260418,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013443779200315475,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01107555627822876,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00852846447378397,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018816998228430748,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02103497087955475,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030250290408730507,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0075124893337488174,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0353158563375473,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01586923934519291,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013543945737183094,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004618392325937748,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0035111946053802967,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022108184173703194,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004264232236891985,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02104927971959114,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01403046865016222,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0020730893593281507,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0002857428917195648,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.028776412829756737,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026858938857913017,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0016599023947492242,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0063462648540735245,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014838955365121365,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020190710201859474,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01399469468742609,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00808486994355917,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0024093626998364925,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022251278162002563,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014710170216858387,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01476740837097168,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016570406034588814,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04141170531511307,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013937456533312798,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01727157086133957,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001257447642274201,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003953000530600548,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014431134797632694,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007440941873937845,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04613383859395981,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02282365784049034,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01698538102209568,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016584714874625206,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027273913845419884,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01810152269899845,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005630789790302515,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006528710946440697,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022981062531471252,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.033570095896720886,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006271140184253454,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004160488024353981,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0036668104585260153,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007612655870616436,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01085375901311636,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02039104327559471,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021907851099967957,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010538949631154537,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027273913845419884,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02637241594493389,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00819934532046318,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0005688027595169842,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024469250813126564,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00365607813000679,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011533459648489952,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0025327822659164667,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0036417688243091106,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.000766452809330076,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01462431252002716,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03471485525369644,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011333126574754715,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028375746682286263,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011054092086851597,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014130635187029839,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01262813713401556,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009766235947608948,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006485782563686371,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018115831539034843,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023739466443657875,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013522481545805931,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01787257008254528,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016999689862132072,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00014868468861095607,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014996360056102276,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030250290408730507,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019389377906918526,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020791709423065186,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004300005733966827,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014381051063537598,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013064577244222164,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0066503421403467655,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007319311145693064,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0018495033727958798,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0006233577732928097,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03505828604102135,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0025918087922036648,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0006188860279507935,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008628631010651588,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014481217600405216,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0044752974063158035,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01151199545711279,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0032214270904660225,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010839449241757393,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003232159186154604,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02303830161690712,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00944427214562893,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0014711958356201649,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015611669048666954,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004267809446901083,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015368406660854816,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012198852375149727,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023582061752676964,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018859926611185074,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.23112711310386658,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016112500801682472,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020992042496800423,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0370902344584465,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015182383358478546,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015697525814175606,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023968419060111046,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012399185448884964,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017114166170358658,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025571083649992943,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006990192458033562,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016727810725569725,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04576179385185242,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0019335716497153044,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008435452356934547,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011876888573169708,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.05228692665696144,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02784629538655281,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028604697436094284,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012127304449677467,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03434281051158905,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.000821902125608176,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013629802502691746,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022981062531471252,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030364766716957092,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03136643394827843,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014080551452934742,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002598963677883148,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023653609678149223,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013529635965824127,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03345562145113945,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009787701070308685,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007240608800202608,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003155245678499341,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02836143597960472,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009286868385970592,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007215567398816347,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006221056915819645,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02607191540300846,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010073890909552574,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008514154702425003,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01240633986890316,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02282365784049034,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00022235627693589777,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015039288438856602,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012535125017166138,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01513945497572422,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017386047169566154,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0005084345466457307,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02044828049838543,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030479243025183678,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004561154171824455,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02547091618180275,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012091530486941338,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009437117725610733,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005412569735199213,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0036435574293136597,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0004368870286270976,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016971072182059288,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04144032299518585,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015983715653419495,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009866402484476566,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009365569800138474,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03056509979069233,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007991857826709747,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006707579828798771,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026243630796670914,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010825139470398426,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014295194298028946,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023396039381623268,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002786775818094611,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027488557621836662,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011540614999830723,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001717140432447195,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.047650646418333054,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008943439461290836,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016284216195344925,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013408005237579346,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0011295564472675323,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02607191540300846,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010925306007266045,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025571083649992943,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0011438659857958555,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0042535001412034035,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026830319315195084,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026830319315195084,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008793190121650696,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011404674500226974,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020190710201859474,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008578547276556492,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004507493693381548,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007741441484540701,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02162165939807892,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007634120527654886,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0007812094991095364,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002865478163585067,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016742119565606117,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02341034822165966,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0012744402047246695,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004153333604335785,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02001899667084217,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014781717211008072,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007083204574882984,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0045003388077020645,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004754332825541496,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01705692894756794,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016641952097415924,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0029119839891791344,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013100351206958294,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014237956143915653,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008871892467141151,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03565928339958191,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006693270523101091,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002679454628378153,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006636032368987799,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0012896440457552671,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023954110220074654,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00013918228796683252,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018416332080960274,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0251131784170866,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03116609901189804,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01898871175944805,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010367235168814659,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01764361746609211,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014102015644311905,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014638622291386127,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04687793552875519,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005036945454776287,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014073397032916546,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029935482889413834,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0022930980194360018,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026601368561387062,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019589710980653763,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015597359277307987,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02000468596816063,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012349101714789867,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010896687395870686,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017672237008810043,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008893356658518314,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0008308455580845475,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011504841037094593,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020061925053596497,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01742897555232048,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00050306849880144,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025013012811541557,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011676555499434471,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029592053964734077,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019532471895217896,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002396841999143362,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024912845343351364,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010610497556626797,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004103250335901976,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0032214270904660225,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011791030876338482,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01380867138504982,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004296428523957729,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012742613442242146,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.033054955303668976,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017457595095038414,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01625559665262699,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -9.547122317599133e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0012243569362908602,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011934125795960426,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00435724388808012,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009165237657725811,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00439301785081625,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.18545116484165192,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010739282704889774,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.028776412829756737,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030908528715372086,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02296675369143486,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004575463943183422,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024941464886069298,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014123479835689068,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026028987020254135,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008879046887159348,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013157588429749012,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0014837166527286172,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029119839891791344,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02044828049838543,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008650095202028751,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012241780757904053,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014352432452142239,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009086535312235355,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009551594033837318,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020791709423065186,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025356439873576164,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009573058225214481,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01647023856639862,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011461912654340267,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0054233018308877945,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011490531265735626,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02465527504682541,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0028923084028065205,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006718311924487352,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029706530272960663,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001210047397762537,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01714278571307659,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011626471765339375,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006113735493272543,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016427310183644295,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005519891157746315,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023496204987168312,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020920494571328163,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004518225789070129,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015683216974139214,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02650120109319687,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024855608120560646,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023095538839697838,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017228642478585243,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0033734655007719994,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00575957540422678,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014924812130630016,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04584765061736107,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0050691417418420315,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02725960500538349,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025456607341766357,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014652932062745094,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010939615778625011,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021321160718798637,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01734311878681183,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0031838645227253437,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008170726709067822,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017829641699790955,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0174862127751112,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002733115339651704,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015439954586327076,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007151174359023571,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03640337660908699,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007419477682560682,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007290692068636417,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006814901251345873,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009308332577347755,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006900758016854525,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009945104829967022,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023653609678149223,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010975389741361141,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013894528150558472,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01103978231549263,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018645282834768295,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015511502511799335,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029119839891791344,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021807683631777763,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010882377624511719,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03794880583882332,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007948929443955421,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011919816955924034,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03391352295875549,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0010589032899588346,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010989698581397533,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01631283387541771,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0030425582081079483,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01384444534778595,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004682784900069237,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0002709862310439348,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012671065516769886,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04341503605246544,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04447393864393234,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006489359773695469,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005112070124596357,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.050541166216135025,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030107196420431137,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004049589391797781,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012735458090901375,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029563434422016144,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0010910996934399009,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00897205900400877,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004167642910033464,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018416332080960274,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0005853481125086546,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011089865118265152,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0032428912818431854,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001219885190948844,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01041016448289156,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010538949631154537,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0101168192923069,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022194040939211845,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006446431390941143,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0014649354852735996,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006138777360320091,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001328995218500495,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024540798738598824,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0022269166074693203,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001330783823505044,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011161413043737411,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018344784155488014,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03966594487428665,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010789365507662296,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024612346664071083,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0002432615583529696,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009551594033837318,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0237823948264122,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.1160786971449852,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03225362300872803,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02355344407260418,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027302533388137817,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011848269030451775,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00020804676751140505,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005820390768349171,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004679207690060139,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01771516539156437,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0326542891561985,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0025345708709210157,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015239621512591839,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007405168376863003,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013322148472070694,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004310737829655409,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011454758234322071,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012835624627768993,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020949114114046097,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018516497686505318,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020491208881139755,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007165484130382538,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024984393268823624,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03125195577740669,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004403749946504831,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03952284902334213,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003763399552553892,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009243939071893692,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012349101714789867,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01155492477118969,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02266625314950943,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011977055110037327,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011354591697454453,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001376395346596837,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0101168192923069,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.000986461411230266,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009522974491119385,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028933817520737648,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01780102215707302,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0014863996766507626,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018845615908503532,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004353666678071022,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005934866610914469,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008449762128293514,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006163818761706352,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017314499244093895,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007519644219428301,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01677073910832405,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02444063313305378,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007505334913730621,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016885215416550636,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.033112190663814545,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004346511792391539,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025141797959804535,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011068400926887989,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021449945867061615,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028161102905869484,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008356750011444092,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002568555995821953,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01624128594994545,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0020230060908943415,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010066735558211803,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016069572418928146,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010846603661775589,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03514414280653,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04905297979712486,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        8.507446909788996e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008592857047915459,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01269968505948782,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004697094671428204,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005366064142435789,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024855608120560646,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016298525035381317,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013121815398335457,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017886878922581673,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02939172089099884,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00044493612949736416,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007948929443955421,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018430640920996666,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018187379464507103,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011082710698246956,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.040724847465753555,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018058594316244125,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011097020469605923,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018187379464507103,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00020335146109573543,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0121129946783185,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018487878143787384,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027803365141153336,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0170426182448864,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03162400424480438,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014495527371764183,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02502732165157795,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01594078727066517,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0180156659334898,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00055851781507954,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027445629239082336,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013193362392485142,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0016867327503859997,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015082216821610928,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010352926328778267,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0023735889699310064,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010309997946023941,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04868093132972717,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019303521141409874,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02103497087955475,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008549928665161133,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009136618115007877,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013508171774446964,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025356439873576164,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0027957193087786436,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012807006016373634,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01081082969903946,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022766420617699623,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004353666678071022,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.032453954219818115,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01532547827810049,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004686362575739622,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020419662818312645,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029363101348280907,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0007977548521012068,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018731139600276947,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0307940524071455,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012620982713997364,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004350089002400637,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011268734000623226,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00926540419459343,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01303595770150423,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010066735558211803,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002103497041389346,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017071237787604332,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02090618573129177,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023882562294602394,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0026096957735717297,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00808486994355917,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012513660825788975,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026114843785762787,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010767901316285133,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008471226319670677,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010646270588040352,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012499351985752583,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016656262800097466,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024712512269616127,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009186701849102974,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0025220499373972416,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004568309057503939,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028032317757606506,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008857582695782185,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005602170713245869,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006428544409573078,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008507000282406807,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013136124238371849,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001126873423345387,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03153814747929573,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009866402484476566,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026300868019461632,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0024826989974826574,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0031141056679189205,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021020662039518356,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01558304950594902,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01303595770150423,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013393695466220379,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04830888658761978,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017099857330322266,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008406833745539188,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0025578239001333714,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019890209659934044,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010567568242549896,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006986615248024464,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0067827049642801285,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02371084876358509,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009887867607176304,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024168752133846283,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010088199749588966,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023911181837320328,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00963745079934597,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008557083085179329,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02326725237071514,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0085213091224432,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003584530670195818,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00709035899490118,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005688027944415808,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030536482110619545,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021106518805027008,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022766420617699623,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01867390237748623,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014531301334500313,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.033999379724264145,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004056744277477264,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011161413043737411,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02348189614713192,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0018548694206401706,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00039619437302462757,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0023413924500346184,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0063212234526872635,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017157094553112984,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02140701748430729,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010882377624511719,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03926527872681618,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016484549269080162,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003838524455204606,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03070819564163685,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016413001343607903,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004271387122571468,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007158329244703054,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011719483882188797,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010581878013908863,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016713500022888184,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00893628504127264,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008907666429877281,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023539133369922638,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        6.282766844378784e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02051982842385769,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018516497686505318,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010174057446420193,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01830185577273369,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004128291737288237,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008735951967537403,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025456607341766357,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014867574907839298,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011268734000623226,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014144944958388805,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005451920907944441,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0064786276780068874,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005934866610914469,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02266625314950943,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0015812001656740904,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.028075246140360832,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006940109189599752,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0070045022293925285,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03897908702492714,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009036451578140259,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003364522010087967,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007748596370220184,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005713069345802069,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017958426848053932,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019003020599484444,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007405168376863003,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016942452639341354,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004511070903390646,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020290875807404518,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01986159197986126,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.07978979498147964,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005813235882669687,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0030389807652682066,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02999272011220455,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018044283613562584,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013207672163844109,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005376796238124371,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006489359773695469,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02312415838241577,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.039093565195798874,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0009345894795842469,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004049589391797781,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01222031656652689,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016198357567191124,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0012243569362908602,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014330968260765076,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004997594282031059,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022194040939211845,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005019058473408222,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014137789607048035,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022408682852983475,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01625559665262699,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010467401705682278,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012256089597940445,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012062911875545979,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005809658672660589,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02296675369143486,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008635785430669785,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004997594282031059,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04387293756008148,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004110404755920172,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0002998288255184889,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00849269051104784,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014395360834896564,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011826804839074612,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016284216195344925,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009873557835817337,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006070807110518217,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029033983126282692,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.040867943316698074,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005788194481283426,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023868251591920853,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03139505162835121,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013214826583862305,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020362423732876778,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0016053474973887205,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0029942637775093317,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001788688008673489,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.049138836562633514\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      ],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""index\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""embedding\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""ada\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""list\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""usage\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""prompt_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 8,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""total_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 8\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""root_run_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""span_type\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""LLM\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""context\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""span_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""0xb9ecba887c183cc1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""trace_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""trace_state\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""end_time\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""2024-02-05T15:56:05.610954\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""events\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""kind\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""SpanKind.INTERNAL\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""links\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""name\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""openai.resources.embeddings.Embeddings.create\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""parent_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""0xcc74e3c1dde67fce\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""resource\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""attributes\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""service.name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""schema_url\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""start_time\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""2024-02-05T15:56:05.086224\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""status\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""OK\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""trace_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""span_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""0xb9ecba887c183cc1\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""span_type\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""LLM\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""framework\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""input\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""input\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n    [\\\\\\\\\\\\\\\\n      5269,\\\\\\\\\\\\\\\\n      311,\\\\\\\\\\\\\\\\n      7417,\\\\\\\\\\\\\\\\n      7867,\\\\\\\\\\\\\\\\n      2711,\\\\\\\\\\\\\\\\n      22702,\\\\\\\\\\\\\\\\n      15374,\\\\\\\\\\\\\\\\n      30\\\\\\\\\\\\\\\\n    ]\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""text-embedding-ada-002\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""output\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""data\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""embedding\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n        -0.023424657061696053,\\\\\\\\\\\\\\\\n        0.03388490527868271,\\\\\\\\\\\\\\\\n        0.03262566775083542,\\\\\\\\\\\\\\\\n        -0.03462899848818779,\\\\\\\\\\\\\\\\n        0.004618392325937748,\\\\\\\\\\\\\\\\n        0.016799356788396835,\\\\\\\\\\\\\\\\n        -0.024168752133846283,\\\\\\\\\\\\\\\\n        -0.018659593537449837,\\\\\\\\\\\\\\\\n        -0.028690556064248085,\\\\\\\\\\\\\\\\n        -0.027273913845419884,\\\\\\\\\\\\\\\\n        0.031051622703671455,\\\\\\\\\\\\\\\\n        0.02695910446345806,\\\\\\\\\\\\\\\\n        -0.0008746684179641306,\\\\\\\\\\\\\\\\n        0.040209706872701645,\\\\\\\\\\\\\\\\n        0.0036990067455917597,\\\\\\\\\\\\\\\\n        0.004317892715334892,\\\\\\\\\\\\\\\\n        0.01874545030295849,\\\\\\\\\\\\\\\\n        0.015983715653419495,\\\\\\\\\\\\\\\\n        0.006267562508583069,\\\\\\\\\\\\\\\\n        -0.014896193519234657,\\\\\\\\\\\\\\\\n        -0.033341143280267715,\\\\\\\\\\\\\\\\n        0.014638622291386127,\\\\\\\\\\\\\\\\n        0.0027188058011233807,\\\\\\\\\\\\\\\\n        -0.004189107101410627,\\\\\\\\\\\\\\\\n        -0.004396595060825348,\\\\\\\\\\\\\\\\n        -0.010016652755439281,\\\\\\\\\\\\\\\\n        0.022637635469436646,\\\\\\\\\\\\\\\\n        -0.017257262021303177,\\\\\\\\\\\\\\\\n        -0.005938444286584854,\\\\\\\\\\\\\\\\n        -0.029062602669000626,\\\\\\\\\\\\\\\\n        0.023667918518185616,\\\\\\\\\\\\\\\\n        -0.0001414181460859254,\\\\\\\\\\\\\\\\n        0.00321963825263083,\\\\\\\\\\\\\\\\n        -0.028189722448587418,\\\\\\\\\\\\\\\\n        -0.012892862781882286,\\\\\\\\\\\\\\\\n        0.002756368136033416,\\\\\\\\\\\\\\\\n        0.009422807954251766,\\\\\\\\\\\\\\\\n        -0.0071404422633349895,\\\\\\\\\\\\\\\\n        0.04023832455277443,\\\\\\\\\\\\\\\\n        -0.011197187006473541,\\\\\\\\\\\\\\\\n        0.03191019222140312,\\\\\\\\\\\\\\\\n        0.005598593503236771,\\\\\\\\\\\\\\\\n        -0.003139147302135825,\\\\\\\\\\\\\\\\n        0.012993029318749905,\\\\\\\\\\\\\\\\n        0.007655584719032049,\\\\\\\\\\\\\\\\n        0.02074878104031086,\\\\\\\\\\\\\\\\n        -0.0016294947126880288,\\\\\\\\\\\\\\\\n        -0.023954110220074654,\\\\\\\\\\\\\\\\n        -0.03027890995144844,\\\\\\\\\\\\\\\\n        0.01565459743142128,\\\\\\\\\\\\\\\\n        0.005337445065379143,\\\\\\\\\\\\\\\\n        0.030622338876128197,\\\\\\\\\\\\\\\\n        -0.01347955223172903,\\\\\\\\\\\\\\\\n        -0.001774378470145166,\\\\\\\\\\\\\\\\n        0.006088694091886282,\\\\\\\\\\\\\\\\n        0.004396595060825348,\\\\\\\\\\\\\\\\n        0.02504163235425949,\\\\\\\\\\\\\\\\n        0.01595509611070156,\\\\\\\\\\\\\\\\n        -0.014445444568991661,\\\\\\\\\\\\\\\\n        -0.007186948321759701,\\\\\\\\\\\\\\\\n        0.007097513880580664,\\\\\\\\\\\\\\\\n        -0.005541355349123478,\\\\\\\\\\\\\\\\n        -0.005691605154424906,\\\\\\\\\\\\\\\\n        0.012299018912017345,\\\\\\\\\\\\\\\\n        -0.017185714095830917,\\\\\\\\\\\\\\\\n        0.0033108615316450596,\\\\\\\\\\\\\\\\n        -0.005441188812255859,\\\\\\\\\\\\\\\\n        -0.007308579050004482,\\\\\\\\\\\\\\\\n        0.016956761479377747,\\\\\\\\\\\\\\\\n        -0.007634120527654886,\\\\\\\\\\\\\\\\n        0.018874235451221466,\\\\\\\\\\\\\\\\n        0.03196743130683899,\\\\\\\\\\\\\\\\n        -0.005308825988322496,\\\\\\\\\\\\\\\\n        -0.016040952876210213,\\\\\\\\\\\\\\\\n        0.037548139691352844,\\\\\\\\\\\\\\\\n        -0.024326156824827194,\\\\\\\\\\\\\\\\n        -0.019589710980653763,\\\\\\\\\\\\\\\\n        -0.008070560172200203,\\\\\\\\\\\\\\\\n        0.024826988577842712,\\\\\\\\\\\\\\\\n        0.020619995892047882,\\\\\\\\\\\\\\\\n        0.001709091360680759,\\\\\\\\\\\\\\\\n        0.0010016652522608638,\\\\\\\\\\\\\\\\n        -0.002266267780214548,\\\\\\\\\\\\\\\\n        0.027059271931648254,\\\\\\\\\\\\\\\\n        0.0010445937514305115,\\\\\\\\\\\\\\\\n        0.0007025072118267417,\\\\\\\\\\\\\\\\n        0.021593041718006134,\\\\\\\\\\\\\\\\n        0.010717818513512611,\\\\\\\\\\\\\\\\n        -0.020290875807404518,\\\\\\\\\\\\\\\\n        0.0032035401090979576,\\\\\\\\\\\\\\\\n        0.01772947609424591,\\\\\\\\\\\\\\\\n        -0.0193464495241642,\\\\\\\\\\\\\\\\n        0.038807373493909836,\\\\\\\\\\\\\\\\n        0.011848269030451775,\\\\\\\\\\\\\\\\n        0.014710170216858387,\\\\\\\\\\\\\\\\n        0.013193362392485142,\\\\\\\\\\\\\\\\n        -0.021521493792533875,\\\\\\\\\\\\\\\\n        0.024454941973090172,\\\\\\\\\\\\\\\\n        -0.019231973215937614,\\\\\\\\\\\\\\\\n        -0.017915498465299606,\\\\\\\\\\\\\\\\n        4.545084266283084e-06,\\\\\\\\\\\\\\\\n        -0.0019604021217674017,\\\\\\\\\\\\\\\\n        -0.040495894849300385,\\\\\\\\\\\\\\\\n        -0.011547769419848919,\\\\\\\\\\\\\\\\n        -0.006811324041336775,\\\\\\\\\\\\\\\\n        -0.0114476028829813,\\\\\\\\\\\\\\\\n        0.006242521107196808,\\\\\\\\\\\\\\\\n        -0.006668228656053543,\\\\\\\\\\\\\\\\n        -0.02280934900045395,\\\\\\\\\\\\\\\\n        0.008778880350291729,\\\\\\\\\\\\\\\\n        -0.006045765243470669,\\\\\\\\\\\\\\\\n        0.026844630017876625,\\\\\\\\\\\\\\\\n        0.003604206256568432,\\\\\\\\\\\\\\\\n        -0.0027617341838777065,\\\\\\\\\\\\\\\\n        -0.0020033305045217276,\\\\\\\\\\\\\\\\n        -0.0025417255237698555,\\\\\\\\\\\\\\\\n        0.005634367000311613,\\\\\\\\\\\\\\\\n        -0.0065644849091768265,\\\\\\\\\\\\\\\\n        -0.033856287598609924,\\\\\\\\\\\\\\\\n        -0.029205696657299995,\\\\\\\\\\\\\\\\n        0.011333126574754715,\\\\\\\\\\\\\\\\n        0.018573736771941185,\\\\\\\\\\\\\\\\n        0.03182433545589447,\\\\\\\\\\\\\\\\n        -0.012599518522620201,\\\\\\\\\\\\\\\\n        -0.007841608487069607,\\\\\\\\\\\\\\\\n        0.02532782219350338,\\\\\\\\\\\\\\\\n        0.018072903156280518,\\\\\\\\\\\\\\\\n        -0.005802503786981106,\\\\\\\\\\\\\\\\n        -0.022866586223244667,\\\\\\\\\\\\\\\\n        -0.02459803782403469,\\\\\\\\\\\\\\\\n        0.003475420642644167,\\\\\\\\\\\\\\\\n        0.029935482889413834,\\\\\\\\\\\\\\\\n        0.012742613442242146,\\\\\\\\\\\\\\\\n        0.012978719547390938,\\\\\\\\\\\\\\\\n        -0.022952444851398468,\\\\\\\\\\\\\\\\n        0.0025882315821945667,\\\\\\\\\\\\\\\\n        0.013665576465427876,\\\\\\\\\\\\\\\\n        0.009286868385970592,\\\\\\\\\\\\\\\\n        -0.037261947989463806,\\\\\\\\\\\\\\\\n        -0.0021750445012003183,\\\\\\\\\\\\\\\\n        0.007054585497826338,\\\\\\\\\\\\\\\\n        0.023438967764377594,\\\\\\\\\\\\\\\\n        0.006525133736431599,\\\\\\\\\\\\\\\\n        -0.02569986879825592,\\\\\\\\\\\\\\\\n        -0.013887373730540276,\\\\\\\\\\\\\\\\n        0.038292232900857925,\\\\\\\\\\\\\\\\n        0.02703065238893032,\\\\\\\\\\\\\\\\n        0.03328390419483185,\\\\\\\\\\\\\\\\n        -0.002790353260934353,\\\\\\\\\\\\\\\\n        0.0005218497244641185,\\\\\\\\\\\\\\\\n        0.0005191667005419731,\\\\\\\\\\\\\\\\n        -0.014710170216858387,\\\\\\\\\\\\\\\\n        0.004042434971779585,\\\\\\\\\\\\\\\\n        0.013021648861467838,\\\\\\\\\\\\\\\\n        -0.004199839197099209,\\\\\\\\\\\\\\\\n        0.00031816287082619965,\\\\\\\\\\\\\\\\n        -0.022537468001246452,\\\\\\\\\\\\\\\\n        0.004300005733966827,\\\\\\\\\\\\\\\\n        -0.008735951967537403,\\\\\\\\\\\\\\\\n        -0.0285760797560215,\\\\\\\\\\\\\\\\n        0.018874235451221466,\\\\\\\\\\\\\\\\n        0.005913402419537306,\\\\\\\\\\\\\\\\n        0.008363905362784863,\\\\\\\\\\\\\\\\n        -0.010474557057023048,\\\\\\\\\\\\\\\\n        0.020548447966575623,\\\\\\\\\\\\\\\\n        0.02303830161690712,\\\\\\\\\\\\\\\\n        -0.005462653003633022,\\\\\\\\\\\\\\\\n        -0.007104668766260147,\\\\\\\\\\\\\\\\n        0.0009135723812505603,\\\\\\\\\\\\\\\\n        0.001971134217455983,\\\\\\\\\\\\\\\\n        0.0073336209170520306,\\\\\\\\\\\\\\\\n        0.02866193652153015,\\\\\\\\\\\\\\\\n        -0.006464318372309208,\\\\\\\\\\\\\\\\n        0.013164743781089783,\\\\\\\\\\\\\\\\n        -0.004772219341248274,\\\\\\\\\\\\\\\\n        -0.002786775818094611,\\\\\\\\\\\\\\\\n        0.037176091223955154,\\\\\\\\\\\\\\\\n        0.0009497933206148446,\\\\\\\\\\\\\\\\n        -0.008485536091029644,\\\\\\\\\\\\\\\\n        -0.02591451071202755,\\\\\\\\\\\\\\\\n        -0.0015624189982190728,\\\\\\\\\\\\\\\\n        0.008771725930273533,\\\\\\\\\\\\\\\\n        0.010367235168814659,\\\\\\\\\\\\\\\\n        0.013021648861467838,\\\\\\\\\\\\\\\\n        -0.022709183394908905,\\\\\\\\\\\\\\\\n        -0.013501016423106194,\\\\\\\\\\\\\\\\n        0.007641274947673082,\\\\\\\\\\\\\\\\n        -0.00038568585296161473,\\\\\\\\\\\\\\\\n        -0.008034786209464073,\\\\\\\\\\\\\\\\n        -0.025900201871991158,\\\\\\\\\\\\\\\\n        0.019747115671634674,\\\\\\\\\\\\\\\\n        -0.004428791347891092,\\\\\\\\\\\\\\\\n        -0.036575090140104294,\\\\\\\\\\\\\\\\n        -0.023811014369130135,\\\\\\\\\\\\\\\\n        -0.6250391006469727,\\\\\\\\\\\\\\\\n        -0.020290875807404518,\\\\\\\\\\\\\\\\n        0.010145437903702259,\\\\\\\\\\\\\\\\n        -0.02497008442878723,\\\\\\\\\\\\\\\\n        0.00012777939264196903,\\\\\\\\\\\\\\\\n        0.00421057129278779,\\\\\\\\\\\\\\\\n        0.0012011040234938264,\\\\\\\\\\\\\\\\n        0.004976130090653896,\\\\\\\\\\\\\\\\n        -0.02784629538655281,\\\\\\\\\\\\\\\\n        0.01638438180088997,\\\\\\\\\\\\\\\\n        0.007433787453919649,\\\\\\\\\\\\\\\\n        0.0027205944061279297,\\\\\\\\\\\\\\\\n        -0.0017877935897558928,\\\\\\\\\\\\\\\\n        -0.00937987957149744,\\\\\\\\\\\\\\\\n        0.009995188564062119,\\\\\\\\\\\\\\\\n        -0.0276030320674181,\\\\\\\\\\\\\\\\n        0.0033680994529277086,\\\\\\\\\\\\\\\\n        -0.028604697436094284,\\\\\\\\\\\\\\\\n        -0.0008308455580845475,\\\\\\\\\\\\\\\\n        0.004271387122571468,\\\\\\\\\\\\\\\\n        -0.02097773179411888,\\\\\\\\\\\\\\\\n        0.021092208102345467,\\\\\\\\\\\\\\\\n        -0.013880218379199505,\\\\\\\\\\\\\\\\n        0.019460925832390785,\\\\\\\\\\\\\\\\n        0.006450009066611528,\\\\\\\\\\\\\\\\n        -0.024841299280524254,\\\\\\\\\\\\\\\\n        0.0023324491921812296,\\\\\\\\\\\\\\\\n        -0.016599023714661598,\\\\\\\\\\\\\\\\n        -0.012706839479506016,\\\\\\\\\\\\\\\\n        0.0202336385846138,\\\\\\\\\\\\\\\\n        0.016885215416550636,\\\\\\\\\\\\\\\\n        -0.002307407557964325,\\\\\\\\\\\\\\\\n        0.014388206414878368,\\\\\\\\\\\\\\\\n        0.026028987020254135,\\\\\\\\\\\\\\\\n        0.05720939487218857,\\\\\\\\\\\\\\\\n        -0.020548447966575623,\\\\\\\\\\\\\\\\n        -0.019174735993146896,\\\\\\\\\\\\\\\\n        0.017443284392356873,\\\\\\\\\\\\\\\\n        -0.02585727348923683,\\\\\\\\\\\\\\\\n        0.04976845532655716,\\\\\\\\\\\\\\\\n        -0.01823030784726143,\\\\\\\\\\\\\\\\n        -0.03402800112962723,\\\\\\\\\\\\\\\\n        0.022008016705513,\\\\\\\\\\\\\\\\n        -0.018187379464507103,\\\\\\\\\\\\\\\\n        -0.024340465664863586,\\\\\\\\\\\\\\\\n        -0.011347436346113682,\\\\\\\\\\\\\\\\n        0.006428544409573078,\\\\\\\\\\\\\\\\n        -0.010331462137401104,\\\\\\\\\\\\\\\\n        -0.004181952681392431,\\\\\\\\\\\\\\\\n        -0.03377043083310127,\\\\\\\\\\\\\\\\n        0.005670140963047743,\\\\\\\\\\\\\\\\n        -0.01129735354334116,\\\\\\\\\\\\\\\\n        -0.014982050284743309,\\\\\\\\\\\\\\\\n        0.005448343697935343,\\\\\\\\\\\\\\\\n        0.0026168504264205694,\\\\\\\\\\\\\\\\n        -0.002895885845646262,\\\\\\\\\\\\\\\\n        0.005827545654028654,\\\\\\\\\\\\\\\\n        0.016112500801682472,\\\\\\\\\\\\\\\\n        0.011833959259092808,\\\\\\\\\\\\\\\\n        -0.009365569800138474,\\\\\\\\\\\\\\\\n        -0.014330968260765076,\\\\\\\\\\\\\\\\n        0.025141797959804535,\\\\\\\\\\\\\\\\n        -0.006936531979590654,\\\\\\\\\\\\\\\\n        -0.01107555627822876,\\\\\\\\\\\\\\\\n        -0.02392549067735672,\\\\\\\\\\\\\\\\n        -0.010188366286456585,\\\\\\\\\\\\\\\\n        0.0026329488027840853,\\\\\\\\\\\\\\\\n        0.02369653806090355,\\\\\\\\\\\\\\\\n        0.018917163833975792,\\\\\\\\\\\\\\\\n        -0.03359871357679367,\\\\\\\\\\\\\\\\n        -0.010767901316285133,\\\\\\\\\\\\\\\\n        0.02140701748430729,\\\\\\\\\\\\\\\\n        -0.016999689862132072,\\\\\\\\\\\\\\\\n        0.03505828604102135,\\\\\\\\\\\\\\\\n        0.03751951828598976,\\\\\\\\\\\\\\\\n        -0.004779374226927757,\\\\\\\\\\\\\\\\n        0.016999689862132072,\\\\\\\\\\\\\\\\n        -0.003541602287441492,\\\\\\\\\\\\\\\\n        -0.013651266694068909,\\\\\\\\\\\\\\\\n        0.014602848328649998,\\\\\\\\\\\\\\\\n        -0.0014568864135071635,\\\\\\\\\\\\\\\\n        -0.0033341143280267715,\\\\\\\\\\\\\\\\n        -0.02900536358356476,\\\\\\\\\\\\\\\\n        -0.015010669827461243,\\\\\\\\\\\\\\\\n        -0.0023181396536529064,\\\\\\\\\\\\\\\\n        0.023539133369922638,\\\\\\\\\\\\\\\\n        -0.0006407974869944155,\\\\\\\\\\\\\\\\n        -0.018416332080960274,\\\\\\\\\\\\\\\\n        -0.010245604440569878,\\\\\\\\\\\\\\\\n        0.006528710946440697,\\\\\\\\\\\\\\\\n        0.010295688174664974,\\\\\\\\\\\\\\\\n        0.00106158631388098,\\\\\\\\\\\\\\\\n        0.008685869164764881,\\\\\\\\\\\\\\\\n        -0.0369185209274292,\\\\\\\\\\\\\\\\n        0.01698538102209568,\\\\\\\\\\\\\\\\n        -0.004049589391797781,\\\\\\\\\\\\\\\\n        -0.016370072960853577,\\\\\\\\\\\\\\\\n        0.011211495846509933,\\\\\\\\\\\\\\\\n        0.040581751614809036,\\\\\\\\\\\\\\\\n        -0.010767901316285133,\\\\\\\\\\\\\\\\n        -0.012313327752053738,\\\\\\\\\\\\\\\\n        -0.01521100290119648,\\\\\\\\\\\\\\\\n        -0.004872385878115892,\\\\\\\\\\\\\\\\n        -0.009072225540876389,\\\\\\\\\\\\\\\\n        0.027946460992097855,\\\\\\\\\\\\\\\\n        0.011397520080208778,\\\\\\\\\\\\\\\\n        -0.007555418182164431,\\\\\\\\\\\\\\\\n        0.0031284152064472437,\\\\\\\\\\\\\\\\n        0.041984084993600845,\\\\\\\\\\\\\\\\n        -0.0016277061076834798,\\\\\\\\\\\\\\\\n        -0.005230123642832041,\\\\\\\\\\\\\\\\n        0.006442854180932045,\\\\\\\\\\\\\\\\n        -0.0046040830202400684,\\\\\\\\\\\\\\\\n        0.015926478430628777,\\\\\\\\\\\\\\\\n        0.006163818761706352,\\\\\\\\\\\\\\\\n        -0.03966594487428665,\\\\\\\\\\\\\\\\n        0.02541367895901203,\\\\\\\\\\\\\\\\n        0.012864244170486927,\\\\\\\\\\\\\\\\n        -0.021507184952497482,\\\\\\\\\\\\\\\\n        0.013300684280693531,\\\\\\\\\\\\\\\\n        -0.005541355349123478,\\\\\\\\\\\\\\\\n        0.0011376055190339684,\\\\\\\\\\\\\\\\n        0.03205328807234764,\\\\\\\\\\\\\\\\n        -0.041239991784095764,\\\\\\\\\\\\\\\\n        -0.008185036480426788,\\\\\\\\\\\\\\\\n        0.014202182181179523,\\\\\\\\\\\\\\\\n        0.01565459743142128,\\\\\\\\\\\\\\\\n        -0.0056415218859910965,\\\\\\\\\\\\\\\\n        -0.015125145204365253,\\\\\\\\\\\\\\\\n        -0.010717818513512611,\\\\\\\\\\\\\\\\n        -0.002200086135417223,\\\\\\\\\\\\\\\\n        0.005258742719888687,\\\\\\\\\\\\\\\\n        -0.0039064944721758366,\\\\\\\\\\\\\\\\n        -0.001746653812006116,\\\\\\\\\\\\\\\\n        0.022637635469436646,\\\\\\\\\\\\\\\\n        0.0012896440457552671,\\\\\\\\\\\\\\\\n        -0.015010669827461243,\\\\\\\\\\\\\\\\n        -0.018516497686505318,\\\\\\\\\\\\\\\\n        -0.004174797795712948,\\\\\\\\\\\\\\\\n        -0.02850453183054924,\\\\\\\\\\\\\\\\n        -0.017171405255794525,\\\\\\\\\\\\\\\\n        0.010603342205286026,\\\\\\\\\\\\\\\\n        0.01764361746609211,\\\\\\\\\\\\\\\\n        -0.05088459700345993,\\\\\\\\\\\\\\\\n        -0.021664589643478394,\\\\\\\\\\\\\\\\n        -0.0060815392062067986,\\\\\\\\\\\\\\\\n        -0.0008558871923014522,\\\\\\\\\\\\\\\\n        0.029048291966319084,\\\\\\\\\\\\\\\\n        -0.005448343697935343,\\\\\\\\\\\\\\\\n        -0.0014801393263041973,\\\\\\\\\\\\\\\\n        0.0007897057221271098,\\\\\\\\\\\\\\\\n        0.0025470915716141462,\\\\\\\\\\\\\\\\n        -0.015926478430628777,\\\\\\\\\\\\\\\\n        -0.007326466031372547,\\\\\\\\\\\\\\\\n        -0.009952260181307793,\\\\\\\\\\\\\\\\n        -0.024340465664863586,\\\\\\\\\\\\\\\\n        -0.009480046108365059,\\\\\\\\\\\\\\\\n        -0.03225362300872803,\\\\\\\\\\\\\\\\n        -0.0215644221752882,\\\\\\\\\\\\\\\\n        -0.03377043083310127,\\\\\\\\\\\\\\\\n        0.013536790385842323,\\\\\\\\\\\\\\\\n        0.022036636248230934,\\\\\\\\\\\\\\\\n        -0.027002032846212387,\\\\\\\\\\\\\\\\n        -0.0025739220436662436,\\\\\\\\\\\\\\\\n        -0.015497192740440369,\\\\\\\\\\\\\\\\n        -0.016641952097415924,\\\\\\\\\\\\\\\\n        -0.014638622291386127,\\\\\\\\\\\\\\\\n        0.032969098538160324,\\\\\\\\\\\\\\\\n        -0.04393017664551735,\\\\\\\\\\\\\\\\n        -0.02517041750252247,\\\\\\\\\\\\\\\\n        0.001309319632127881,\\\\\\\\\\\\\\\\n        -0.03027890995144844,\\\\\\\\\\\\\\\\n        0.005408992525190115,\\\\\\\\\\\\\\\\n        0.01913180574774742,\\\\\\\\\\\\\\\\n        -0.013050267472863197,\\\\\\\\\\\\\\\\n        0.014939121901988983,\\\\\\\\\\\\\\\\n        -0.029291553422808647,\\\\\\\\\\\\\\\\n        -0.0237823948264122,\\\\\\\\\\\\\\\\n        0.001782427541911602,\\\\\\\\\\\\\\\\n        -0.015368406660854816,\\\\\\\\\\\\\\\\n        0.021449945867061615,\\\\\\\\\\\\\\\\n        0.025971749797463417,\\\\\\\\\\\\\\\\n        -0.020047614350914955,\\\\\\\\\\\\\\\\n        -0.010145437903702259,\\\\\\\\\\\\\\\\n        0.03102300502359867,\\\\\\\\\\\\\\\\n        0.0065895263105630875,\\\\\\\\\\\\\\\\n        0.002287731971591711,\\\\\\\\\\\\\\\\n        -0.011984209530055523,\\\\\\\\\\\\\\\\n        -0.0021696784533560276,\\\\\\\\\\\\\\\\n        0.02864762581884861,\\\\\\\\\\\\\\\\n        0.00632837787270546,\\\\\\\\\\\\\\\\n        0.01332930289208889,\\\\\\\\\\\\\\\\n        -0.015497192740440369,\\\\\\\\\\\\\\\\n        -0.01735742762684822,\\\\\\\\\\\\\\\\n        0.00012565533688757569,\\\\\\\\\\\\\\\\n        0.017242951318621635,\\\\\\\\\\\\\\\\n        0.019017331302165985,\\\\\\\\\\\\\\\\n        -0.00520508224144578,\\\\\\\\\\\\\\\\n        -0.004668475594371557,\\\\\\\\\\\\\\\\n        0.016570406034588814,\\\\\\\\\\\\\\\\n        0.03943699225783348,\\\\\\\\\\\\\\\\n        0.025871582329273224,\\\\\\\\\\\\\\\\n        0.029592053964734077,\\\\\\\\\\\\\\\\n        -0.024311846122145653,\\\\\\\\\\\\\\\\n        0.013966076076030731,\\\\\\\\\\\\\\\\n        0.010603342205286026,\\\\\\\\\\\\\\\\n        0.013393695466220379,\\\\\\\\\\\\\\\\n        -0.02547091618180275,\\\\\\\\\\\\\\\\n        0.007555418182164431,\\\\\\\\\\\\\\\\n        0.02268056385219097,\\\\\\\\\\\\\\\\n        -0.004968975204974413,\\\\\\\\\\\\\\\\n        -0.023753777146339417,\\\\\\\\\\\\\\\\n        -0.01472447905689478,\\\\\\\\\\\\\\\\n        -0.005938444286584854,\\\\\\\\\\\\\\\\n        -0.003734780475497246,\\\\\\\\\\\\\\\\n        0.015511502511799335,\\\\\\\\\\\\\\\\n        0.007158329244703054,\\\\\\\\\\\\\\\\n        0.020104853436350822,\\\\\\\\\\\\\\\\n        0.008471226319670677,\\\\\\\\\\\\\\\\n        0.01288570836186409,\\\\\\\\\\\\\\\\n        0.023939799517393112,\\\\\\\\\\\\\\\\n        -0.015597359277307987,\\\\\\\\\\\\\\\\n        0.02694479562342167,\\\\\\\\\\\\\\\\n        -0.007186948321759701,\\\\\\\\\\\\\\\\n        0.0058633191511034966,\\\\\\\\\\\\\\\\n        0.003960155416280031,\\\\\\\\\\\\\\\\n        0.023896871134638786,\\\\\\\\\\\\\\\\n        0.03605994954705238,\\\\\\\\\\\\\\\\n        0.02325294353067875,\\\\\\\\\\\\\\\\n        -0.01173379272222519,\\\\\\\\\\\\\\\\n        -0.027660271152853966,\\\\\\\\\\\\\\\\n        -0.013050267472863197,\\\\\\\\\\\\\\\\n        0.017386047169566154,\\\\\\\\\\\\\\\\n        -0.0008769042906351388,\\\\\\\\\\\\\\\\n        0.02790353260934353,\\\\\\\\\\\\\\\\n        0.010918151587247849,\\\\\\\\\\\\\\\\n        0.012077221646904945,\\\\\\\\\\\\\\\\n        -0.00022682799317408353,\\\\\\\\\\\\\\\\n        0.01721433363854885,\\\\\\\\\\\\\\\\n        -0.00018647071556188166,\\\\\\\\\\\\\\\\n        -0.004103250335901976,\\\\\\\\\\\\\\\\n        -0.007498180028051138,\\\\\\\\\\\\\\\\n        0.006042188033461571,\\\\\\\\\\\\\\\\n        -0.0030586563516408205,\\\\\\\\\\\\\\\\n        -0.0005987632903270423,\\\\\\\\\\\\\\\\n        0.00524443294852972,\\\\\\\\\\\\\\\\n        0.05783901363611221,\\\\\\\\\\\\\\\\n        0.025971749797463417,\\\\\\\\\\\\\\\\n        0.01594078727066517,\\\\\\\\\\\\\\\\n        0.022866586223244667,\\\\\\\\\\\\\\\\n        -0.01854511722922325,\\\\\\\\\\\\\\\\n        0.01059618778526783,\\\\\\\\\\\\\\\\n        -0.01602664403617382,\\\\\\\\\\\\\\\\n        0.013171898201107979,\\\\\\\\\\\\\\\\n        -0.008850428275763988,\\\\\\\\\\\\\\\\n        -0.004160488024353981,\\\\\\\\\\\\\\\\n        0.012019983492791653,\\\\\\\\\\\\\\\\n        0.009558748453855515,\\\\\\\\\\\\\\\\n        0.011783876456320286,\\\\\\\\\\\\\\\\n        0.03731918707489967,\\\\\\\\\\\\\\\\n        0.007076049689203501,\\\\\\\\\\\\\\\\n        0.014123479835689068,\\\\\\\\\\\\\\\\n        0.015668906271457672,\\\\\\\\\\\\\\\\n        -0.019618330523371696,\\\\\\\\\\\\\\\\n        -0.011683709919452667,\\\\\\\\\\\\\\\\n        -0.007301424164324999,\\\\\\\\\\\\\\\\n        -0.00010368800576543435,\\\\\\\\\\\\\\\\n        -0.006038610823452473,\\\\\\\\\\\\\\\\n        0.0074910251423716545,\\\\\\\\\\\\\\\\n        -0.011089865118265152,\\\\\\\\\\\\\\\\n        -0.0041461787186563015,\\\\\\\\\\\\\\\\n        -0.029262935742735863,\\\\\\\\\\\\\\\\n        0.00251131784170866,\\\\\\\\\\\\\\\\n        -0.026229320093989372,\\\\\\\\\\\\\\\\n        0.019790044054389,\\\\\\\\\\\\\\\\n        0.011533459648489952,\\\\\\\\\\\\\\\\n        -0.031280577182769775,\\\\\\\\\\\\\\\\n        -0.005874051246792078,\\\\\\\\\\\\\\\\n        0.019375069066882133,\\\\\\\\\\\\\\\\n        0.011068400926887989,\\\\\\\\\\\\\\\\n        -0.036746807396411896,\\\\\\\\\\\\\\\\n        -0.029363101348280907,\\\\\\\\\\\\\\\\n        0.021135136485099792,\\\\\\\\\\\\\\\\n        -0.005237278528511524,\\\\\\\\\\\\\\\\n        -0.009594522416591644,\\\\\\\\\\\\\\\\n        -0.026315176859498024,\\\\\\\\\\\\\\\\n        0.003543390892446041,\\\\\\\\\\\\\\\\n        0.023295871913433075,\\\\\\\\\\\\\\\\n        0.0005799820646643639,\\\\\\\\\\\\\\\\n        -0.0003329195606056601,\\\\\\\\\\\\\\\\n        -0.002271633828058839,\\\\\\\\\\\\\\\\n        0.007083204574882984,\\\\\\\\\\\\\\\\n        0.0007324677426367998,\\\\\\\\\\\\\\\\n        -0.012749767862260342,\\\\\\\\\\\\\\\\n        -0.0026436808984726667,\\\\\\\\\\\\\\\\n        -0.00897205900400877,\\\\\\\\\\\\\\\\n        0.02554246410727501,\\\\\\\\\\\\\\\\n        0.013121815398335457,\\\\\\\\\\\\\\\\n        0.015125145204365253,\\\\\\\\\\\\\\\\n        -0.010732128284871578,\\\\\\\\\\\\\\\\n        0.0085642384365201,\\\\\\\\\\\\\\\\n        0.011347436346113682,\\\\\\\\\\\\\\\\n        -0.03116609901189804,\\\\\\\\\\\\\\\\n        -0.00867871381342411,\\\\\\\\\\\\\\\\n        0.0012923270696774125,\\\\\\\\\\\\\\\\n        0.014001849107444286,\\\\\\\\\\\\\\\\n        -0.011111329309642315,\\\\\\\\\\\\\\\\n        -0.029735149815678596,\\\\\\\\\\\\\\\\n        0.005924134515225887,\\\\\\\\\\\\\\\\n        -0.00845691654831171,\\\\\\\\\\\\\\\\n        -0.004042434971779585,\\\\\\\\\\\\\\\\n        -0.024240300059318542,\\\\\\\\\\\\\\\\n        0.003171343822032213,\\\\\\\\\\\\\\\\n        0.017114166170358658,\\\\\\\\\\\\\\\\n        0.013980384916067123,\\\\\\\\\\\\\\\\n        -0.00010514131281524897,\\\\\\\\\\\\\\\\n        -0.005788194481283426,\\\\\\\\\\\\\\\\n        0.0027814097702503204,\\\\\\\\\\\\\\\\n        0.02436908520758152,\\\\\\\\\\\\\\\\n        0.05082735791802406,\\\\\\\\\\\\\\\\n        -0.003473632037639618,\\\\\\\\\\\\\\\\n        -0.019990377128124237,\\\\\\\\\\\\\\\\n        0.0037777090910822153,\\\\\\\\\\\\\\\\n        0.019661258906126022,\\\\\\\\\\\\\\\\n        0.04289989173412323,\\\\\\\\\\\\\\\\n        0.007068894803524017,\\\\\\\\\\\\\\\\n        -0.01307173166424036,\\\\\\\\\\\\\\\\n        0.012764077633619308,\\\\\\\\\\\\\\\\n        -0.006117312703281641,\\\\\\\\\\\\\\\\n        0.007308579050004482,\\\\\\\\\\\\\\\\n        -0.013243446126580238,\\\\\\\\\\\\\\\\n        -0.032225001603364944,\\\\\\\\\\\\\\\\n        0.03520137816667557,\\\\\\\\\\\\\\\\n        -0.017743784934282303,\\\\\\\\\\\\\\\\n        -0.017171405255794525,\\\\\\\\\\\\\\\\n        -0.013930302113294601,\\\\\\\\\\\\\\\\n        0.011969899758696556,\\\\\\\\\\\\\\\\n        -0.005659408867359161,\\\\\\\\\\\\\\\\n        0.022050945088267326,\\\\\\\\\\\\\\\\n        0.018502188846468925,\\\\\\\\\\\\\\\\n        0.01141182892024517,\\\\\\\\\\\\\\\\n        -0.026043297722935677,\\\\\\\\\\\\\\\\n        0.019904520362615585,\\\\\\\\\\\\\\\\n        0.0005495743826031685,\\\\\\\\\\\\\\\\n        0.010581878013908863,\\\\\\\\\\\\\\\\n        0.017185714095830917,\\\\\\\\\\\\\\\\n        0.015611669048666954,\\\\\\\\\\\\\\\\n        0.0022609014995396137,\\\\\\\\\\\\\\\\n        0.02401134744286537,\\\\\\\\\\\\\\\\n        0.018444949761033058,\\\\\\\\\\\\\\\\n        0.012706839479506016,\\\\\\\\\\\\\\\\n        0.017557760700583458,\\\\\\\\\\\\\\\\n        0.020662924274802208,\\\\\\\\\\\\\\\\n        -0.01513945497572422,\\\\\\\\\\\\\\\\n        0.011719483882188797,\\\\\\\\\\\\\\\\n        0.013937456533312798,\\\\\\\\\\\\\\\\n        -0.0038313695695251226,\\\\\\\\\\\\\\\\n        0.008893356658518314,\\\\\\\\\\\\\\\\n        -0.015024978667497635,\\\\\\\\\\\\\\\\n        0.035029664635658264,\\\\\\\\\\\\\\\\n        0.009014987386763096,\\\\\\\\\\\\\\\\n        0.005741688422858715,\\\\\\\\\\\\\\\\n        0.024183060973882675,\\\\\\\\\\\\\\\\n        -0.008328131400048733,\\\\\\\\\\\\\\\\n        0.00963745079934597,\\\\\\\\\\\\\\\\n        0.02126392349600792,\\\\\\\\\\\\\\\\n        0.0006363257416523993,\\\\\\\\\\\\\\\\n        0.004249922465533018,\\\\\\\\\\\\\\\\n        0.011826804839074612,\\\\\\\\\\\\\\\\n        -0.009336951188743114,\\\\\\\\\\\\\\\\n        0.008614321239292622,\\\\\\\\\\\\\\\\n        0.0014711958356201649,\\\\\\\\\\\\\\\\n        -0.019761424511671066,\\\\\\\\\\\\\\\\n        0.0005222968757152557,\\\\\\\\\\\\\\\\n        -0.003067599842324853,\\\\\\\\\\\\\\\\n        -0.007033121306449175,\\\\\\\\\\\\\\\\n        -0.008993523195385933,\\\\\\\\\\\\\\\\n        0.01941799744963646,\\\\\\\\\\\\\\\\n        0.014223646372556686,\\\\\\\\\\\\\\\\n        0.009844938293099403,\\\\\\\\\\\\\\\\n        -0.03992351517081261,\\\\\\\\\\\\\\\\n        -0.03050786256790161,\\\\\\\\\\\\\\\\n        0.011139948852360249,\\\\\\\\\\\\\\\\n        -0.020205019041895866,\\\\\\\\\\\\\\\\n        -0.05420440062880516,\\\\\\\\\\\\\\\\n        0.0038707207422703505,\\\\\\\\\\\\\\\\n        0.03188157454133034,\\\\\\\\\\\\\\\\n        -0.0058633191511034966,\\\\\\\\\\\\\\\\n        -0.0007539319922216237,\\\\\\\\\\\\\\\\n        -0.0012967988150194287,\\\\\\\\\\\\\\\\n        -0.012578054331243038,\\\\\\\\\\\\\\\\n        -0.020934803411364555,\\\\\\\\\\\\\\\\n        -0.02039104327559471,\\\\\\\\\\\\\\\\n        0.017071237787604332,\\\\\\\\\\\\\\\\n        -0.002604329725727439,\\\\\\\\\\\\\\\\n        -0.019546782597899437,\\\\\\\\\\\\\\\\n        -0.05139973759651184,\\\\\\\\\\\\\\\\n        -0.008471226319670677,\\\\\\\\\\\\\\\\n        0.005305248778313398,\\\\\\\\\\\\\\\\n        0.015268241055309772,\\\\\\\\\\\\\\\\n        0.011612161993980408,\\\\\\\\\\\\\\\\n        0.007455251645296812,\\\\\\\\\\\\\\\\n        -0.018573736771941185,\\\\\\\\\\\\\\\\n        0.0008894251077435911,\\\\\\\\\\\\\\\\n        -0.024397704750299454,\\\\\\\\\\\\\\\\n        -0.027946460992097855,\\\\\\\\\\\\\\\\n        -0.0009417442488484085,\\\\\\\\\\\\\\\\n        -0.027188057079911232,\\\\\\\\\\\\\\\\n        -0.007129710167646408,\\\\\\\\\\\\\\\\n        0.003033614717423916,\\\\\\\\\\\\\\\\n        0.0029048293363302946,\\\\\\\\\\\\\\\\n        -0.001126873423345387,\\\\\\\\\\\\\\\\n        0.0023610680364072323,\\\\\\\\\\\\\\\\n        0.009072225540876389,\\\\\\\\\\\\\\\\n        -0.000999876530840993,\\\\\\\\\\\\\\\\n        -0.0027116509154438972,\\\\\\\\\\\\\\\\n        0.04830888658761978,\\\\\\\\\\\\\\\\n        -0.027874913066625595,\\\\\\\\\\\\\\\\n        0.03256843239068985,\\\\\\\\\\\\\\\\n        0.008027631789445877,\\\\\\\\\\\\\\\\n        -0.00030810150201432407,\\\\\\\\\\\\\\\\n        0.008571392856538296,\\\\\\\\\\\\\\\\n        -0.004507493693381548,\\\\\\\\\\\\\\\\n        -0.008056250400841236,\\\\\\\\\\\\\\\\n        -0.00738370418548584,\\\\\\\\\\\\\\\\n        -0.017085548490285873,\\\\\\\\\\\\\\\\n        -0.011368900537490845,\\\\\\\\\\\\\\\\n        -0.0021821993868798018,\\\\\\\\\\\\\\\\n        0.011390364728868008,\\\\\\\\\\\\\\\\n        0.002493431093171239,\\\\\\\\\\\\\\\\n        -0.006178128067404032,\\\\\\\\\\\\\\\\n        0.014466908760368824,\\\\\\\\\\\\\\\\n        0.019890209659934044,\\\\\\\\\\\\\\\\n        -0.03070819564163685,\\\\\\\\\\\\\\\\n        0.002452291315421462,\\\\\\\\\\\\\\\\n        -0.014445444568991661,\\\\\\\\\\\\\\\\n        -0.004421636462211609,\\\\\\\\\\\\\\\\n        -0.015253931283950806,\\\\\\\\\\\\\\\\n        0.0255567729473114,\\\\\\\\\\\\\\\\n        0.01682797633111477,\\\\\\\\\\\\\\\\n        0.03462899848818779,\\\\\\\\\\\\\\\\n        0.006954418960958719,\\\\\\\\\\\\\\\\n        0.0010589032899588346,\\\\\\\\\\\\\\\\n        0.02612915448844433,\\\\\\\\\\\\\\\\n        -0.003995928913354874,\\\\\\\\\\\\\\\\n        -0.020934803411364555,\\\\\\\\\\\\\\\\n        0.020992042496800423,\\\\\\\\\\\\\\\\n        0.021249612793326378,\\\\\\\\\\\\\\\\n        0.0006023406749591231,\\\\\\\\\\\\\\\\n        -0.01126157958060503,\\\\\\\\\\\\\\\\n        0.009630296379327774,\\\\\\\\\\\\\\\\n        -0.02569986879825592,\\\\\\\\\\\\\\\\n        0.012685375288128853,\\\\\\\\\\\\\\\\n        0.018588045611977577,\\\\\\\\\\\\\\\\n        -0.013687040656805038,\\\\\\\\\\\\\\\\n        0.015253931283950806,\\\\\\\\\\\\\\\\n        0.003396718529984355,\\\\\\\\\\\\\\\\n        -0.06256115436553955,\\\\\\\\\\\\\\\\n        -0.020333804190158844,\\\\\\\\\\\\\\\\n        -0.02531351149082184,\\\\\\\\\\\\\\\\n        -0.02082032896578312,\\\\\\\\\\\\\\\\n        0.01052463985979557,\\\\\\\\\\\\\\\\n        -0.007505334913730621,\\\\\\\\\\\\\\\\n        0.013608338311314583,\\\\\\\\\\\\\\\\n        0.002838647924363613,\\\\\\\\\\\\\\\\n        -0.012506506405770779,\\\\\\\\\\\\\\\\n        -0.007340775337070227,\\\\\\\\\\\\\\\\n        -0.008041941560804844,\\\\\\\\\\\\\\\\n        0.02999272011220455,\\\\\\\\\\\\\\\\n        -0.017700856551527977,\\\\\\\\\\\\\\\\n        -0.012728303670883179,\\\\\\\\\\\\\\\\n        0.018416332080960274,\\\\\\\\\\\\\\\\n        0.00797754805535078,\\\\\\\\\\\\\\\\n        0.008063405752182007,\\\\\\\\\\\\\\\\n        0.002606118330731988,\\\\\\\\\\\\\\\\n        -0.014330968260765076,\\\\\\\\\\\\\\\\n        -0.04839474335312843,\\\\\\\\\\\\\\\\n        -0.018130142241716385,\\\\\\\\\\\\\\\\n        -0.02451217919588089,\\\\\\\\\\\\\\\\n        -0.028590388596057892,\\\\\\\\\\\\\\\\n        -0.008371059782803059,\\\\\\\\\\\\\\\\n        0.012012828141450882,\\\\\\\\\\\\\\\\n        0.024268917739391327,\\\\\\\\\\\\\\\\n        0.024340465664863586,\\\\\\\\\\\\\\\\n        0.027230985462665558,\\\\\\\\\\\\\\\\n        0.007301424164324999,\\\\\\\\\\\\\\\\n        -0.013787207193672657,\\\\\\\\\\\\\\\\n        -0.0034468017984181643,\\\\\\\\\\\\\\\\n        -0.012034292332828045,\\\\\\\\\\\\\\\\n        0.0011769566917791963,\\\\\\\\\\\\\\\\n        -0.0009220686624757946,\\\\\\\\\\\\\\\\n        -0.022537468001246452,\\\\\\\\\\\\\\\\n        -0.007741441484540701,\\\\\\\\\\\\\\\\n        -0.0045861960388720036,\\\\\\\\\\\\\\\\n        0.017443284392356873,\\\\\\\\\\\\\\\\n        -0.02703065238893032,\\\\\\\\\\\\\\\\n        0.0072477636858820915,\\\\\\\\\\\\\\\\n        -0.005319558084011078,\\\\\\\\\\\\\\\\n        0.022923825308680534,\\\\\\\\\\\\\\\\n        0.018430640920996666,\\\\\\\\\\\\\\\\n        -0.005380373448133469,\\\\\\\\\\\\\\\\n        -0.014094861224293709,\\\\\\\\\\\\\\\\n        -0.014853265136480331,\\\\\\\\\\\\\\\\n        -0.03308357298374176,\\\\\\\\\\\\\\\\n        -0.0012726514833047986,\\\\\\\\\\\\\\\\n        0.004782951436936855,\\\\\\\\\\\\\\\\n        -0.009286868385970592,\\\\\\\\\\\\\\\\n        -0.01495343167334795,\\\\\\\\\\\\\\\\n        -0.04247060790657997,\\\\\\\\\\\\\\\\n        0.0023557019885629416,\\\\\\\\\\\\\\\\n        0.004879540763795376,\\\\\\\\\\\\\\\\n        0.04424498602747917,\\\\\\\\\\\\\\\\n        0.024225989356637,\\\\\\\\\\\\\\\\n        0.0096732247620821,\\\\\\\\\\\\\\\\n        0.007254918571561575,\\\\\\\\\\\\\\\\n        -0.0116694001480937,\\\\\\\\\\\\\\\\n        0.01307173166424036,\\\\\\\\\\\\\\\\n        0.01358687411993742,\\\\\\\\\\\\\\\\n        0.042127180844545364,\\\\\\\\\\\\\\\\n        -0.0024809101596474648,\\\\\\\\\\\\\\\\n        -0.021535802632570267,\\\\\\\\\\\\\\\\n        -0.026386724784970284,\\\\\\\\\\\\\\\\n        0.01913180574774742,\\\\\\\\\\\\\\\\n        0.02612915448844433,\\\\\\\\\\\\\\\\n        0.02273780107498169,\\\\\\\\\\\\\\\\n        -0.003305495483800769,\\\\\\\\\\\\\\\\n        0.018001355230808258,\\\\\\\\\\\\\\\\n        0.011061246506869793,\\\\\\\\\\\\\\\\n        -0.017400356009602547,\\\\\\\\\\\\\\\\n        0.0015364829450845718,\\\\\\\\\\\\\\\\n        0.0009873557137325406,\\\\\\\\\\\\\\\\n        -0.0012547646183520555,\\\\\\\\\\\\\\\\n        0.01647023856639862,\\\\\\\\\\\\\\\\n        -0.000512906291987747,\\\\\\\\\\\\\\\\n        -0.02421168051660061,\\\\\\\\\\\\\\\\n        -0.009065071120858192,\\\\\\\\\\\\\\\\n        -0.0007901529315859079,\\\\\\\\\\\\\\\\n        0.02481267973780632,\\\\\\\\\\\\\\\\n        0.018044283613562584,\\\\\\\\\\\\\\\\n        0.009358415380120277,\\\\\\\\\\\\\\\\n        -0.019160425290465355,\\\\\\\\\\\\\\\\n        0.015182383358478546,\\\\\\\\\\\\\\\\n        -0.019761424511671066,\\\\\\\\\\\\\\\\n        0.0015677850460633636,\\\\\\\\\\\\\\\\n        0.02790353260934353,\\\\\\\\\\\\\\\\n        -0.008735951967537403,\\\\\\\\\\\\\\\\n        0.013443779200315475,\\\\\\\\\\\\\\\\n        -0.00251131784170866,\\\\\\\\\\\\\\\\n        0.001997964456677437,\\\\\\\\\\\\\\\\n        0.001210047397762537,\\\\\\\\\\\\\\\\n        0.009387034922838211,\\\\\\\\\\\\\\\\n        0.004815148189663887,\\\\\\\\\\\\\\\\n        -0.0011358169140294194,\\\\\\\\\\\\\\\\n        0.02401134744286537,\\\\\\\\\\\\\\\\n        0.005569974426180124,\\\\\\\\\\\\\\\\n        0.015268241055309772,\\\\\\\\\\\\\\\\n        0.024111513048410416,\\\\\\\\\\\\\\\\n        -0.028089556843042374,\\\\\\\\\\\\\\\\n        -0.019790044054389,\\\\\\\\\\\\\\\\n        0.01778671331703663,\\\\\\\\\\\\\\\\n        0.008278047665953636,\\\\\\\\\\\\\\\\n        -0.0353158563375473,\\\\\\\\\\\\\\\\n        -0.02451217919588089,\\\\\\\\\\\\\\\\n        0.009608832187950611,\\\\\\\\\\\\\\\\n        0.01218454260379076,\\\\\\\\\\\\\\\\n        0.020877566188573837,\\\\\\\\\\\\\\\\n        -0.019003020599484444,\\\\\\\\\\\\\\\\n        -0.016184048727154732,\\\\\\\\\\\\\\\\n        -0.031709861010313034,\\\\\\\\\\\\\\\\n        0.03070819564163685,\\\\\\\\\\\\\\\\n        0.0118911974132061,\\\\\\\\\\\\\\\\n        0.011791030876338482,\\\\\\\\\\\\\\\\n        0.0018709676805883646,\\\\\\\\\\\\\\\\n        -0.01325775496661663,\\\\\\\\\\\\\\\\n        -0.02924862504005432,\\\\\\\\\\\\\\\\n        0.02037673257291317,\\\\\\\\\\\\\\\\n        -0.01823030784726143,\\\\\\\\\\\\\\\\n        0.018945783376693726,\\\\\\\\\\\\\\\\n        0.017085548490285873,\\\\\\\\\\\\\\\\n        -0.006968728266656399,\\\\\\\\\\\\\\\\n        -0.0107822110876441,\\\\\\\\\\\\\\\\n        0.01742897555232048,\\\\\\\\\\\\\\\\n        -0.020061925053596497,\\\\\\\\\\\\\\\\n        0.01355110015720129,\\\\\\\\\\\\\\\\n        0.0010553259635344148,\\\\\\\\\\\\\\\\n        0.004872385878115892,\\\\\\\\\\\\\\\\n        -0.038206376135349274,\\\\\\\\\\\\\\\\n        0.01867390237748623,\\\\\\\\\\\\\\\\n        -0.015296859666705132,\\\\\\\\\\\\\\\\n        -0.013121815398335457,\\\\\\\\\\\\\\\\n        0.0015955097042024136,\\\\\\\\\\\\\\\\n        -0.013765743002295494,\\\\\\\\\\\\\\\\n        -0.007855917327105999,\\\\\\\\\\\\\\\\n        0.03631751984357834,\\\\\\\\\\\\\\\\n        -0.02910553105175495,\\\\\\\\\\\\\\\\n        -0.032081905752420425,\\\\\\\\\\\\\\\\n        0.024555109441280365,\\\\\\\\\\\\\\\\n        -0.020763089880347252,\\\\\\\\\\\\\\\\n        0.018144451081752777,\\\\\\\\\\\\\\\\n        -0.007158329244703054,\\\\\\\\\\\\\\\\n        -0.008650095202028751,\\\\\\\\\\\\\\\\n        0.010646270588040352,\\\\\\\\\\\\\\\\n        0.001974711427465081,\\\\\\\\\\\\\\\\n        -0.0034020845778286457,\\\\\\\\\\\\\\\\n        0.014102015644311905,\\\\\\\\\\\\\\\\n        0.019518163055181503,\\\\\\\\\\\\\\\\n        -0.01074643712490797,\\\\\\\\\\\\\\\\n        0.015769073739647865,\\\\\\\\\\\\\\\\n        0.0014559919945895672,\\\\\\\\\\\\\\\\n        0.025241965427994728,\\\\\\\\\\\\\\\\n        -0.028018008917570114,\\\\\\\\\\\\\\\\n        0.01906025968492031,\\\\\\\\\\\\\\\\n        -0.011211495846509933,\\\\\\\\\\\\\\\\n        -0.021249612793326378,\\\\\\\\\\\\\\\\n        -0.013522481545805931,\\\\\\\\\\\\\\\\n        0.013966076076030731,\\\\\\\\\\\\\\\\n        0.013322148472070694,\\\\\\\\\\\\\\\\n        0.006664651446044445,\\\\\\\\\\\\\\\\n        0.011948435567319393,\\\\\\\\\\\\\\\\n        -0.0023557019885629416,\\\\\\\\\\\\\\\\n        -0.009129463694989681,\\\\\\\\\\\\\\\\n        0.0060815392062067986,\\\\\\\\\\\\\\\\n        -0.012871398590505123,\\\\\\\\\\\\\\\\n        0.01831616461277008,\\\\\\\\\\\\\\\\n        0.026558438315987587,\\\\\\\\\\\\\\\\n        0.0008965798770077527,\\\\\\\\\\\\\\\\n        -0.009909331798553467,\\\\\\\\\\\\\\\\n        -0.007405168376863003,\\\\\\\\\\\\\\\\n        -0.029964100569486618,\\\\\\\\\\\\\\\\n        -0.03757675737142563,\\\\\\\\\\\\\\\\n        0.028690556064248085,\\\\\\\\\\\\\\\\n        -0.029592053964734077,\\\\\\\\\\\\\\\\n        -0.018788378685712814,\\\\\\\\\\\\\\\\n        -0.012392030097544193,\\\\\\\\\\\\\\\\n        0.010023807175457478,\\\\\\\\\\\\\\\\n        0.01126157958060503,\\\\\\\\\\\\\\\\n        0.020290875807404518,\\\\\\\\\\\\\\\\n        0.00012699684884864837,\\\\\\\\\\\\\\\\n        -0.02392549067735672,\\\\\\\\\\\\\\\\n        0.007662739139050245,\\\\\\\\\\\\\\\\n        0.013908837921917439,\\\\\\\\\\\\\\\\n        -0.010581878013908863,\\\\\\\\\\\\\\\\n        -0.011798186227679253,\\\\\\\\\\\\\\\\n        -0.002640103455632925,\\\\\\\\\\\\\\\\n        -0.006428544409573078,\\\\\\\\\\\\\\\\n        -0.0035934741608798504,\\\\\\\\\\\\\\\\n        0.01764361746609211,\\\\\\\\\\\\\\\\n        -0.023725157603621483,\\\\\\\\\\\\\\\\n        0.02355344407260418,\\\\\\\\\\\\\\\\n        -0.013443779200315475,\\\\\\\\\\\\\\\\n        0.01107555627822876,\\\\\\\\\\\\\\\\n        0.00852846447378397,\\\\\\\\\\\\\\\\n        -0.018816998228430748,\\\\\\\\\\\\\\\\n        -0.02103497087955475,\\\\\\\\\\\\\\\\n        -0.030250290408730507,\\\\\\\\\\\\\\\\n        0.0075124893337488174,\\\\\\\\\\\\\\\\n        -0.0353158563375473,\\\\\\\\\\\\\\\\n        -0.01586923934519291,\\\\\\\\\\\\\\\\n        0.013543945737183094,\\\\\\\\\\\\\\\\n        -0.004618392325937748,\\\\\\\\\\\\\\\\n        -0.0035111946053802967,\\\\\\\\\\\\\\\\n        0.022108184173703194,\\\\\\\\\\\\\\\\n        0.004264232236891985,\\\\\\\\\\\\\\\\n        -0.02104927971959114,\\\\\\\\\\\\\\\\n        -0.01403046865016222,\\\\\\\\\\\\\\\\n        0.0020730893593281507,\\\\\\\\\\\\\\\\n        -0.0002857428917195648,\\\\\\\\\\\\\\\\n        0.028776412829756737,\\\\\\\\\\\\\\\\n        -0.026858938857913017,\\\\\\\\\\\\\\\\n        -0.0016599023947492242,\\\\\\\\\\\\\\\\n        -0.0063462648540735245,\\\\\\\\\\\\\\\\n        -0.014838955365121365,\\\\\\\\\\\\\\\\n        -0.020190710201859474,\\\\\\\\\\\\\\\\n        -0.01399469468742609,\\\\\\\\\\\\\\\\n        0.00808486994355917,\\\\\\\\\\\\\\\\n        -0.0024093626998364925,\\\\\\\\\\\\\\\\n        0.022251278162002563,\\\\\\\\\\\\\\\\n        -0.014710170216858387,\\\\\\\\\\\\\\\\n        -0.01476740837097168,\\\\\\\\\\\\\\\\n        -0.016570406034588814,\\\\\\\\\\\\\\\\n        -0.04141170531511307,\\\\\\\\\\\\\\\\n        -0.013937456533312798,\\\\\\\\\\\\\\\\n        -0.01727157086133957,\\\\\\\\\\\\\\\\n        -0.001257447642274201,\\\\\\\\\\\\\\\\n        0.003953000530600548,\\\\\\\\\\\\\\\\n        0.014431134797632694,\\\\\\\\\\\\\\\\n        -0.007440941873937845,\\\\\\\\\\\\\\\\n        0.04613383859395981,\\\\\\\\\\\\\\\\n        -0.02282365784049034,\\\\\\\\\\\\\\\\n        -0.01698538102209568,\\\\\\\\\\\\\\\\n        -0.016584714874625206,\\\\\\\\\\\\\\\\n        0.027273913845419884,\\\\\\\\\\\\\\\\n        -0.01810152269899845,\\\\\\\\\\\\\\\\n        -0.005630789790302515,\\\\\\\\\\\\\\\\n        0.006528710946440697,\\\\\\\\\\\\\\\\n        -0.022981062531471252,\\\\\\\\\\\\\\\\n        -0.033570095896720886,\\\\\\\\\\\\\\\\n        -0.006271140184253454,\\\\\\\\\\\\\\\\n        -0.004160488024353981,\\\\\\\\\\\\\\\\n        0.0036668104585260153,\\\\\\\\\\\\\\\\n        -0.007612655870616436,\\\\\\\\\\\\\\\\n        0.01085375901311636,\\\\\\\\\\\\\\\\n        0.02039104327559471,\\\\\\\\\\\\\\\\n        -0.021907851099967957,\\\\\\\\\\\\\\\\n        0.010538949631154537,\\\\\\\\\\\\\\\\n        0.027273913845419884,\\\\\\\\\\\\\\\\n        0.02637241594493389,\\\\\\\\\\\\\\\\n        -0.00819934532046318,\\\\\\\\\\\\\\\\n        -0.0005688027595169842,\\\\\\\\\\\\\\\\n        -0.024469250813126564,\\\\\\\\\\\\\\\\n        0.00365607813000679,\\\\\\\\\\\\\\\\n        0.011533459648489952,\\\\\\\\\\\\\\\\n        -0.0025327822659164667,\\\\\\\\\\\\\\\\n        -0.0036417688243091106,\\\\\\\\\\\\\\\\n        0.000766452809330076,\\\\\\\\\\\\\\\\n        0.01462431252002716,\\\\\\\\\\\\\\\\n        -0.03471485525369644,\\\\\\\\\\\\\\\\n        -0.011333126574754715,\\\\\\\\\\\\\\\\n        -0.028375746682286263,\\\\\\\\\\\\\\\\n        -0.011054092086851597,\\\\\\\\\\\\\\\\n        0.014130635187029839,\\\\\\\\\\\\\\\\n        -0.01262813713401556,\\\\\\\\\\\\\\\\n        0.009766235947608948,\\\\\\\\\\\\\\\\n        0.006485782563686371,\\\\\\\\\\\\\\\\n        -0.018115831539034843,\\\\\\\\\\\\\\\\n        0.023739466443657875,\\\\\\\\\\\\\\\\n        0.013522481545805931,\\\\\\\\\\\\\\\\n        -0.01787257008254528,\\\\\\\\\\\\\\\\n        -0.016999689862132072,\\\\\\\\\\\\\\\\n        -0.00014868468861095607,\\\\\\\\\\\\\\\\n        -0.014996360056102276,\\\\\\\\\\\\\\\\n        -0.030250290408730507,\\\\\\\\\\\\\\\\n        0.019389377906918526,\\\\\\\\\\\\\\\\n        -0.020791709423065186,\\\\\\\\\\\\\\\\n        0.004300005733966827,\\\\\\\\\\\\\\\\n        0.014381051063537598,\\\\\\\\\\\\\\\\n        -0.013064577244222164,\\\\\\\\\\\\\\\\n        -0.0066503421403467655,\\\\\\\\\\\\\\\\n        -0.007319311145693064,\\\\\\\\\\\\\\\\n        -0.0018495033727958798,\\\\\\\\\\\\\\\\n        -0.0006233577732928097,\\\\\\\\\\\\\\\\n        -0.03505828604102135,\\\\\\\\\\\\\\\\n        0.0025918087922036648,\\\\\\\\\\\\\\\\n        -0.0006188860279507935,\\\\\\\\\\\\\\\\n        -0.008628631010651588,\\\\\\\\\\\\\\\\n        0.014481217600405216,\\\\\\\\\\\\\\\\n        -0.0044752974063158035,\\\\\\\\\\\\\\\\n        -0.01151199545711279,\\\\\\\\\\\\\\\\n        -0.0032214270904660225,\\\\\\\\\\\\\\\\n        -0.010839449241757393,\\\\\\\\\\\\\\\\n        0.003232159186154604,\\\\\\\\\\\\\\\\n        -0.02303830161690712,\\\\\\\\\\\\\\\\n        -0.00944427214562893,\\\\\\\\\\\\\\\\n        0.0014711958356201649,\\\\\\\\\\\\\\\\n        -0.015611669048666954,\\\\\\\\\\\\\\\\n        0.004267809446901083,\\\\\\\\\\\\\\\\n        -0.015368406660854816,\\\\\\\\\\\\\\\\n        0.012198852375149727,\\\\\\\\\\\\\\\\n        0.023582061752676964,\\\\\\\\\\\\\\\\n        0.018859926611185074,\\\\\\\\\\\\\\\\n        0.23112711310386658,\\\\\\\\\\\\\\\\n        -0.016112500801682472,\\\\\\\\\\\\\\\\n        -0.020992042496800423,\\\\\\\\\\\\\\\\n        0.0370902344584465,\\\\\\\\\\\\\\\\n        -0.015182383358478546,\\\\\\\\\\\\\\\\n        0.015697525814175606,\\\\\\\\\\\\\\\\n        0.023968419060111046,\\\\\\\\\\\\\\\\n        -0.012399185448884964,\\\\\\\\\\\\\\\\n        -0.017114166170358658,\\\\\\\\\\\\\\\\n        0.025571083649992943,\\\\\\\\\\\\\\\\n        0.006990192458033562,\\\\\\\\\\\\\\\\n        -0.016727810725569725,\\\\\\\\\\\\\\\\n        -0.04576179385185242,\\\\\\\\\\\\\\\\n        -0.0019335716497153044,\\\\\\\\\\\\\\\\n        0.008435452356934547,\\\\\\\\\\\\\\\\n        -0.011876888573169708,\\\\\\\\\\\\\\\\n        -0.05228692665696144,\\\\\\\\\\\\\\\\n        -0.02784629538655281,\\\\\\\\\\\\\\\\n        -0.028604697436094284,\\\\\\\\\\\\\\\\n        0.012127304449677467,\\\\\\\\\\\\\\\\n        0.03434281051158905,\\\\\\\\\\\\\\\\n        0.000821902125608176,\\\\\\\\\\\\\\\\n        -0.013629802502691746,\\\\\\\\\\\\\\\\n        -0.022981062531471252,\\\\\\\\\\\\\\\\n        0.030364766716957092,\\\\\\\\\\\\\\\\n        -0.03136643394827843,\\\\\\\\\\\\\\\\n        0.014080551452934742,\\\\\\\\\\\\\\\\n        0.002598963677883148,\\\\\\\\\\\\\\\\n        0.023653609678149223,\\\\\\\\\\\\\\\\n        0.013529635965824127,\\\\\\\\\\\\\\\\n        -0.03345562145113945,\\\\\\\\\\\\\\\\n        0.009787701070308685,\\\\\\\\\\\\\\\\n        0.007240608800202608,\\\\\\\\\\\\\\\\n        0.003155245678499341,\\\\\\\\\\\\\\\\n        -0.02836143597960472,\\\\\\\\\\\\\\\\n        -0.009286868385970592,\\\\\\\\\\\\\\\\n        -0.007215567398816347,\\\\\\\\\\\\\\\\n        -0.006221056915819645,\\\\\\\\\\\\\\\\n        0.02607191540300846,\\\\\\\\\\\\\\\\n        0.010073890909552574,\\\\\\\\\\\\\\\\n        -0.008514154702425003,\\\\\\\\\\\\\\\\n        -0.01240633986890316,\\\\\\\\\\\\\\\\n        -0.02282365784049034,\\\\\\\\\\\\\\\\n        0.00022235627693589777,\\\\\\\\\\\\\\\\n        -0.015039288438856602,\\\\\\\\\\\\\\\\n        0.012535125017166138,\\\\\\\\\\\\\\\\n        0.01513945497572422,\\\\\\\\\\\\\\\\n        -0.017386047169566154,\\\\\\\\\\\\\\\\n        0.0005084345466457307,\\\\\\\\\\\\\\\\n        0.02044828049838543,\\\\\\\\\\\\\\\\n        -0.030479243025183678,\\\\\\\\\\\\\\\\n        0.004561154171824455,\\\\\\\\\\\\\\\\n        0.02547091618180275,\\\\\\\\\\\\\\\\n        0.012091530486941338,\\\\\\\\\\\\\\\\n        -0.009437117725610733,\\\\\\\\\\\\\\\\n        -0.005412569735199213,\\\\\\\\\\\\\\\\n        -0.0036435574293136597,\\\\\\\\\\\\\\\\n        0.0004368870286270976,\\\\\\\\\\\\\\\\n        0.016971072182059288,\\\\\\\\\\\\\\\\n        0.04144032299518585,\\\\\\\\\\\\\\\\n        -0.015983715653419495,\\\\\\\\\\\\\\\\n        0.009866402484476566,\\\\\\\\\\\\\\\\n        -0.009365569800138474,\\\\\\\\\\\\\\\\n        0.03056509979069233,\\\\\\\\\\\\\\\\n        -0.007991857826709747,\\\\\\\\\\\\\\\\n        -0.006707579828798771,\\\\\\\\\\\\\\\\n        -0.026243630796670914,\\\\\\\\\\\\\\\\n        0.010825139470398426,\\\\\\\\\\\\\\\\n        0.014295194298028946,\\\\\\\\\\\\\\\\n        -0.023396039381623268,\\\\\\\\\\\\\\\\n        0.002786775818094611,\\\\\\\\\\\\\\\\n        -0.027488557621836662,\\\\\\\\\\\\\\\\n        0.011540614999830723,\\\\\\\\\\\\\\\\n        0.001717140432447195,\\\\\\\\\\\\\\\\n        -0.047650646418333054,\\\\\\\\\\\\\\\\n        -0.008943439461290836,\\\\\\\\\\\\\\\\n        0.016284216195344925,\\\\\\\\\\\\\\\\n        0.013408005237579346,\\\\\\\\\\\\\\\\n        -0.0011295564472675323,\\\\\\\\\\\\\\\\n        0.02607191540300846,\\\\\\\\\\\\\\\\n        -0.010925306007266045,\\\\\\\\\\\\\\\\n        -0.025571083649992943,\\\\\\\\\\\\\\\\n        0.0011438659857958555,\\\\\\\\\\\\\\\\n        -0.0042535001412034035,\\\\\\\\\\\\\\\\n        -0.026830319315195084,\\\\\\\\\\\\\\\\n        -0.026830319315195084,\\\\\\\\\\\\\\\\n        -0.008793190121650696,\\\\\\\\\\\\\\\\n        0.011404674500226974,\\\\\\\\\\\\\\\\n        -0.020190710201859474,\\\\\\\\\\\\\\\\n        0.008578547276556492,\\\\\\\\\\\\\\\\n        -0.004507493693381548,\\\\\\\\\\\\\\\\n        -0.007741441484540701,\\\\\\\\\\\\\\\\n        -0.02162165939807892,\\\\\\\\\\\\\\\\n        -0.007634120527654886,\\\\\\\\\\\\\\\\n        -0.0007812094991095364,\\\\\\\\\\\\\\\\n        -0.002865478163585067,\\\\\\\\\\\\\\\\n        0.016742119565606117,\\\\\\\\\\\\\\\\n        0.02341034822165966,\\\\\\\\\\\\\\\\n        0.0012744402047246695,\\\\\\\\\\\\\\\\n        0.004153333604335785,\\\\\\\\\\\\\\\\n        -0.02001899667084217,\\\\\\\\\\\\\\\\n        0.014781717211008072,\\\\\\\\\\\\\\\\n        0.007083204574882984,\\\\\\\\\\\\\\\\n        0.0045003388077020645,\\\\\\\\\\\\\\\\n        -0.004754332825541496,\\\\\\\\\\\\\\\\n        -0.01705692894756794,\\\\\\\\\\\\\\\\n        -0.016641952097415924,\\\\\\\\\\\\\\\\n        -0.0029119839891791344,\\\\\\\\\\\\\\\\n        0.013100351206958294,\\\\\\\\\\\\\\\\n        -0.014237956143915653,\\\\\\\\\\\\\\\\n        -0.008871892467141151,\\\\\\\\\\\\\\\\n        -0.03565928339958191,\\\\\\\\\\\\\\\\n        0.006693270523101091,\\\\\\\\\\\\\\\\n        -0.002679454628378153,\\\\\\\\\\\\\\\\n        0.006636032368987799,\\\\\\\\\\\\\\\\n        -0.0012896440457552671,\\\\\\\\\\\\\\\\n        0.023954110220074654,\\\\\\\\\\\\\\\\n        0.00013918228796683252,\\\\\\\\\\\\\\\\n        0.018416332080960274,\\\\\\\\\\\\\\\\n        -0.0251131784170866,\\\\\\\\\\\\\\\\n        0.03116609901189804,\\\\\\\\\\\\\\\\n        -0.01898871175944805,\\\\\\\\\\\\\\\\n        0.010367235168814659,\\\\\\\\\\\\\\\\n        0.01764361746609211,\\\\\\\\\\\\\\\\n        0.014102015644311905,\\\\\\\\\\\\\\\\n        -0.014638622291386127,\\\\\\\\\\\\\\\\n        -0.04687793552875519,\\\\\\\\\\\\\\\\n        0.005036945454776287,\\\\\\\\\\\\\\\\n        -0.014073397032916546,\\\\\\\\\\\\\\\\n        -0.029935482889413834,\\\\\\\\\\\\\\\\n        0.0022930980194360018,\\\\\\\\\\\\\\\\n        -0.026601368561387062,\\\\\\\\\\\\\\\\n        0.019589710980653763,\\\\\\\\\\\\\\\\n        -0.015597359277307987,\\\\\\\\\\\\\\\\n        -0.02000468596816063,\\\\\\\\\\\\\\\\n        -0.012349101714789867,\\\\\\\\\\\\\\\\n        -0.010896687395870686,\\\\\\\\\\\\\\\\n        -0.017672237008810043,\\\\\\\\\\\\\\\\n        -0.008893356658518314,\\\\\\\\\\\\\\\\n        0.0008308455580845475,\\\\\\\\\\\\\\\\n        0.011504841037094593,\\\\\\\\\\\\\\\\n        -0.020061925053596497,\\\\\\\\\\\\\\\\n        0.01742897555232048,\\\\\\\\\\\\\\\\n        -0.00050306849880144,\\\\\\\\\\\\\\\\n        0.025013012811541557,\\\\\\\\\\\\\\\\n        -0.011676555499434471,\\\\\\\\\\\\\\\\n        0.029592053964734077,\\\\\\\\\\\\\\\\n        0.019532471895217896,\\\\\\\\\\\\\\\\n        0.002396841999143362,\\\\\\\\\\\\\\\\n        -0.024912845343351364,\\\\\\\\\\\\\\\\n        -0.010610497556626797,\\\\\\\\\\\\\\\\n        -0.004103250335901976,\\\\\\\\\\\\\\\\n        0.0032214270904660225,\\\\\\\\\\\\\\\\n        -0.011791030876338482,\\\\\\\\\\\\\\\\n        0.01380867138504982,\\\\\\\\\\\\\\\\n        -0.004296428523957729,\\\\\\\\\\\\\\\\n        -0.012742613442242146,\\\\\\\\\\\\\\\\n        -0.033054955303668976,\\\\\\\\\\\\\\\\n        0.017457595095038414,\\\\\\\\\\\\\\\\n        -0.01625559665262699,\\\\\\\\\\\\\\\\n        -9.547122317599133e-05,\\\\\\\\\\\\\\\\n        -0.0012243569362908602,\\\\\\\\\\\\\\\\n        0.011934125795960426,\\\\\\\\\\\\\\\\n        0.00435724388808012,\\\\\\\\\\\\\\\\n        -0.009165237657725811,\\\\\\\\\\\\\\\\n        -0.00439301785081625,\\\\\\\\\\\\\\\\n        -0.18545116484165192,\\\\\\\\\\\\\\\\n        0.010739282704889774,\\\\\\\\\\\\\\\\n        0.028776412829756737,\\\\\\\\\\\\\\\\n        -0.030908528715372086,\\\\\\\\\\\\\\\\n        0.02296675369143486,\\\\\\\\\\\\\\\\n        0.004575463943183422,\\\\\\\\\\\\\\\\n        0.024941464886069298,\\\\\\\\\\\\\\\\n        0.014123479835689068,\\\\\\\\\\\\\\\\n        -0.026028987020254135,\\\\\\\\\\\\\\\\n        0.008879046887159348,\\\\\\\\\\\\\\\\n        0.013157588429749012,\\\\\\\\\\\\\\\\n        0.0014837166527286172,\\\\\\\\\\\\\\\\n        -0.029119839891791344,\\\\\\\\\\\\\\\\n        -0.02044828049838543,\\\\\\\\\\\\\\\\n        0.008650095202028751,\\\\\\\\\\\\\\\\n        -0.012241780757904053,\\\\\\\\\\\\\\\\n        -0.014352432452142239,\\\\\\\\\\\\\\\\n        0.009086535312235355,\\\\\\\\\\\\\\\\n        0.009551594033837318,\\\\\\\\\\\\\\\\n        0.020791709423065186,\\\\\\\\\\\\\\\\n        0.025356439873576164,\\\\\\\\\\\\\\\\n        -0.009573058225214481,\\\\\\\\\\\\\\\\n        0.01647023856639862,\\\\\\\\\\\\\\\\n        0.011461912654340267,\\\\\\\\\\\\\\\\n        0.0054233018308877945,\\\\\\\\\\\\\\\\n        0.011490531265735626,\\\\\\\\\\\\\\\\n        -0.02465527504682541,\\\\\\\\\\\\\\\\n        0.0028923084028065205,\\\\\\\\\\\\\\\\n        -0.006718311924487352,\\\\\\\\\\\\\\\\n        -0.029706530272960663,\\\\\\\\\\\\\\\\n        0.001210047397762537,\\\\\\\\\\\\\\\\n        -0.01714278571307659,\\\\\\\\\\\\\\\\n        0.011626471765339375,\\\\\\\\\\\\\\\\n        -0.006113735493272543,\\\\\\\\\\\\\\\\n        -0.016427310183644295,\\\\\\\\\\\\\\\\n        0.005519891157746315,\\\\\\\\\\\\\\\\n        -0.023496204987168312,\\\\\\\\\\\\\\\\n        -0.020920494571328163,\\\\\\\\\\\\\\\\n        -0.004518225789070129,\\\\\\\\\\\\\\\\n        0.015683216974139214,\\\\\\\\\\\\\\\\n        0.02650120109319687,\\\\\\\\\\\\\\\\n        0.024855608120560646,\\\\\\\\\\\\\\\\n        0.023095538839697838,\\\\\\\\\\\\\\\\n        0.017228642478585243,\\\\\\\\\\\\\\\\n        0.0033734655007719994,\\\\\\\\\\\\\\\\n        0.00575957540422678,\\\\\\\\\\\\\\\\n        0.014924812130630016,\\\\\\\\\\\\\\\\n        -0.04584765061736107,\\\\\\\\\\\\\\\\n        0.0050691417418420315,\\\\\\\\\\\\\\\\n        -0.02725960500538349,\\\\\\\\\\\\\\\\n        0.025456607341766357,\\\\\\\\\\\\\\\\n        -0.014652932062745094,\\\\\\\\\\\\\\\\n        0.010939615778625011,\\\\\\\\\\\\\\\\n        -0.021321160718798637,\\\\\\\\\\\\\\\\n        0.01734311878681183,\\\\\\\\\\\\\\\\n        -0.0031838645227253437,\\\\\\\\\\\\\\\\n        -0.008170726709067822,\\\\\\\\\\\\\\\\n        0.017829641699790955,\\\\\\\\\\\\\\\\n        -0.0174862127751112,\\\\\\\\\\\\\\\\n        0.002733115339651704,\\\\\\\\\\\\\\\\n        -0.015439954586327076,\\\\\\\\\\\\\\\\n        -0.007151174359023571,\\\\\\\\\\\\\\\\n        0.03640337660908699,\\\\\\\\\\\\\\\\n        0.007419477682560682,\\\\\\\\\\\\\\\\n        -0.007290692068636417,\\\\\\\\\\\\\\\\n        -0.006814901251345873,\\\\\\\\\\\\\\\\n        0.009308332577347755,\\\\\\\\\\\\\\\\n        0.006900758016854525,\\\\\\\\\\\\\\\\n        -0.009945104829967022,\\\\\\\\\\\\\\\\n        0.023653609678149223,\\\\\\\\\\\\\\\\n        -0.010975389741361141,\\\\\\\\\\\\\\\\n        -0.013894528150558472,\\\\\\\\\\\\\\\\n        -0.01103978231549263,\\\\\\\\\\\\\\\\n        -0.018645282834768295,\\\\\\\\\\\\\\\\n        0.015511502511799335,\\\\\\\\\\\\\\\\n        0.029119839891791344,\\\\\\\\\\\\\\\\n        -0.021807683631777763,\\\\\\\\\\\\\\\\n        0.010882377624511719,\\\\\\\\\\\\\\\\n        -0.03794880583882332,\\\\\\\\\\\\\\\\n        0.007948929443955421,\\\\\\\\\\\\\\\\n        -0.011919816955924034,\\\\\\\\\\\\\\\\n        0.03391352295875549,\\\\\\\\\\\\\\\\n        0.0010589032899588346,\\\\\\\\\\\\\\\\n        0.010989698581397533,\\\\\\\\\\\\\\\\n        -0.01631283387541771,\\\\\\\\\\\\\\\\n        -0.0030425582081079483,\\\\\\\\\\\\\\\\n        0.01384444534778595,\\\\\\\\\\\\\\\\n        0.004682784900069237,\\\\\\\\\\\\\\\\n        0.0002709862310439348,\\\\\\\\\\\\\\\\n        -0.012671065516769886,\\\\\\\\\\\\\\\\n        0.04341503605246544,\\\\\\\\\\\\\\\\n        -0.04447393864393234,\\\\\\\\\\\\\\\\n        -0.006489359773695469,\\\\\\\\\\\\\\\\n        -0.005112070124596357,\\\\\\\\\\\\\\\\n        0.050541166216135025,\\\\\\\\\\\\\\\\n        0.030107196420431137,\\\\\\\\\\\\\\\\n        0.004049589391797781,\\\\\\\\\\\\\\\\n        -0.012735458090901375,\\\\\\\\\\\\\\\\n        0.029563434422016144,\\\\\\\\\\\\\\\\n        0.0010910996934399009,\\\\\\\\\\\\\\\\n        -0.00897205900400877,\\\\\\\\\\\\\\\\n        -0.004167642910033464,\\\\\\\\\\\\\\\\n        -0.018416332080960274,\\\\\\\\\\\\\\\\n        -0.0005853481125086546,\\\\\\\\\\\\\\\\n        0.011089865118265152,\\\\\\\\\\\\\\\\n        0.0032428912818431854,\\\\\\\\\\\\\\\\n        -0.001219885190948844,\\\\\\\\\\\\\\\\n        -0.01041016448289156,\\\\\\\\\\\\\\\\n        0.010538949631154537,\\\\\\\\\\\\\\\\n        -0.0101168192923069,\\\\\\\\\\\\\\\\n        -0.022194040939211845,\\\\\\\\\\\\\\\\n        -0.006446431390941143,\\\\\\\\\\\\\\\\n        0.0014649354852735996,\\\\\\\\\\\\\\\\n        -0.006138777360320091,\\\\\\\\\\\\\\\\n        -0.001328995218500495,\\\\\\\\\\\\\\\\n        0.024540798738598824,\\\\\\\\\\\\\\\\n        -0.0022269166074693203,\\\\\\\\\\\\\\\\n        0.001330783823505044,\\\\\\\\\\\\\\\\n        -0.011161413043737411,\\\\\\\\\\\\\\\\n        0.018344784155488014,\\\\\\\\\\\\\\\\n        0.03966594487428665,\\\\\\\\\\\\\\\\n        -0.010789365507662296,\\\\\\\\\\\\\\\\n        -0.024612346664071083,\\\\\\\\\\\\\\\\n        -0.0002432615583529696,\\\\\\\\\\\\\\\\n        -0.009551594033837318,\\\\\\\\\\\\\\\\n        -0.0237823948264122,\\\\\\\\\\\\\\\\n        -0.1160786971449852,\\\\\\\\\\\\\\\\n        -0.03225362300872803,\\\\\\\\\\\\\\\\n        0.02355344407260418,\\\\\\\\\\\\\\\\n        0.027302533388137817,\\\\\\\\\\\\\\\\n        -0.011848269030451775,\\\\\\\\\\\\\\\\n        -0.00020804676751140505,\\\\\\\\\\\\\\\\n        0.005820390768349171,\\\\\\\\\\\\\\\\n        0.004679207690060139,\\\\\\\\\\\\\\\\n        -0.01771516539156437,\\\\\\\\\\\\\\\\n        0.0326542891561985,\\\\\\\\\\\\\\\\n        -0.0025345708709210157,\\\\\\\\\\\\\\\\n        -0.015239621512591839,\\\\\\\\\\\\\\\\n        -0.007405168376863003,\\\\\\\\\\\\\\\\n        -0.013322148472070694,\\\\\\\\\\\\\\\\n        0.004310737829655409,\\\\\\\\\\\\\\\\n        -0.011454758234322071,\\\\\\\\\\\\\\\\n        0.012835624627768993,\\\\\\\\\\\\\\\\n        -0.020949114114046097,\\\\\\\\\\\\\\\\n        0.018516497686505318,\\\\\\\\\\\\\\\\n        0.020491208881139755,\\\\\\\\\\\\\\\\n        0.007165484130382538,\\\\\\\\\\\\\\\\n        -0.024984393268823624,\\\\\\\\\\\\\\\\n        0.03125195577740669,\\\\\\\\\\\\\\\\n        0.004403749946504831,\\\\\\\\\\\\\\\\n        -0.03952284902334213,\\\\\\\\\\\\\\\\n        -0.003763399552553892,\\\\\\\\\\\\\\\\n        -0.009243939071893692,\\\\\\\\\\\\\\\\n        0.012349101714789867,\\\\\\\\\\\\\\\\n        0.01155492477118969,\\\\\\\\\\\\\\\\n        0.02266625314950943,\\\\\\\\\\\\\\\\n        0.011977055110037327,\\\\\\\\\\\\\\\\n        -0.011354591697454453,\\\\\\\\\\\\\\\\n        -0.001376395346596837,\\\\\\\\\\\\\\\\n        -0.0101168192923069,\\\\\\\\\\\\\\\\n        0.000986461411230266,\\\\\\\\\\\\\\\\n        0.009522974491119385,\\\\\\\\\\\\\\\\n        -0.028933817520737648,\\\\\\\\\\\\\\\\n        -0.01780102215707302,\\\\\\\\\\\\\\\\n        -0.0014863996766507626,\\\\\\\\\\\\\\\\n        -0.018845615908503532,\\\\\\\\\\\\\\\\n        -0.004353666678071022,\\\\\\\\\\\\\\\\n        0.005934866610914469,\\\\\\\\\\\\\\\\n        0.008449762128293514,\\\\\\\\\\\\\\\\n        0.006163818761706352,\\\\\\\\\\\\\\\\n        0.017314499244093895,\\\\\\\\\\\\\\\\n        -0.007519644219428301,\\\\\\\\\\\\\\\\n        -0.01677073910832405,\\\\\\\\\\\\\\\\n        0.02444063313305378,\\\\\\\\\\\\\\\\n        0.007505334913730621,\\\\\\\\\\\\\\\\n        -0.016885215416550636,\\\\\\\\\\\\\\\\n        -0.033112190663814545,\\\\\\\\\\\\\\\\n        -0.004346511792391539,\\\\\\\\\\\\\\\\n        -0.025141797959804535,\\\\\\\\\\\\\\\\n        -0.011068400926887989,\\\\\\\\\\\\\\\\n        0.021449945867061615,\\\\\\\\\\\\\\\\n        -0.028161102905869484,\\\\\\\\\\\\\\\\n        0.008356750011444092,\\\\\\\\\\\\\\\\n        -0.002568555995821953,\\\\\\\\\\\\\\\\n        0.01624128594994545,\\\\\\\\\\\\\\\\n        -0.0020230060908943415,\\\\\\\\\\\\\\\\n        0.010066735558211803,\\\\\\\\\\\\\\\\n        0.016069572418928146,\\\\\\\\\\\\\\\\n        -0.010846603661775589,\\\\\\\\\\\\\\\\n        0.03514414280653,\\\\\\\\\\\\\\\\n        0.04905297979712486,\\\\\\\\\\\\\\\\n        8.507446909788996e-05,\\\\\\\\\\\\\\\\n        0.008592857047915459,\\\\\\\\\\\\\\\\n        -0.01269968505948782,\\\\\\\\\\\\\\\\n        0.004697094671428204,\\\\\\\\\\\\\\\\n        -0.005366064142435789,\\\\\\\\\\\\\\\\n        -0.024855608120560646,\\\\\\\\\\\\\\\\n        0.016298525035381317,\\\\\\\\\\\\\\\\n        -0.013121815398335457,\\\\\\\\\\\\\\\\n        0.017886878922581673,\\\\\\\\\\\\\\\\n        -0.02939172089099884,\\\\\\\\\\\\\\\\n        0.00044493612949736416,\\\\\\\\\\\\\\\\n        -0.007948929443955421,\\\\\\\\\\\\\\\\n        -0.018430640920996666,\\\\\\\\\\\\\\\\n        -0.018187379464507103,\\\\\\\\\\\\\\\\n        0.011082710698246956,\\\\\\\\\\\\\\\\n        -0.040724847465753555,\\\\\\\\\\\\\\\\n        -0.018058594316244125,\\\\\\\\\\\\\\\\n        -0.011097020469605923,\\\\\\\\\\\\\\\\n        0.018187379464507103,\\\\\\\\\\\\\\\\n        -0.00020335146109573543,\\\\\\\\\\\\\\\\n        0.0121129946783185,\\\\\\\\\\\\\\\\n        -0.018487878143787384,\\\\\\\\\\\\\\\\n        -0.027803365141153336,\\\\\\\\\\\\\\\\n        0.0170426182448864,\\\\\\\\\\\\\\\\n        -0.03162400424480438,\\\\\\\\\\\\\\\\n        -0.014495527371764183,\\\\\\\\\\\\\\\\n        0.02502732165157795,\\\\\\\\\\\\\\\\n        0.01594078727066517,\\\\\\\\\\\\\\\\n        -0.0180156659334898,\\\\\\\\\\\\\\\\n        0.00055851781507954,\\\\\\\\\\\\\\\\n        0.027445629239082336,\\\\\\\\\\\\\\\\n        -0.013193362392485142,\\\\\\\\\\\\\\\\n        -0.0016867327503859997,\\\\\\\\\\\\\\\\n        0.015082216821610928,\\\\\\\\\\\\\\\\n        0.010352926328778267,\\\\\\\\\\\\\\\\n        0.0023735889699310064,\\\\\\\\\\\\\\\\n        -0.010309997946023941,\\\\\\\\\\\\\\\\n        -0.04868093132972717,\\\\\\\\\\\\\\\\n        0.019303521141409874,\\\\\\\\\\\\\\\\n        0.02103497087955475,\\\\\\\\\\\\\\\\n        0.008549928665161133,\\\\\\\\\\\\\\\\n        0.009136618115007877,\\\\\\\\\\\\\\\\n        0.013508171774446964,\\\\\\\\\\\\\\\\n        0.025356439873576164,\\\\\\\\\\\\\\\\n        0.0027957193087786436,\\\\\\\\\\\\\\\\n        -0.012807006016373634,\\\\\\\\\\\\\\\\n        -0.01081082969903946,\\\\\\\\\\\\\\\\n        -0.022766420617699623,\\\\\\\\\\\\\\\\n        0.004353666678071022,\\\\\\\\\\\\\\\\n        -0.032453954219818115,\\\\\\\\\\\\\\\\n        -0.01532547827810049,\\\\\\\\\\\\\\\\n        -0.004686362575739622,\\\\\\\\\\\\\\\\n        -0.020419662818312645,\\\\\\\\\\\\\\\\n        0.029363101348280907,\\\\\\\\\\\\\\\\n        -0.0007977548521012068,\\\\\\\\\\\\\\\\n        0.018731139600276947,\\\\\\\\\\\\\\\\n        0.0307940524071455,\\\\\\\\\\\\\\\\n        0.012620982713997364,\\\\\\\\\\\\\\\\n        -0.004350089002400637,\\\\\\\\\\\\\\\\n        -0.011268734000623226,\\\\\\\\\\\\\\\\n        0.00926540419459343,\\\\\\\\\\\\\\\\n        0.01303595770150423,\\\\\\\\\\\\\\\\n        -0.010066735558211803,\\\\\\\\\\\\\\\\n        -0.002103497041389346,\\\\\\\\\\\\\\\\n        0.017071237787604332,\\\\\\\\\\\\\\\\n        -0.02090618573129177,\\\\\\\\\\\\\\\\n        -0.023882562294602394,\\\\\\\\\\\\\\\\n        0.0026096957735717297,\\\\\\\\\\\\\\\\n        -0.00808486994355917,\\\\\\\\\\\\\\\\n        0.012513660825788975,\\\\\\\\\\\\\\\\n        0.026114843785762787,\\\\\\\\\\\\\\\\n        0.010767901316285133,\\\\\\\\\\\\\\\\n        -0.008471226319670677,\\\\\\\\\\\\\\\\n        0.010646270588040352,\\\\\\\\\\\\\\\\n        0.012499351985752583,\\\\\\\\\\\\\\\\n        0.016656262800097466,\\\\\\\\\\\\\\\\n        -0.024712512269616127,\\\\\\\\\\\\\\\\n        0.009186701849102974,\\\\\\\\\\\\\\\\n        0.0025220499373972416,\\\\\\\\\\\\\\\\n        -0.004568309057503939,\\\\\\\\\\\\\\\\n        -0.028032317757606506,\\\\\\\\\\\\\\\\n        0.008857582695782185,\\\\\\\\\\\\\\\\n        -0.005602170713245869,\\\\\\\\\\\\\\\\n        -0.006428544409573078,\\\\\\\\\\\\\\\\n        0.008507000282406807,\\\\\\\\\\\\\\\\n        0.013136124238371849,\\\\\\\\\\\\\\\\n        0.001126873423345387,\\\\\\\\\\\\\\\\n        0.03153814747929573,\\\\\\\\\\\\\\\\n        0.009866402484476566,\\\\\\\\\\\\\\\\n        0.026300868019461632,\\\\\\\\\\\\\\\\n        -0.0024826989974826574,\\\\\\\\\\\\\\\\n        -0.0031141056679189205,\\\\\\\\\\\\\\\\n        -0.021020662039518356,\\\\\\\\\\\\\\\\n        -0.01558304950594902,\\\\\\\\\\\\\\\\n        -0.01303595770150423,\\\\\\\\\\\\\\\\n        0.013393695466220379,\\\\\\\\\\\\\\\\n        -0.04830888658761978,\\\\\\\\\\\\\\\\n        0.017099857330322266,\\\\\\\\\\\\\\\\n        0.008406833745539188,\\\\\\\\\\\\\\\\n        0.0025578239001333714,\\\\\\\\\\\\\\\\n        -0.019890209659934044,\\\\\\\\\\\\\\\\n        0.010567568242549896,\\\\\\\\\\\\\\\\n        0.006986615248024464,\\\\\\\\\\\\\\\\n        -0.0067827049642801285,\\\\\\\\\\\\\\\\n        0.02371084876358509,\\\\\\\\\\\\\\\\n        -0.009887867607176304,\\\\\\\\\\\\\\\\n        -0.024168752133846283,\\\\\\\\\\\\\\\\n        -0.010088199749588966,\\\\\\\\\\\\\\\\n        0.023911181837320328,\\\\\\\\\\\\\\\\n        0.00963745079934597,\\\\\\\\\\\\\\\\n        0.008557083085179329,\\\\\\\\\\\\\\\\n        0.02326725237071514,\\\\\\\\\\\\\\\\n        0.0085213091224432,\\\\\\\\\\\\\\\\n        -0.003584530670195818,\\\\\\\\\\\\\\\\n        0.00709035899490118,\\\\\\\\\\\\\\\\n        -0.005688027944415808,\\\\\\\\\\\\\\\\n        0.030536482110619545,\\\\\\\\\\\\\\\\n        0.021106518805027008,\\\\\\\\\\\\\\\\n        -0.022766420617699623,\\\\\\\\\\\\\\\\n        -0.01867390237748623,\\\\\\\\\\\\\\\\n        0.014531301334500313,\\\\\\\\\\\\\\\\n        0.033999379724264145,\\\\\\\\\\\\\\\\n        -0.004056744277477264,\\\\\\\\\\\\\\\\n        -0.011161413043737411,\\\\\\\\\\\\\\\\n        0.02348189614713192,\\\\\\\\\\\\\\\\n        0.0018548694206401706,\\\\\\\\\\\\\\\\n        0.00039619437302462757,\\\\\\\\\\\\\\\\n        -0.0023413924500346184,\\\\\\\\\\\\\\\\n        -0.0063212234526872635,\\\\\\\\\\\\\\\\n        -0.017157094553112984,\\\\\\\\\\\\\\\\n        -0.02140701748430729,\\\\\\\\\\\\\\\\n        0.010882377624511719,\\\\\\\\\\\\\\\\n        0.03926527872681618,\\\\\\\\\\\\\\\\n        -0.016484549269080162,\\\\\\\\\\\\\\\\n        0.003838524455204606,\\\\\\\\\\\\\\\\n        0.03070819564163685,\\\\\\\\\\\\\\\\n        0.016413001343607903,\\\\\\\\\\\\\\\\n        0.004271387122571468,\\\\\\\\\\\\\\\\n        0.007158329244703054,\\\\\\\\\\\\\\\\n        -0.011719483882188797,\\\\\\\\\\\\\\\\n        -0.010581878013908863,\\\\\\\\\\\\\\\\n        -0.016713500022888184,\\\\\\\\\\\\\\\\n        0.00893628504127264,\\\\\\\\\\\\\\\\n        -0.008907666429877281,\\\\\\\\\\\\\\\\n        -0.023539133369922638,\\\\\\\\\\\\\\\\n        6.282766844378784e-05,\\\\\\\\\\\\\\\\n        0.02051982842385769,\\\\\\\\\\\\\\\\n        0.018516497686505318,\\\\\\\\\\\\\\\\n        0.010174057446420193,\\\\\\\\\\\\\\\\n        0.01830185577273369,\\\\\\\\\\\\\\\\n        0.004128291737288237,\\\\\\\\\\\\\\\\n        -0.008735951967537403,\\\\\\\\\\\\\\\\n        0.025456607341766357,\\\\\\\\\\\\\\\\n        -0.014867574907839298,\\\\\\\\\\\\\\\\n        -0.011268734000623226,\\\\\\\\\\\\\\\\n        -0.014144944958388805,\\\\\\\\\\\\\\\\n        0.005451920907944441,\\\\\\\\\\\\\\\\n        0.0064786276780068874,\\\\\\\\\\\\\\\\n        0.005934866610914469,\\\\\\\\\\\\\\\\n        0.02266625314950943,\\\\\\\\\\\\\\\\n        -0.0015812001656740904,\\\\\\\\\\\\\\\\n        0.028075246140360832,\\\\\\\\\\\\\\\\n        0.006940109189599752,\\\\\\\\\\\\\\\\n        0.0070045022293925285,\\\\\\\\\\\\\\\\n        -0.03897908702492714,\\\\\\\\\\\\\\\\n        0.009036451578140259,\\\\\\\\\\\\\\\\n        0.003364522010087967,\\\\\\\\\\\\\\\\n        -0.007748596370220184,\\\\\\\\\\\\\\\\n        -0.005713069345802069,\\\\\\\\\\\\\\\\n        -0.017958426848053932,\\\\\\\\\\\\\\\\n        -0.019003020599484444,\\\\\\\\\\\\\\\\n        -0.007405168376863003,\\\\\\\\\\\\\\\\n        -0.016942452639341354,\\\\\\\\\\\\\\\\n        0.004511070903390646,\\\\\\\\\\\\\\\\n        0.020290875807404518,\\\\\\\\\\\\\\\\n        -0.01986159197986126,\\\\\\\\\\\\\\\\n        0.07978979498147964,\\\\\\\\\\\\\\\\n        0.005813235882669687,\\\\\\\\\\\\\\\\n        0.0030389807652682066,\\\\\\\\\\\\\\\\n        -0.02999272011220455,\\\\\\\\\\\\\\\\n        0.018044283613562584,\\\\\\\\\\\\\\\\n        0.013207672163844109,\\\\\\\\\\\\\\\\n        0.005376796238124371,\\\\\\\\\\\\\\\\n        -0.006489359773695469,\\\\\\\\\\\\\\\\n        -0.02312415838241577,\\\\\\\\\\\\\\\\n        -0.039093565195798874,\\\\\\\\\\\\\\\\n        -0.0009345894795842469,\\\\\\\\\\\\\\\\n        0.004049589391797781,\\\\\\\\\\\\\\\\n        0.01222031656652689,\\\\\\\\\\\\\\\\n        -0.016198357567191124,\\\\\\\\\\\\\\\\n        0.0012243569362908602,\\\\\\\\\\\\\\\\n        0.014330968260765076,\\\\\\\\\\\\\\\\n        0.004997594282031059,\\\\\\\\\\\\\\\\n        0.022194040939211845,\\\\\\\\\\\\\\\\n        0.005019058473408222,\\\\\\\\\\\\\\\\n        -0.014137789607048035,\\\\\\\\\\\\\\\\n        0.022408682852983475,\\\\\\\\\\\\\\\\n        -0.01625559665262699,\\\\\\\\\\\\\\\\n        0.010467401705682278,\\\\\\\\\\\\\\\\n        0.012256089597940445,\\\\\\\\\\\\\\\\n        -0.012062911875545979,\\\\\\\\\\\\\\\\n        -0.005809658672660589,\\\\\\\\\\\\\\\\n        0.02296675369143486,\\\\\\\\\\\\\\\\n        0.008635785430669785,\\\\\\\\\\\\\\\\n        -0.004997594282031059,\\\\\\\\\\\\\\\\n        -0.04387293756008148,\\\\\\\\\\\\\\\\n        -0.004110404755920172,\\\\\\\\\\\\\\\\n        0.0002998288255184889,\\\\\\\\\\\\\\\\n        0.00849269051104784,\\\\\\\\\\\\\\\\n        -0.014395360834896564,\\\\\\\\\\\\\\\\n        -0.011826804839074612,\\\\\\\\\\\\\\\\n        -0.016284216195344925,\\\\\\\\\\\\\\\\n        -0.009873557835817337,\\\\\\\\\\\\\\\\n        0.006070807110518217,\\\\\\\\\\\\\\\\n        0.029033983126282692,\\\\\\\\\\\\\\\\n        0.040867943316698074,\\\\\\\\\\\\\\\\n        -0.005788194481283426,\\\\\\\\\\\\\\\\n        0.023868251591920853,\\\\\\\\\\\\\\\\n        -0.03139505162835121,\\\\\\\\\\\\\\\\n        -0.013214826583862305,\\\\\\\\\\\\\\\\n        -0.020362423732876778,\\\\\\\\\\\\\\\\n        -0.0016053474973887205,\\\\\\\\\\\\\\\\n        0.0029942637775093317,\\\\\\\\\\\\\\\\n        0.001788688008673489,\\\\\\\\\\\\\\\\n        -0.049138836562633514\\\\\\\\\\\\\\\\n      ],\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""index\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0,\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""embedding\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""ada\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""list\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""usage\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""prompt_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 8,\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""total_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 8\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""children\\\\\\\\\\\\\\\"": []}\\\\\\\""]}\\\"", \\\""{\\\\\\\""attributes\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""retrieval.documents\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""[\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.3891408443450928,\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.metadata\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf3\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 3,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 551,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 2502,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 35\\\\\\\\\\\\\\\\n            },\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\\\\\\\\\n            }\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Title: 1706.03762.pdfAttention Visualizations\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nInput-Input Layer5\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe verb \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2019, completing the phrase \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2018making...more difficult\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2019. Attentions here shown only for\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe word \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n13\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.39398106932640076,\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.metadata\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf12\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""2ab3047247294a730f42d2e9fb421bfa7bcf724d98adf2714c6566d1d3199abd\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 12,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 254,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 833,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 73\\\\\\\\\\\\\\\\n            },\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\\\\\\\\\n            }\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.42212480306625366,\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.metadata\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 668,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 2874,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 50\\\\\\\\\\\\\\\\n            },\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\\\\\\\\\n            }\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""retrieval.query\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""What are some ways to improve the efficiency of Attention calculation?\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""span_type\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""Retrieval\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""context\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""span_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""0x79d5c32fe460520a\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""trace_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""trace_state\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""end_time\\\\\\\"": \\\\\\\""2024-02-05T15:56:05.657633\\\\\\\"", \\\\\\\""events\\\\\\\"": \\\\\\\""[]\\\\\\\"", \\\\\\\""kind\\\\\\\"": \\\\\\\""SpanKind.INTERNAL\\\\\\\"", \\\\\\\""links\\\\\\\"": \\\\\\\""[]\\\\\\\"", \\\\\\\""name\\\\\\\"": \\\\\\\""search\\\\\\\"", \\\\\\\""parent_id\\\\\\\"": \\\\\\\""0x2b2a902ea98f7623\\\\\\\"", \\\\\\\""resource\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""attributes\\\\\\\\\\\\\\\"":{\\\\\\\\\\\\\\\""service.name\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\""},\\\\\\\\\\\\\\\""schema_url\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""start_time\\\\\\\"": \\\\\\\""2024-02-05T15:56:05.081193\\\\\\\"", \\\\\\\""status\\\\\\\"": \\\\\\\""UNSET\\\\\\\"", \\\\\\\""trace_id\\\\\\\"": \\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\"", \\\\\\\""span_id\\\\\\\"": \\\\\\\""0x79d5c32fe460520a\\\\\\\"", \\\\\\\""span_type\\\\\\\"": \\\\\\\""Retrieval\\\\\\\"", \\\\\\\""framework\\\\\\\"": null, \\\\\\\""input\\\\\\\"": null, \\\\\\\""output\\\\\\\"": null, \\\\\\\""children\\\\\\\"": [\\\\\\\""{\\\\\\\\\\\\\\\""attributes\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""flow_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""framework\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""function\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""openai.resources.embeddings.Embeddings.create\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""inputs\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""input\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      3923,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      527,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      1063,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      5627,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      311,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      7417,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      279,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      15374,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      315,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      63120,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      22702,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      30\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    ]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""text-embedding-ada-002\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""line_run_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""d13da436-d3ad-4905-9aae-2dfc0cb2b538\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""node_name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""vector_lookup\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""output\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""data\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""embedding\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018112102523446083,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.034980811178684235,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03368215635418892,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019258787855505943,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009746826253831387,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02544812671840191,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018802877515554428,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02584877610206604,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017766715958714485,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024356702342629433,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024384334683418274,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029012521728873253,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008800464682281017,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0286809504032135,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008620863780379295,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011598100885748863,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026677705347537994,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0123165063560009,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010389246046543121,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011004035361111164,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03520185872912407,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0008729660767130554,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002260559005662799,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014354290440678596,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0007326525519602001,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006634887307882309,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018374597653746605,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01565294712781906,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0033157167490571737,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03525712341070175,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.041225410997867584,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004483125638216734,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0006549404351972044,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02280936762690544,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010147474706172943,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014533892273902893,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0037336351815611124,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012592815794050694,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030559856444597244,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017932502552866936,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022961338981986046,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012005657888948917,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004987390711903572,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008828096091747284,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007163329981267452,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022933708503842354,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0010931503493338823,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01903774030506611,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02746518701314926,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016661476343870163,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014098703861236572,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02594548463821411,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013055634684860706,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011446130461990833,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008323830552399158,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001347009907476604,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018885770812630653,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019023925065994263,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0035851188004016876,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007253130432218313,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005353501066565514,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0017234819242730737,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0002428503503324464,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009898795746266842,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011100743897259235,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003913236781954765,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004894135985523462,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002600765321403742,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01838841289281845,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007930089719593525,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02325146459043026,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01424376666545868,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015639130026102066,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009947150014340878,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03614131361246109,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020087717100977898,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019148264080286026,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013663516379892826,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025807328522205353,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01595688797533512,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006990636233240366,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00019147401326335967,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0030135030392557383,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029344093054533005,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005353501066565514,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.000526715419255197,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02257450483739376,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011314883828163147,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007170237600803375,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0047870660200715065,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007888643071055412,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014450998976826668,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023127123713493347,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009947150014340878,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010803710669279099,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01677200011909008,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007204776164144278,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019493652507662773,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024038946256041527,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010617201216518879,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004973575007170439,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003833797527477145,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.047525275498628616,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01609504222869873,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004027214366942644,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01463059987872839,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004914859309792519,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005571094807237387,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013442468829452991,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008006074465811253,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01630227454006672,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017352251335978508,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011280344799160957,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016053594648838043,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00034409196814522147,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0073429313488304615,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012952018529176712,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008019889704883099,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.041225410997867584,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026235608384013176,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02689875289797783,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016882523894309998,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02757571078836918,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006669426336884499,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0031516579911112785,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023942237719893456,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020916646346449852,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004776704590767622,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021952807903289795,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020571259781718254,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00895934272557497,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02942698635160923,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012095458805561066,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01304181944578886,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03108484484255314,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0014704858185723424,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01656476780772209,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006507094018161297,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02551720291376114,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0031274808570742607,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010188921354711056,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02642902545630932,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0025610458105802536,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015873994678258896,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011736256070435047,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04713844135403633,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010513585060834885,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03188614174723625,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004168822895735502,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0016354082617908716,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006220422685146332,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016426613554358482,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003578210948035121,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007377469912171364,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007370562292635441,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0015119323506951332,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023196201771497726,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0066245258785784245,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012323413975536823,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0374675989151001,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01192967314273119,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006524363532662392,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011149098165333271,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00046066014328971505,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02028113417327404,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01815355010330677,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0068352119997143745,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005619449075311422,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005318962503224611,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0060408213175833225,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0046281879767775536,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01930023543536663,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010320168919861317,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009636301547288895,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012523738667368889,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0018668175907805562,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.032853227108716965,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00015984950005076826,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010651740245521069,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02881910465657711,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006161706987768412,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0035212221555411816,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011266529560089111,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002329636365175247,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00990570429712534,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010803710669279099,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01606741175055504,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007957720197737217,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01391910295933485,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.035754479467868805,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00754325557500124,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006966459099203348,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025158001109957695,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020239688456058502,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.6512067914009094,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018512751907110214,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011515208519995213,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022325826808810234,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006320585031062365,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011328699067234993,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004759435076266527,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007626148406416178,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01883050799369812,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02358303591609001,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013663516379892826,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00803370587527752,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008164952509105206,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01418850477784872,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004255170002579689,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030836166813969612,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0018581829499453306,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021303480491042137,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006821396294981241,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0030359532684087753,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03130589425563812,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0015257478225976229,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01319378986954689,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0070009976625442505,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010658647865056992,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02128966525197029,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0033329862635582685,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019327865913510323,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010340891778469086,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027313217520713806,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008413631469011307,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0006683241808786988,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019286420196294785,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027078352868556976,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.047027915716171265,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019258787855505943,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018941031768918037,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027630973607301712,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.035754479467868805,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04548058286309242,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022256748750805855,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016177935525774956,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027934914454817772,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016647661104798317,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01494835689663887,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003172381082549691,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011349421925842762,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003196558216586709,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0031516579911112785,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04114251956343651,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005695434287190437,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003882151795551181,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019466020166873932,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004117014817893505,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006085721775889397,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00104825000744313,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013663516379892826,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012116181664168835,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004476217553019524,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004845781717449427,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010285629890859127,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02484024502336979,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02182846888899803,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01174316368997097,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02926119975745678,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0006078814039938152,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007653779815882444,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02402513101696968,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008392907679080963,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026802044361829758,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005021929275244474,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01418850477784872,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012157628312706947,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025254709646105766,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03111247532069683,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006697057280689478,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02879147417843342,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00855178665369749,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014865463599562645,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004548748955130577,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00044943505781702697,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004963213577866554,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027216508984565735,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019548913463950157,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007184052839875221,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02338961884379387,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007184052839875221,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02180083841085434,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0017329801339656115,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0008310878765769303,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013380298390984535,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007778118830174208,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0023210018407553434,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.047027915716171265,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019424574449658394,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006852481514215469,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00899388175457716,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018913401290774345,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03125062957406044,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005356954876333475,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01518321968615055,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024411965161561966,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010437600314617157,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012551369145512581,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020709414035081863,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0016984413377940655,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00830310769379139,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01197802647948265,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04144645854830742,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005598725751042366,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0018823600839823484,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008800464682281017,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00043540369370020926,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010741541162133217,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0010983311804011464,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03567158803343773,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012157628312706947,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006859389133751392,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012074735015630722,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004165369085967541,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007743580266833305,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0006463057361543179,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020571259781718254,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04501085355877876,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0030014144722372293,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010064582340419292,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0001065303513314575,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0003052359097637236,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012724063359200954,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012095458805561066,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008199491538107395,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002226020209491253,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013242144137620926,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0010275267995893955,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01953509822487831,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006717780139297247,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00712188333272934,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010347799398005009,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0005146268522366881,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03304664418101311,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022629767656326294,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001903083291836083,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02528234012424946,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.041556984186172485,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021151509135961533,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004994298331439495,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0007728037890046835,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014893095009028912,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.000305020046653226,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008731387555599213,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007791934534907341,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00872447993606329,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014975987374782562,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00476634269580245,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001241666846908629,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01994956284761429,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012240521609783173,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03288085758686066,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021814653649926186,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03962281718850136,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018346965312957764,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021234402433037758,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017089756205677986,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0029461525846272707,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015514791011810303,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018070656806230545,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006147891748696566,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020170610398054123,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.045231904834508896,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022602135315537453,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005270608235150576,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025088923051953316,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004600557032972574,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026042193174362183,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010361614637076855,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016108857467770576,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017531853169202805,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024964584037661552,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004973575007170439,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01116982102394104,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01649569161236286,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022823184728622437,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015804916620254517,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007639964111149311,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03586500510573387,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009159667417407036,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018181180581450462,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005709249991923571,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005781780928373337,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016108857467770576,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011605008505284786,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012475384399294853,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00624459981918335,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011674086563289165,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0025437765289098024,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017421329393982887,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006545086856931448,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0006139256875030696,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003289812710136175,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011073112487792969,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04147408902645111,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012862217612564564,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01684107817709446,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023306725546717644,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019493652507662773,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008289291523396969,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012399399653077126,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027727682143449783,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007377469912171364,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0180568415671587,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006113352719694376,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020004823803901672,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007128790952265263,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013974364846944809,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003262181766331196,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010555031709372997,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0056712571531534195,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0239560529589653,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005329323932528496,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015873994678258896,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023831713944673538,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011971118859946728,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03221771493554115,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01032707653939724,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011888226494193077,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008904080837965012,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02180083841085434,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.037605755031108856,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02325146459043026,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014001995325088501,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023790268227458,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00516353826969862,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013967457227408886,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013711870647966862,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026277055963873863,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006762680597603321,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010693186894059181,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008413631469011307,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016274644061923027,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007936997339129448,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001714847283437848,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00437950948253274,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001650950638577342,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002709562424570322,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015804916620254517,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002201843075454235,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.06537488102912903,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020460736006498337,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013656608760356903,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022021885961294174,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020391657948493958,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007315299939364195,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008012982085347176,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0065416330471634865,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012523738667368889,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0025437765289098024,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025669174268841743,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013000372797250748,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0018996293656527996,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.041225410997867584,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014865463599562645,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017338436096906662,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017573298886418343,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017296988517045975,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020156795158982277,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0008246118668466806,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0006061544991098344,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005612541455775499,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015155589208006859,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002258832100778818,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011542838998138905,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019355496391654015,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006952643860131502,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.032853227108716965,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01744895987212658,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019106818363070488,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028929628431797028,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001288294093683362,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014768755063414574,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025365233421325684,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012440845370292664,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02182846888899803,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013048727065324783,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0074396394193172455,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013760224916040897,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02898489125072956,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005636718589812517,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021842284128069878,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -4.6249500883277506e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007943904958665371,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00017215391562785953,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002833901671692729,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013117804192006588,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009657025337219238,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004210269544273615,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02021205611526966,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02568298950791359,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016274644061923027,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004155007656663656,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014229951426386833,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001432493212632835,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017932502552866936,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029150675982236862,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013331945054233074,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0029772373382002115,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010914234444499016,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004528025630861521,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02460538223385811,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006897381506860256,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01609504222869873,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00013005985238123685,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013608254492282867,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01656476780772209,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001359098474495113,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01649569161236286,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0032000120263546705,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011618824675679207,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007018267177045345,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029951974749565125,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04863051325082779,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00240044086240232,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016965417191386223,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0036438344977796078,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012461569160223007,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.049183133989572525,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006983728613704443,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020391657948493958,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01197802647948265,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0023866253904998302,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004728350322693586,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019921932369470596,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019659437239170074,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03492555022239685,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020336396992206573,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01710357330739498,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013725685887038708,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012060919776558876,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0074327317997813225,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025227079167962074,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016288459300994873,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -7.161386747611687e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021787023171782494,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005502017680555582,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0003976269799750298,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008835003711283207,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020267318934202194,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0173798818141222,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00300314137712121,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024149470031261444,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020018640905618668,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011453038081526756,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017490405589342117,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019825223833322525,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017573298886418343,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014533892273902893,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014975987374782562,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01029253751039505,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013352667912840843,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022864630445837975,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.028294116258621216,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004306978080421686,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01351845357567072,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024950768798589706,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0047870660200715065,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006524363532662392,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02591785229742527,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0002944425505120307,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0002605514309834689,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011936580762267113,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004386417102068663,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00042828009463846684,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005716157611459494,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020640337839722633,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013587530702352524,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        5.7258715969510376e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015445713885128498,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006144437473267317,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014098703861236572,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011812240816652775,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014437183737754822,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023817898705601692,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019410759210586548,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01439573708921671,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024384334683418274,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0415017232298851,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007819565013051033,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011867502704262733,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002799362875521183,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014216136187314987,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0013513272861018777,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006558902096003294,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018913401290774345,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020433105528354645,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004113561008125544,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007874827831983566,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007308392319828272,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0458950474858284,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005636718589812517,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011225082911550999,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0165371373295784,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017932502552866936,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0018184634391218424,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01331122126430273,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0009083682671189308,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016854893416166306,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.032549288123846054,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015404267236590385,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03078090399503708,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004224085249006748,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0059579284861683846,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0032570010516792536,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006406932137906551,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00434497045353055,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004673088435083628,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001097467727959156,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003015229944139719,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04890682175755501,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027658604085445404,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030863797292113304,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004051391500979662,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0006225603865459561,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013055634684860706,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0011432315222918987,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018222626298666,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013304313644766808,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014713493175804615,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009359992109239101,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0014739397447556257,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005426032468676567,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0005271471454761922,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007854104042053223,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009152759797871113,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02865331992506981,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02898489125072956,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0046212803572416306,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006196245551109314,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0032172815408557653,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006800673436373472,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02318238653242588,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016647661104798317,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03685971722006798,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0018063748721033335,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011915856972336769,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010299445129930973,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001650950638577342,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0217732060700655,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019825223833322525,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015141773037612438,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00682485057041049,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016481876373291016,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004811243154108524,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015058880671858788,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010720817372202873,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02196662314236164,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022629767656326294,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02790728211402893,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008814280852675438,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.056809280067682266,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02278173714876175,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020667968317866325,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017048310488462448,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02696782909333706,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02051599696278572,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01197802647948265,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008392907679080963,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003781989449635148,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009049143642187119,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018512751907110214,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.05003969371318817,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028100699186325073,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01812591776251793,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014616784639656544,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0062756845727562904,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019286420196294785,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0003641675866674632,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007025174796581268,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04907260835170746,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01957654394209385,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02584877610206604,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027023091912269592,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0024574296548962593,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007660687435418367,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03412425145506859,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01579110138118267,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027105985209345818,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004914859309792519,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011598100885748863,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008717572316527367,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006710872519761324,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        3.8559239328606054e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004728350322693586,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018167365342378616,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012109274044632912,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0026249424554407597,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009511962532997131,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022933708503842354,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003940867725759745,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002552411053329706,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020598890259861946,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020156795158982277,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0021034078672528267,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01602596417069435,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011453038081526756,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02423236332833767,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005871581844985485,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00040237605571746826,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0021034078672528267,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007943904958665371,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027589526027441025,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004569472279399633,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011231990531086922,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03920835256576538,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015597684308886528,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004821605049073696,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004372601397335529,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009954058565199375,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0029185216408222914,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01883050799369812,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04136356711387634,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0069871824234724045,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019991008564829826,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027520449832081795,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023541588336229324,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03067038021981716,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02503366209566593,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006534724961966276,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01697923243045807,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007591609843075275,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011218175292015076,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0048561436124145985,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007598517462611198,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0025144186802208424,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0050737373530864716,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005118637811392546,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024646827951073647,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00781265739351511,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0075087170116603374,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022615952417254448,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015431898646056652,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005567640997469425,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01859564520418644,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02254687435925007,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01572202332317829,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004023760557174683,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020695598796010017,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006897381506860256,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019106818363070488,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0004956306074745953,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003250093199312687,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005481294356286526,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009670840576291084,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009325453080236912,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0022104778327047825,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017697637900710106,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011197451502084732,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022284379228949547,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019728515297174454,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027257954701781273,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021538343280553818,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022629767656326294,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004983936902135611,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018609460443258286,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030919058248400688,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015127957798540592,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019314050674438477,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020101532340049744,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014368105679750443,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021137693896889687,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027313217520713806,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03691498190164566,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017200279980897903,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007045898120850325,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0025904036592692137,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014299028553068638,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030532225966453552,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01970088481903076,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016039779409766197,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01539045199751854,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014029626734554768,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007639964111149311,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0063827550038695335,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019825223833322525,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0008755564922466874,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014098703861236572,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003730181371793151,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002447067992761731,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03130589425563812,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011301067657768726,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0023935330100357533,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006406932137906551,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0008764199446886778,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016205566003918648,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0027890014462172985,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03111247532069683,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03246639296412468,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0320519283413887,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018070656806230545,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030007237568497658,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01579110138118267,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01017510611563921,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004431317560374737,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019396943971514702,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0008367004338651896,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00824784580618143,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024038946256041527,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013532268814742565,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021690314635634422,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018264073878526688,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002878802129998803,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02355540543794632,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02624942548573017,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01778053119778633,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001873725326731801,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03614131361246109,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011784610338509083,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006973366718739271,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013014188036322594,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005332777742296457,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017490405589342117,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01218525879085064,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006755772978067398,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0039028748869895935,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016191750764846802,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012779325246810913,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03277033567428589,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006524363532662392,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015666762366890907,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017656192183494568,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02196662314236164,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.036997873336076736,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020322579890489578,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03185851126909256,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012427030131220818,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001960072200745344,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01059647835791111,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014699677936732769,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02011534944176674,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0018996293656527996,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026940198615193367,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0046281879767775536,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013753317296504974,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0009023239836096764,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004255170002579689,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004604010842740536,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006807581055909395,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010534308850765228,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03719129040837288,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018844323232769966,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011680994182825089,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016744369640946388,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014464814215898514,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009187298826873302,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022450165823101997,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021579790860414505,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03387557342648506,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010485954582691193,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02460538223385811,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015459529124200344,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021925177425146103,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005453663412481546,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007446547504514456,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016260826960206032,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004030668176710606,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01331122126430273,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028059253469109535,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009470515884459019,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003431421471759677,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021317295730113983,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02828030101954937,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0067903115414083,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016108857467770576,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00739819323644042,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028459902852773666,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0024867875035852194,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007142606656998396,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00048138335114344954,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04072805494070053,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015818731859326363,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015804916620254517,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012592815794050694,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.045673999935388565,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008931712247431278,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0005124682211317122,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003864882281050086,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009056051261723042,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011093835346400738,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004904497880488634,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03431766852736473,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012385583482682705,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009228745475411415,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012088551186025143,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023900792002677917,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0217732060700655,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001094877370633185,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00011343809455865994,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020916646346449852,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012952018529176712,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007923181168735027,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013449376448988914,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004300069995224476,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0016958509804680943,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0031706541776657104,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013642792589962482,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016882523894309998,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018650906160473824,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03580974042415619,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026111269369721413,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007992259226739407,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005975198000669479,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018982479348778725,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003937413915991783,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009214929305016994,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008814280852675438,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013235236518085003,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019866669550538063,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0106310173869133,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02514418587088585,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0048699588514864445,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03310190513730049,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005394947715103626,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01391910295933485,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019521282985806465,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004106653388589621,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0036438344977796078,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020239688456058502,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007709041703492403,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007598517462611198,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010472138412296772,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008068243972957134,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003049768740311265,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00754325557500124,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015887809917330742,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01518321968615055,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027492817491292953,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004006491042673588,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01700686477124691,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01533519010990858,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006272230762988329,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004103199578821659,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0031171191949397326,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0008341100183315575,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.036832086741924286,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0020947731100022793,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010651740245521069,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015321374870836735,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00918039120733738,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01691015623509884,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009346176870167255,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019562728703022003,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01539045199751854,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0072876689955592155,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021980438381433487,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0017372973961755633,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007577794604003429,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02105480246245861,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009318545460700989,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011632639914751053,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01246847677975893,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011736256070435047,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020198240876197815,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.23497380316257477,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007329115644097328,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024038946256041527,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.033792681992053986,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012689524330198765,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023210017010569572,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03749522939324379,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015915440395474434,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009677748195827007,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016813447698950768,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015141773037612438,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017863424494862556,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04175040125846863,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00037344987504184246,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012143813073635101,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014602969400584698,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04349115118384361,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022312011569738388,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013297406025230885,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003695642575621605,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03230060636997223,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0021880276035517454,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013684239238500595,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01609504222869873,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03738470748066902,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023679744452238083,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02044692076742649,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009746826253831387,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014768755063414574,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008904080837965012,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0239560529589653,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001896175555884838,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0035160414408892393,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016813447698950768,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024950768798589706,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00754325557500124,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00918039120733738,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003899421077221632,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025323787704110146,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005726519040763378,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0016794450348243117,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0031913775019347668,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03730181232094765,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005633264780044556,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0015879174461588264,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019493652507662773,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01143922284245491,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020032456144690514,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006286046467721462,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015500975772738457,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024964584037661552,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0070562600158154964,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02430144138634205,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011425407603383064,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012413214892148972,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002155215945094824,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00141090655233711,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00369909661822021,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021994255483150482,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03702550381422043,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010651740245521069,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004306978080421686,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0028010900132358074,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.028100699186325073,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0066176182590425014,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0006968186353333294,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023444881662726402,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01819499582052231,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020557444542646408,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01132179144769907,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00224847043864429,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01819499582052231,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00600628275424242,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004003037232905626,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.040507007390260696,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010043858550488949,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024784982204437256,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015376636758446693,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006434563081711531,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0165371373295784,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008717572316527367,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01724172756075859,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0015127958031371236,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0004852689744438976,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02079230733215809,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021234402433037758,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007722856942564249,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009422161616384983,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015169404447078705,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -1.9984559003205504e-06,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003313989844173193,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010637925006449223,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027630973607301712,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0002275237930007279,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0010966042755171657,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015418083406984806,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01943838968873024,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010734633542597294,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0049459440633654594,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009670840576291084,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015915440395474434,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020502181723713875,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008627771399915218,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0032449124846607447,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0041895462200045586,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017904870212078094,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016316089779138565,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004538387525826693,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018070656806230545,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013891471549868584,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002217385685071349,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03520185872912407,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006279138848185539,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004845781717449427,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0032414584420621395,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011515208519995213,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019051555544137955,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0023261825554072857,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01363588497042656,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012675709091126919,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01784960925579071,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00929782260209322,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004807789344340563,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018346965312957764,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015058880671858788,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010451415553689003,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0350913368165493,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0012943383771926165,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009470515884459019,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022215303033590317,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013988180086016655,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03050459362566471,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007066621445119381,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008365277200937271,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02159360609948635,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015708208084106445,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003524675965309143,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011964211240410805,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0006061544991098344,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003291539615020156,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011729348450899124,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009539593942463398,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018471306189894676,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005605633836239576,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011570470407605171,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01677200011909008,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017269358038902283,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027257954701781273,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002272647572681308,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015266112983226776,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0106310173869133,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004755981266498566,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007646871730685234,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010789895430207253,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016689108684659004,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0033934288658201694,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005160084459930658,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030062498524785042,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0069111972115933895,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00459019560366869,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010879695415496826,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004196453839540482,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003654196159914136,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0015102053293958306,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016260826960206032,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0024021677672863007,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.17860661447048187,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008240938186645508,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02865331992506981,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0327427014708519,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017628561705350876,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00531550869345665,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020902831107378006,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011494484730064869,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03263217955827713,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017573298886418343,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0037163658998906612,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005363862495869398,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03279796615242958,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024757351726293564,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00933236163109541,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0052257077768445015,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012060919776558876,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013739501126110554,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012475384399294853,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01632990501821041,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01677200011909008,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01418850477784872,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029454616829752922,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009574132040143013,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0020636883564293385,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0008250435930676758,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014575337991118431,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007619240786880255,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0050668297335505486,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.038959670811891556,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0006678924546577036,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015321374870836735,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012945110909640789,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00797844398766756,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017062125727534294,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0010577482171356678,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026194162666797638,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01067937072366476,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004158461466431618,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010852064937353134,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.031499311327934265,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019452204927802086,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02605600841343403,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015597684308886528,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0034055174328386784,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0027786397840827703,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030117761343717575,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.043076686561107635,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00266984268091619,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02524089440703392,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006565810181200504,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013815486803650856,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0004710217472165823,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025834960862994194,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012751693837344646,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004977029282599688,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0034469638485461473,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015155589208006859,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013283590786159039,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01032707653939724,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00987116526812315,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008075151592493057,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.031195368617773056,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011080020107328892,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0020291495602577925,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001252028509043157,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006393116433173418,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00681794248521328,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0239560529589653,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018650906160473824,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009594855830073357,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009138944558799267,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009643210098147392,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017324620857834816,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00987116526812315,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02528234012424946,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028059253469109535,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004072114825248718,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04578452184796333,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010216552764177322,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016081226989626884,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.034068990498781204,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007895550690591335,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004338062833994627,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01988048478960991,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012275059707462788,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004358786158263683,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014685862697660923,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013967457227408886,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02334817312657833,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.05357645824551582,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030587486922740936,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011356329545378685,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0064034778624773026,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.054819852113723755,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.031333524733781815,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007239315193146467,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013642792589962482,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02327909506857395,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003992675803601742,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01758711412549019,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0006514865672215819,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01883050799369812,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0022225663997232914,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02274029143154621,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0004071251314599067,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0086899409070611,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007702133618295193,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014001995325088501,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011010942980647087,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007135699037462473,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00887645035982132,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00456256465986371,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009926427155733109,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017531853169202805,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02327909506857395,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0034884102642536163,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0008807372651062906,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0023210018407553434,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025738252326846123,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.05584219843149185,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015597684308886528,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018678538501262665,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00960176344960928,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018637090921401978,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024218548089265823,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.10753975063562393,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.035422906279563904,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015749655663967133,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01554242242127657,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0005716157611459494,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018885770812630653,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006517455913126469,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0006303315749391913,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015500975772738457,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02879147417843342,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005578002892434597,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011687901802361012,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0016250465996563435,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015473345294594765,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0021673045121133327,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024577749893069267,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0019393488764762878,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002364175161346793,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012302691116929054,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015915440395474434,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009967873804271221,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016813447698950768,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024660643190145493,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0046972655691206455,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026746781542897224,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0015110688982531428,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01128725241869688,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007142606656998396,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010126751847565174,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01162573229521513,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0008539697737433016,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018871955573558807,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007405100855976343,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011080020107328892,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0010689733317121863,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013850024901330471,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014202320016920567,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03359926491975784,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0038096203934401274,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017158834263682365,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0019894300494343042,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008047521114349365,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015362821519374847,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004887228365987539,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015500975772738457,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008261661045253277,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029758557677268982,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025890221819281578,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0073498389683663845,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012212890200316906,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0249783992767334,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0045073023065924644,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026194162666797638,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012406307272613049,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014506260864436626,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027105985209345818,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005567640997469425,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008738295175135136,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013449376448988914,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0034210598096251488,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00815113727003336,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00398231390863657,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015210851095616817,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0428556390106678,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.041999079287052155,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004465856123715639,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008137322030961514,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015666762366890907,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008821188472211361,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02416328527033329,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02318238653242588,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02072322927415371,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008441261947154999,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02848753333091736,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02713361568748951,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0015939617296680808,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008765926584601402,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010948773473501205,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0033709786366671324,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01677200011909008,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03600315749645233,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012178351171314716,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008931712247431278,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006493278779089451,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0023261825554072857,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012123089283704758,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01819499582052231,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023776452988386154,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010492862202227116,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.031001951545476913,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01943838968873024,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03627946972846985,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009691563434898853,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008123505860567093,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01923115737736225,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01728317327797413,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014015811495482922,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004731804132461548,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016661476343870163,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02423236332833767,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0003350255428813398,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007619240786880255,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04067279398441315,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017131203785538673,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02018442563712597,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0024505220353603363,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010472138412296772,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0069802748039364815,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.032853227108716965,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002194935455918312,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015639130026102066,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014478630386292934,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02318238653242588,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001557696145027876,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022906076163053513,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008109690621495247,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004970121197402477,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011694809421896935,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.034704502671957016,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011121466755867004,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012371768243610859,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01693778671324253,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009256375953555107,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01192967314273119,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004479671362787485,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01285530999302864,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029482249170541763,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016647661104798317,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0008716708398424089,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0017519764369353652,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023210017010569572,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016288459300994873,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0030100492294877768,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012613539583981037,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005868128035217524,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021607421338558197,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0037509046960622072,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0004882910870946944,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006690149195492268,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018498936668038368,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019079187884926796,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004034121986478567,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009933334775269032,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00422753905877471,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007101160008460283,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03627946972846985,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01348391454666853,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008517247624695301,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01376713253557682,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008945527486503124,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01649569161236286,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -7.420427573379129e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0249783992767334,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011805333197116852,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008821188472211361,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00564362620934844,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002845990238711238,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02240872010588646,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014299028553068638,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014685862697660923,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003933959640562534,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04448586702346802,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02088901586830616,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013304313644766808,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007418916095048189,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019286420196294785,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014699677936732769,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001908264122903347,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003588572610169649,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016012148931622505,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0005072873900644481,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020129164680838585,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007971535436809063,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02170412987470627,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01586017943918705,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010907326824963093,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022726476192474365,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011632639914751053,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001780470833182335,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010548124089837074,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005353501066565514,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021621236577630043,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024881690740585327,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011266529560089111,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019797591492533684,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016053594648838043,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.035616323351860046,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01116982102394104,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013725685887038708,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018581829965114594,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00985044240951538,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00011246669600950554,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0028736211825162172,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0039719524793326855,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001913444953970611,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01988048478960991,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008869542740285397,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03492555022239685,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029924344271421432,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01866472326219082,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03277033567428589,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010534308850765228,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0067903115414083,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006406932137906551,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011238898150622845,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01409179624170065,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017020680010318756,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01934168115258217,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011142189614474773,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022602135315537453,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0005897486116737127,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022187670692801476,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02119295671582222,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020999539643526077,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02102717012166977,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0017070760950446129,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013338852673768997,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02432907186448574,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02327909506857395,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010195828974246979,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017573298886418343,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007909365929663181,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008544878102838993,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001028390252031386,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013449376448988914,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009456700645387173,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02898489125072956,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0012813863577321172,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00696991290897131,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04570163041353226,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01670292392373085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006165160797536373,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0028960714116692543,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0239560529589653,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01116982102394104,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007197868544608355,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008489616215229034,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03312953561544418,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0008276340086013079,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011798425577580929,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01936931163072586,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.07836143672466278,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012136905454099178,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005968290381133556,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02362448163330555,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009007696993649006,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0003779830876737833,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011211267672479153,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0032984474673867226,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02372119016945362,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030449332669377327,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011149098165333271,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0016751277726143599,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02028113417327404,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027893466874957085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004503848496824503,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011639547534286976,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004735257942229509,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0261527169495821,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004255170002579689,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014975987374782562,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01572202332317829,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013856933452188969,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022008070722222328,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009525777772068977,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007156421896070242,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012876033782958984,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018982479348778725,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0005068556638434529,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01896866224706173,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0367768257856369,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007080436684191227,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009670840576291084,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0055123791098594666,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01744895987212658,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01983903907239437,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020405473187565804,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010403061285614967,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0023607213515788317,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019079187884926796,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.047027915716171265,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0021690314169973135,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014975987374782562,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018471306189894676,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021469267085194588,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026719151064753532,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0006329219904728234,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0009714014013297856,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0035505800042301416,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03522948920726776\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      ],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""index\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""embedding\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""ada\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""list\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""usage\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""prompt_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 12,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""total_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 12\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""root_run_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""span_type\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""LLM\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""context\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""span_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""0x5df96e44e9d6f838\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""trace_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""trace_state\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""end_time\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""2024-02-05T15:56:05.654850\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""events\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""kind\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""SpanKind.INTERNAL\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""links\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""name\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""openai.resources.embeddings.Embeddings.create\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""parent_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""0x79d5c32fe460520a\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""resource\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""attributes\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""service.name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""schema_url\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""start_time\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""2024-02-05T15:56:05.082313\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""status\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""OK\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""trace_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""span_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""0x5df96e44e9d6f838\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""span_type\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""LLM\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""framework\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""input\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""input\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n    [\\\\\\\\\\\\\\\\n      3923,\\\\\\\\\\\\\\\\n      527,\\\\\\\\\\\\\\\\n      1063,\\\\\\\\\\\\\\\\n      5627,\\\\\\\\\\\\\\\\n      311,\\\\\\\\\\\\\\\\n      7417,\\\\\\\\\\\\\\\\n      279,\\\\\\\\\\\\\\\\n      15374,\\\\\\\\\\\\\\\\n      315,\\\\\\\\\\\\\\\\n      63120,\\\\\\\\\\\\\\\\n      22702,\\\\\\\\\\\\\\\\n      30\\\\\\\\\\\\\\\\n    ]\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""text-embedding-ada-002\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""output\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""data\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""embedding\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n        -0.018112102523446083,\\\\\\\\\\\\\\\\n        0.034980811178684235,\\\\\\\\\\\\\\\\n        0.03368215635418892,\\\\\\\\\\\\\\\\n        -0.019258787855505943,\\\\\\\\\\\\\\\\n        0.009746826253831387,\\\\\\\\\\\\\\\\n        0.02544812671840191,\\\\\\\\\\\\\\\\n        -0.018802877515554428,\\\\\\\\\\\\\\\\n        -0.02584877610206604,\\\\\\\\\\\\\\\\n        -0.017766715958714485,\\\\\\\\\\\\\\\\n        -0.024356702342629433,\\\\\\\\\\\\\\\\n        0.024384334683418274,\\\\\\\\\\\\\\\\n        0.029012521728873253,\\\\\\\\\\\\\\\\n        0.008800464682281017,\\\\\\\\\\\\\\\\n        0.0286809504032135,\\\\\\\\\\\\\\\\n        0.008620863780379295,\\\\\\\\\\\\\\\\n        -0.011598100885748863,\\\\\\\\\\\\\\\\n        0.026677705347537994,\\\\\\\\\\\\\\\\n        0.0123165063560009,\\\\\\\\\\\\\\\\n        0.010389246046543121,\\\\\\\\\\\\\\\\n        -0.011004035361111164,\\\\\\\\\\\\\\\\n        -0.03520185872912407,\\\\\\\\\\\\\\\\n        -0.0008729660767130554,\\\\\\\\\\\\\\\\n        0.002260559005662799,\\\\\\\\\\\\\\\\n        -0.014354290440678596,\\\\\\\\\\\\\\\\n        -0.0007326525519602001,\\\\\\\\\\\\\\\\n        -0.006634887307882309,\\\\\\\\\\\\\\\\n        0.018374597653746605,\\\\\\\\\\\\\\\\n        -0.01565294712781906,\\\\\\\\\\\\\\\\n        0.0033157167490571737,\\\\\\\\\\\\\\\\n        -0.03525712341070175,\\\\\\\\\\\\\\\\n        0.041225410997867584,\\\\\\\\\\\\\\\\n        -0.004483125638216734,\\\\\\\\\\\\\\\\n        0.0006549404351972044,\\\\\\\\\\\\\\\\n        -0.02280936762690544,\\\\\\\\\\\\\\\\n        -0.010147474706172943,\\\\\\\\\\\\\\\\n        0.014533892273902893,\\\\\\\\\\\\\\\\n        0.0037336351815611124,\\\\\\\\\\\\\\\\n        -0.012592815794050694,\\\\\\\\\\\\\\\\n        0.030559856444597244,\\\\\\\\\\\\\\\\n        -0.017932502552866936,\\\\\\\\\\\\\\\\n        0.022961338981986046,\\\\\\\\\\\\\\\\n        0.012005657888948917,\\\\\\\\\\\\\\\\n        -0.004987390711903572,\\\\\\\\\\\\\\\\n        0.008828096091747284,\\\\\\\\\\\\\\\\n        0.007163329981267452,\\\\\\\\\\\\\\\\n        0.022933708503842354,\\\\\\\\\\\\\\\\n        0.0010931503493338823,\\\\\\\\\\\\\\\\n        -0.01903774030506611,\\\\\\\\\\\\\\\\n        -0.02746518701314926,\\\\\\\\\\\\\\\\n        0.016661476343870163,\\\\\\\\\\\\\\\\n        0.014098703861236572,\\\\\\\\\\\\\\\\n        0.02594548463821411,\\\\\\\\\\\\\\\\n        -0.013055634684860706,\\\\\\\\\\\\\\\\n        -0.011446130461990833,\\\\\\\\\\\\\\\\n        -0.008323830552399158,\\\\\\\\\\\\\\\\n        0.001347009907476604,\\\\\\\\\\\\\\\\n        0.018885770812630653,\\\\\\\\\\\\\\\\n        0.019023925065994263,\\\\\\\\\\\\\\\\n        -0.0035851188004016876,\\\\\\\\\\\\\\\\n        -0.007253130432218313,\\\\\\\\\\\\\\\\n        0.005353501066565514,\\\\\\\\\\\\\\\\n        -0.0017234819242730737,\\\\\\\\\\\\\\\\n        0.0002428503503324464,\\\\\\\\\\\\\\\\n        0.009898795746266842,\\\\\\\\\\\\\\\\n        -0.011100743897259235,\\\\\\\\\\\\\\\\n        -0.003913236781954765,\\\\\\\\\\\\\\\\n        0.004894135985523462,\\\\\\\\\\\\\\\\n        -0.002600765321403742,\\\\\\\\\\\\\\\\n        0.01838841289281845,\\\\\\\\\\\\\\\\n        -0.007930089719593525,\\\\\\\\\\\\\\\\n        0.02325146459043026,\\\\\\\\\\\\\\\\n        0.01424376666545868,\\\\\\\\\\\\\\\\n        -0.015639130026102066,\\\\\\\\\\\\\\\\n        -0.009947150014340878,\\\\\\\\\\\\\\\\n        0.03614131361246109,\\\\\\\\\\\\\\\\n        -0.020087717100977898,\\\\\\\\\\\\\\\\n        -0.019148264080286026,\\\\\\\\\\\\\\\\n        -0.013663516379892826,\\\\\\\\\\\\\\\\n        0.025807328522205353,\\\\\\\\\\\\\\\\n        0.01595688797533512,\\\\\\\\\\\\\\\\n        0.006990636233240366,\\\\\\\\\\\\\\\\n        -0.00019147401326335967,\\\\\\\\\\\\\\\\n        -0.0030135030392557383,\\\\\\\\\\\\\\\\n        0.029344093054533005,\\\\\\\\\\\\\\\\n        0.005353501066565514,\\\\\\\\\\\\\\\\n        -0.000526715419255197,\\\\\\\\\\\\\\\\n        0.02257450483739376,\\\\\\\\\\\\\\\\n        0.011314883828163147,\\\\\\\\\\\\\\\\n        -0.007170237600803375,\\\\\\\\\\\\\\\\n        0.0047870660200715065,\\\\\\\\\\\\\\\\n        0.007888643071055412,\\\\\\\\\\\\\\\\n        -0.014450998976826668,\\\\\\\\\\\\\\\\n        0.023127123713493347,\\\\\\\\\\\\\\\\n        0.009947150014340878,\\\\\\\\\\\\\\\\n        0.010803710669279099,\\\\\\\\\\\\\\\\n        0.01677200011909008,\\\\\\\\\\\\\\\\n        -0.007204776164144278,\\\\\\\\\\\\\\\\n        0.019493652507662773,\\\\\\\\\\\\\\\\n        -0.024038946256041527,\\\\\\\\\\\\\\\\n        -0.010617201216518879,\\\\\\\\\\\\\\\\n        0.004973575007170439,\\\\\\\\\\\\\\\\n        0.003833797527477145,\\\\\\\\\\\\\\\\n        -0.047525275498628616,\\\\\\\\\\\\\\\\n        -0.01609504222869873,\\\\\\\\\\\\\\\\n        -0.004027214366942644,\\\\\\\\\\\\\\\\n        -0.01463059987872839,\\\\\\\\\\\\\\\\n        -0.004914859309792519,\\\\\\\\\\\\\\\\n        -0.005571094807237387,\\\\\\\\\\\\\\\\n        -0.013442468829452991,\\\\\\\\\\\\\\\\n        0.008006074465811253,\\\\\\\\\\\\\\\\n        -0.01630227454006672,\\\\\\\\\\\\\\\\n        0.017352251335978508,\\\\\\\\\\\\\\\\n        0.011280344799160957,\\\\\\\\\\\\\\\\n        -0.016053594648838043,\\\\\\\\\\\\\\\\n        0.00034409196814522147,\\\\\\\\\\\\\\\\n        0.0073429313488304615,\\\\\\\\\\\\\\\\n        0.012952018529176712,\\\\\\\\\\\\\\\\n        -0.008019889704883099,\\\\\\\\\\\\\\\\n        -0.041225410997867584,\\\\\\\\\\\\\\\\n        -0.026235608384013176,\\\\\\\\\\\\\\\\n        0.02689875289797783,\\\\\\\\\\\\\\\\n        0.016882523894309998,\\\\\\\\\\\\\\\\n        0.02757571078836918,\\\\\\\\\\\\\\\\n        -0.006669426336884499,\\\\\\\\\\\\\\\\n        -0.0031516579911112785,\\\\\\\\\\\\\\\\n        0.023942237719893456,\\\\\\\\\\\\\\\\n        0.020916646346449852,\\\\\\\\\\\\\\\\n        -0.004776704590767622,\\\\\\\\\\\\\\\\n        -0.021952807903289795,\\\\\\\\\\\\\\\\n        -0.020571259781718254,\\\\\\\\\\\\\\\\n        0.00895934272557497,\\\\\\\\\\\\\\\\n        0.02942698635160923,\\\\\\\\\\\\\\\\n        0.012095458805561066,\\\\\\\\\\\\\\\\n        0.01304181944578886,\\\\\\\\\\\\\\\\n        -0.03108484484255314,\\\\\\\\\\\\\\\\n        -0.0014704858185723424,\\\\\\\\\\\\\\\\n        0.01656476780772209,\\\\\\\\\\\\\\\\n        0.006507094018161297,\\\\\\\\\\\\\\\\n        -0.02551720291376114,\\\\\\\\\\\\\\\\n        -0.0031274808570742607,\\\\\\\\\\\\\\\\n        0.010188921354711056,\\\\\\\\\\\\\\\\n        0.02642902545630932,\\\\\\\\\\\\\\\\n        0.0025610458105802536,\\\\\\\\\\\\\\\\n        -0.015873994678258896,\\\\\\\\\\\\\\\\n        -0.011736256070435047,\\\\\\\\\\\\\\\\n        0.04713844135403633,\\\\\\\\\\\\\\\\n        0.010513585060834885,\\\\\\\\\\\\\\\\n        0.03188614174723625,\\\\\\\\\\\\\\\\n        0.004168822895735502,\\\\\\\\\\\\\\\\n        -0.0016354082617908716,\\\\\\\\\\\\\\\\n        -0.006220422685146332,\\\\\\\\\\\\\\\\n        -0.016426613554358482,\\\\\\\\\\\\\\\\n        0.003578210948035121,\\\\\\\\\\\\\\\\n        0.007377469912171364,\\\\\\\\\\\\\\\\n        0.007370562292635441,\\\\\\\\\\\\\\\\n        0.0015119323506951332,\\\\\\\\\\\\\\\\n        -0.023196201771497726,\\\\\\\\\\\\\\\\n        0.0066245258785784245,\\\\\\\\\\\\\\\\n        -0.012323413975536823,\\\\\\\\\\\\\\\\n        -0.0374675989151001,\\\\\\\\\\\\\\\\n        0.01192967314273119,\\\\\\\\\\\\\\\\n        0.006524363532662392,\\\\\\\\\\\\\\\\n        0.011149098165333271,\\\\\\\\\\\\\\\\n        -0.00046066014328971505,\\\\\\\\\\\\\\\\n        0.02028113417327404,\\\\\\\\\\\\\\\\n        0.01815355010330677,\\\\\\\\\\\\\\\\n        0.0068352119997143745,\\\\\\\\\\\\\\\\n        -0.005619449075311422,\\\\\\\\\\\\\\\\n        0.005318962503224611,\\\\\\\\\\\\\\\\n        -0.0060408213175833225,\\\\\\\\\\\\\\\\n        -0.0046281879767775536,\\\\\\\\\\\\\\\\n        0.01930023543536663,\\\\\\\\\\\\\\\\n        -0.010320168919861317,\\\\\\\\\\\\\\\\n        0.009636301547288895,\\\\\\\\\\\\\\\\n        -0.012523738667368889,\\\\\\\\\\\\\\\\n        -0.0018668175907805562,\\\\\\\\\\\\\\\\n        0.032853227108716965,\\\\\\\\\\\\\\\\n        -0.00015984950005076826,\\\\\\\\\\\\\\\\n        -0.010651740245521069,\\\\\\\\\\\\\\\\n        -0.02881910465657711,\\\\\\\\\\\\\\\\n        0.006161706987768412,\\\\\\\\\\\\\\\\n        -0.0035212221555411816,\\\\\\\\\\\\\\\\n        0.011266529560089111,\\\\\\\\\\\\\\\\n        0.002329636365175247,\\\\\\\\\\\\\\\\n        -0.00990570429712534,\\\\\\\\\\\\\\\\n        -0.010803710669279099,\\\\\\\\\\\\\\\\n        0.01606741175055504,\\\\\\\\\\\\\\\\n        -0.007957720197737217,\\\\\\\\\\\\\\\\n        -0.01391910295933485,\\\\\\\\\\\\\\\\n        -0.035754479467868805,\\\\\\\\\\\\\\\\n        0.00754325557500124,\\\\\\\\\\\\\\\\n        -0.006966459099203348,\\\\\\\\\\\\\\\\n        -0.025158001109957695,\\\\\\\\\\\\\\\\n        -0.020239688456058502,\\\\\\\\\\\\\\\\n        -0.6512067914009094,\\\\\\\\\\\\\\\\n        -0.018512751907110214,\\\\\\\\\\\\\\\\n        0.011515208519995213,\\\\\\\\\\\\\\\\n        -0.022325826808810234,\\\\\\\\\\\\\\\\n        0.006320585031062365,\\\\\\\\\\\\\\\\n        0.011328699067234993,\\\\\\\\\\\\\\\\n        0.004759435076266527,\\\\\\\\\\\\\\\\n        0.007626148406416178,\\\\\\\\\\\\\\\\n        -0.01883050799369812,\\\\\\\\\\\\\\\\n        0.02358303591609001,\\\\\\\\\\\\\\\\n        0.013663516379892826,\\\\\\\\\\\\\\\\n        0.00803370587527752,\\\\\\\\\\\\\\\\n        -0.008164952509105206,\\\\\\\\\\\\\\\\n        -0.01418850477784872,\\\\\\\\\\\\\\\\n        0.004255170002579689,\\\\\\\\\\\\\\\\n        -0.030836166813969612,\\\\\\\\\\\\\\\\n        0.0018581829499453306,\\\\\\\\\\\\\\\\n        -0.021303480491042137,\\\\\\\\\\\\\\\\n        -0.006821396294981241,\\\\\\\\\\\\\\\\n        0.0030359532684087753,\\\\\\\\\\\\\\\\n        -0.03130589425563812,\\\\\\\\\\\\\\\\n        0.0015257478225976229,\\\\\\\\\\\\\\\\n        -0.01319378986954689,\\\\\\\\\\\\\\\\n        0.0070009976625442505,\\\\\\\\\\\\\\\\n        0.010658647865056992,\\\\\\\\\\\\\\\\n        -0.02128966525197029,\\\\\\\\\\\\\\\\n        0.0033329862635582685,\\\\\\\\\\\\\\\\n        -0.019327865913510323,\\\\\\\\\\\\\\\\n        -0.010340891778469086,\\\\\\\\\\\\\\\\n        0.027313217520713806,\\\\\\\\\\\\\\\\n        0.008413631469011307,\\\\\\\\\\\\\\\\n        0.0006683241808786988,\\\\\\\\\\\\\\\\n        0.019286420196294785,\\\\\\\\\\\\\\\\n        0.027078352868556976,\\\\\\\\\\\\\\\\n        0.047027915716171265,\\\\\\\\\\\\\\\\n        -0.019258787855505943,\\\\\\\\\\\\\\\\n        -0.018941031768918037,\\\\\\\\\\\\\\\\n        0.027630973607301712,\\\\\\\\\\\\\\\\n        -0.035754479467868805,\\\\\\\\\\\\\\\\n        0.04548058286309242,\\\\\\\\\\\\\\\\n        -0.022256748750805855,\\\\\\\\\\\\\\\\n        -0.016177935525774956,\\\\\\\\\\\\\\\\n        0.027934914454817772,\\\\\\\\\\\\\\\\n        -0.016647661104798317,\\\\\\\\\\\\\\\\n        -0.01494835689663887,\\\\\\\\\\\\\\\\n        -0.003172381082549691,\\\\\\\\\\\\\\\\n        0.011349421925842762,\\\\\\\\\\\\\\\\n        -0.003196558216586709,\\\\\\\\\\\\\\\\n        0.0031516579911112785,\\\\\\\\\\\\\\\\n        -0.04114251956343651,\\\\\\\\\\\\\\\\n        0.005695434287190437,\\\\\\\\\\\\\\\\n        -0.003882151795551181,\\\\\\\\\\\\\\\\n        -0.019466020166873932,\\\\\\\\\\\\\\\\n        0.004117014817893505,\\\\\\\\\\\\\\\\n        0.006085721775889397,\\\\\\\\\\\\\\\\n        0.00104825000744313,\\\\\\\\\\\\\\\\n        0.013663516379892826,\\\\\\\\\\\\\\\\n        0.012116181664168835,\\\\\\\\\\\\\\\\n        0.004476217553019524,\\\\\\\\\\\\\\\\n        -0.004845781717449427,\\\\\\\\\\\\\\\\n        -0.010285629890859127,\\\\\\\\\\\\\\\\n        0.02484024502336979,\\\\\\\\\\\\\\\\n        -0.02182846888899803,\\\\\\\\\\\\\\\\n        -0.01174316368997097,\\\\\\\\\\\\\\\\n        -0.02926119975745678,\\\\\\\\\\\\\\\\n        0.0006078814039938152,\\\\\\\\\\\\\\\\n        -0.007653779815882444,\\\\\\\\\\\\\\\\n        0.02402513101696968,\\\\\\\\\\\\\\\\n        0.008392907679080963,\\\\\\\\\\\\\\\\n        -0.026802044361829758,\\\\\\\\\\\\\\\\n        -0.005021929275244474,\\\\\\\\\\\\\\\\n        0.01418850477784872,\\\\\\\\\\\\\\\\n        -0.012157628312706947,\\\\\\\\\\\\\\\\n        0.025254709646105766,\\\\\\\\\\\\\\\\n        0.03111247532069683,\\\\\\\\\\\\\\\\n        -0.006697057280689478,\\\\\\\\\\\\\\\\n        0.02879147417843342,\\\\\\\\\\\\\\\\n        -0.00855178665369749,\\\\\\\\\\\\\\\\n        -0.014865463599562645,\\\\\\\\\\\\\\\\n        0.004548748955130577,\\\\\\\\\\\\\\\\n        0.00044943505781702697,\\\\\\\\\\\\\\\\n        -0.004963213577866554,\\\\\\\\\\\\\\\\n        -0.027216508984565735,\\\\\\\\\\\\\\\\n        -0.019548913463950157,\\\\\\\\\\\\\\\\n        -0.007184052839875221,\\\\\\\\\\\\\\\\n        0.02338961884379387,\\\\\\\\\\\\\\\\n        -0.007184052839875221,\\\\\\\\\\\\\\\\n        -0.02180083841085434,\\\\\\\\\\\\\\\\n        -0.0017329801339656115,\\\\\\\\\\\\\\\\n        -0.0008310878765769303,\\\\\\\\\\\\\\\\n        0.013380298390984535,\\\\\\\\\\\\\\\\n        0.007778118830174208,\\\\\\\\\\\\\\\\n        -0.0023210018407553434,\\\\\\\\\\\\\\\\n        -0.047027915716171265,\\\\\\\\\\\\\\\\n        0.019424574449658394,\\\\\\\\\\\\\\\\n        -0.006852481514215469,\\\\\\\\\\\\\\\\n        -0.00899388175457716,\\\\\\\\\\\\\\\\n        0.018913401290774345,\\\\\\\\\\\\\\\\n        0.03125062957406044,\\\\\\\\\\\\\\\\n        -0.005356954876333475,\\\\\\\\\\\\\\\\n        -0.01518321968615055,\\\\\\\\\\\\\\\\n        -0.024411965161561966,\\\\\\\\\\\\\\\\n        -0.010437600314617157,\\\\\\\\\\\\\\\\n        -0.012551369145512581,\\\\\\\\\\\\\\\\n        0.020709414035081863,\\\\\\\\\\\\\\\\n        -0.0016984413377940655,\\\\\\\\\\\\\\\\n        -0.00830310769379139,\\\\\\\\\\\\\\\\n        0.01197802647948265,\\\\\\\\\\\\\\\\n        0.04144645854830742,\\\\\\\\\\\\\\\\n        -0.005598725751042366,\\\\\\\\\\\\\\\\n        -0.0018823600839823484,\\\\\\\\\\\\\\\\n        -0.008800464682281017,\\\\\\\\\\\\\\\\n        0.00043540369370020926,\\\\\\\\\\\\\\\\n        0.010741541162133217,\\\\\\\\\\\\\\\\n        0.0010983311804011464,\\\\\\\\\\\\\\\\n        -0.03567158803343773,\\\\\\\\\\\\\\\\n        0.012157628312706947,\\\\\\\\\\\\\\\\n        0.006859389133751392,\\\\\\\\\\\\\\\\n        -0.012074735015630722,\\\\\\\\\\\\\\\\n        0.004165369085967541,\\\\\\\\\\\\\\\\n        0.007743580266833305,\\\\\\\\\\\\\\\\n        0.0006463057361543179,\\\\\\\\\\\\\\\\n        0.020571259781718254,\\\\\\\\\\\\\\\\n        -0.04501085355877876,\\\\\\\\\\\\\\\\n        0.0030014144722372293,\\\\\\\\\\\\\\\\n        0.010064582340419292,\\\\\\\\\\\\\\\\n        -0.0001065303513314575,\\\\\\\\\\\\\\\\n        -0.0003052359097637236,\\\\\\\\\\\\\\\\n        -0.012724063359200954,\\\\\\\\\\\\\\\\n        -0.012095458805561066,\\\\\\\\\\\\\\\\n        -0.008199491538107395,\\\\\\\\\\\\\\\\n        -0.002226020209491253,\\\\\\\\\\\\\\\\n        -0.013242144137620926,\\\\\\\\\\\\\\\\n        -0.0010275267995893955,\\\\\\\\\\\\\\\\n        0.01953509822487831,\\\\\\\\\\\\\\\\n        0.006717780139297247,\\\\\\\\\\\\\\\\n        -0.00712188333272934,\\\\\\\\\\\\\\\\n        -0.010347799398005009,\\\\\\\\\\\\\\\\n        0.0005146268522366881,\\\\\\\\\\\\\\\\n        -0.03304664418101311,\\\\\\\\\\\\\\\\n        -0.022629767656326294,\\\\\\\\\\\\\\\\n        0.001903083291836083,\\\\\\\\\\\\\\\\n        0.02528234012424946,\\\\\\\\\\\\\\\\n        -0.041556984186172485,\\\\\\\\\\\\\\\\n        -0.021151509135961533,\\\\\\\\\\\\\\\\n        0.004994298331439495,\\\\\\\\\\\\\\\\n        -0.0007728037890046835,\\\\\\\\\\\\\\\\n        0.014893095009028912,\\\\\\\\\\\\\\\\n        0.000305020046653226,\\\\\\\\\\\\\\\\n        -0.008731387555599213,\\\\\\\\\\\\\\\\n        0.007791934534907341,\\\\\\\\\\\\\\\\n        -0.00872447993606329,\\\\\\\\\\\\\\\\n        -0.014975987374782562,\\\\\\\\\\\\\\\\n        -0.00476634269580245,\\\\\\\\\\\\\\\\n        -0.001241666846908629,\\\\\\\\\\\\\\\\n        -0.01994956284761429,\\\\\\\\\\\\\\\\n        -0.012240521609783173,\\\\\\\\\\\\\\\\n        -0.03288085758686066,\\\\\\\\\\\\\\\\n        -0.021814653649926186,\\\\\\\\\\\\\\\\n        -0.03962281718850136,\\\\\\\\\\\\\\\\n        0.018346965312957764,\\\\\\\\\\\\\\\\n        0.021234402433037758,\\\\\\\\\\\\\\\\n        -0.017089756205677986,\\\\\\\\\\\\\\\\n        0.0029461525846272707,\\\\\\\\\\\\\\\\n        -0.015514791011810303,\\\\\\\\\\\\\\\\n        -0.018070656806230545,\\\\\\\\\\\\\\\\n        -0.006147891748696566,\\\\\\\\\\\\\\\\n        0.020170610398054123,\\\\\\\\\\\\\\\\n        -0.045231904834508896,\\\\\\\\\\\\\\\\n        -0.022602135315537453,\\\\\\\\\\\\\\\\n        0.005270608235150576,\\\\\\\\\\\\\\\\n        -0.025088923051953316,\\\\\\\\\\\\\\\\n        0.004600557032972574,\\\\\\\\\\\\\\\\n        0.026042193174362183,\\\\\\\\\\\\\\\\n        -0.010361614637076855,\\\\\\\\\\\\\\\\n        0.016108857467770576,\\\\\\\\\\\\\\\\n        -0.017531853169202805,\\\\\\\\\\\\\\\\n        -0.024964584037661552,\\\\\\\\\\\\\\\\n        0.004973575007170439,\\\\\\\\\\\\\\\\n        -0.01116982102394104,\\\\\\\\\\\\\\\\n        0.01649569161236286,\\\\\\\\\\\\\\\\n        0.022823184728622437,\\\\\\\\\\\\\\\\n        -0.015804916620254517,\\\\\\\\\\\\\\\\n        -0.007639964111149311,\\\\\\\\\\\\\\\\n        0.03586500510573387,\\\\\\\\\\\\\\\\n        0.009159667417407036,\\\\\\\\\\\\\\\\n        0.018181180581450462,\\\\\\\\\\\\\\\\n        -0.005709249991923571,\\\\\\\\\\\\\\\\n        -0.005781780928373337,\\\\\\\\\\\\\\\\n        0.016108857467770576,\\\\\\\\\\\\\\\\n        0.011605008505284786,\\\\\\\\\\\\\\\\n        0.012475384399294853,\\\\\\\\\\\\\\\\n        -0.00624459981918335,\\\\\\\\\\\\\\\\n        -0.011674086563289165,\\\\\\\\\\\\\\\\n        -0.0025437765289098024,\\\\\\\\\\\\\\\\n        0.017421329393982887,\\\\\\\\\\\\\\\\n        0.006545086856931448,\\\\\\\\\\\\\\\\n        -0.0006139256875030696,\\\\\\\\\\\\\\\\n        -0.003289812710136175,\\\\\\\\\\\\\\\\n        0.011073112487792969,\\\\\\\\\\\\\\\\n        0.04147408902645111,\\\\\\\\\\\\\\\\n        0.012862217612564564,\\\\\\\\\\\\\\\\n        0.01684107817709446,\\\\\\\\\\\\\\\\n        -0.023306725546717644,\\\\\\\\\\\\\\\\n        0.019493652507662773,\\\\\\\\\\\\\\\\n        0.008289291523396969,\\\\\\\\\\\\\\\\n        0.012399399653077126,\\\\\\\\\\\\\\\\n        -0.027727682143449783,\\\\\\\\\\\\\\\\n        -0.007377469912171364,\\\\\\\\\\\\\\\\n        0.0180568415671587,\\\\\\\\\\\\\\\\n        -0.006113352719694376,\\\\\\\\\\\\\\\\n        -0.020004823803901672,\\\\\\\\\\\\\\\\n        -0.007128790952265263,\\\\\\\\\\\\\\\\n        -0.013974364846944809,\\\\\\\\\\\\\\\\n        -0.003262181766331196,\\\\\\\\\\\\\\\\n        0.010555031709372997,\\\\\\\\\\\\\\\\n        0.0056712571531534195,\\\\\\\\\\\\\\\\n        0.0239560529589653,\\\\\\\\\\\\\\\\n        -0.005329323932528496,\\\\\\\\\\\\\\\\n        0.015873994678258896,\\\\\\\\\\\\\\\\n        0.023831713944673538,\\\\\\\\\\\\\\\\n        -0.011971118859946728,\\\\\\\\\\\\\\\\n        0.03221771493554115,\\\\\\\\\\\\\\\\n        -0.01032707653939724,\\\\\\\\\\\\\\\\n        -0.011888226494193077,\\\\\\\\\\\\\\\\n        0.008904080837965012,\\\\\\\\\\\\\\\\n        0.02180083841085434,\\\\\\\\\\\\\\\\n        0.037605755031108856,\\\\\\\\\\\\\\\\n        0.02325146459043026,\\\\\\\\\\\\\\\\n        -0.014001995325088501,\\\\\\\\\\\\\\\\n        -0.023790268227458,\\\\\\\\\\\\\\\\n        -0.00516353826969862,\\\\\\\\\\\\\\\\n        0.013967457227408886,\\\\\\\\\\\\\\\\n        0.013711870647966862,\\\\\\\\\\\\\\\\n        0.026277055963873863,\\\\\\\\\\\\\\\\n        0.006762680597603321,\\\\\\\\\\\\\\\\n        0.010693186894059181,\\\\\\\\\\\\\\\\n        0.008413631469011307,\\\\\\\\\\\\\\\\n        0.016274644061923027,\\\\\\\\\\\\\\\\n        0.007936997339129448,\\\\\\\\\\\\\\\\n        -0.001714847283437848,\\\\\\\\\\\\\\\\n        -0.00437950948253274,\\\\\\\\\\\\\\\\n        -0.001650950638577342,\\\\\\\\\\\\\\\\n        0.002709562424570322,\\\\\\\\\\\\\\\\n        0.015804916620254517,\\\\\\\\\\\\\\\\n        0.002201843075454235,\\\\\\\\\\\\\\\\n        0.06537488102912903,\\\\\\\\\\\\\\\\n        0.020460736006498337,\\\\\\\\\\\\\\\\n        0.013656608760356903,\\\\\\\\\\\\\\\\n        0.022021885961294174,\\\\\\\\\\\\\\\\n        -0.020391657948493958,\\\\\\\\\\\\\\\\n        -0.007315299939364195,\\\\\\\\\\\\\\\\n        -0.008012982085347176,\\\\\\\\\\\\\\\\n        0.0065416330471634865,\\\\\\\\\\\\\\\\n        -0.012523738667368889,\\\\\\\\\\\\\\\\n        -0.0025437765289098024,\\\\\\\\\\\\\\\\n        0.025669174268841743,\\\\\\\\\\\\\\\\n        0.013000372797250748,\\\\\\\\\\\\\\\\n        -0.0018996293656527996,\\\\\\\\\\\\\\\\n        0.041225410997867584,\\\\\\\\\\\\\\\\n        0.014865463599562645,\\\\\\\\\\\\\\\\n        0.017338436096906662,\\\\\\\\\\\\\\\\n        0.017573298886418343,\\\\\\\\\\\\\\\\n        -0.017296988517045975,\\\\\\\\\\\\\\\\n        -0.020156795158982277,\\\\\\\\\\\\\\\\n        -0.0008246118668466806,\\\\\\\\\\\\\\\\n        0.0006061544991098344,\\\\\\\\\\\\\\\\n        -0.005612541455775499,\\\\\\\\\\\\\\\\n        0.015155589208006859,\\\\\\\\\\\\\\\\n        -0.002258832100778818,\\\\\\\\\\\\\\\\n        -0.011542838998138905,\\\\\\\\\\\\\\\\n        -0.019355496391654015,\\\\\\\\\\\\\\\\n        0.006952643860131502,\\\\\\\\\\\\\\\\n        -0.032853227108716965,\\\\\\\\\\\\\\\\n        0.01744895987212658,\\\\\\\\\\\\\\\\n        0.019106818363070488,\\\\\\\\\\\\\\\\n        -0.028929628431797028,\\\\\\\\\\\\\\\\n        0.001288294093683362,\\\\\\\\\\\\\\\\n        0.014768755063414574,\\\\\\\\\\\\\\\\n        0.025365233421325684,\\\\\\\\\\\\\\\\n        -0.012440845370292664,\\\\\\\\\\\\\\\\n        -0.02182846888899803,\\\\\\\\\\\\\\\\n        0.013048727065324783,\\\\\\\\\\\\\\\\n        0.0074396394193172455,\\\\\\\\\\\\\\\\n        -0.013760224916040897,\\\\\\\\\\\\\\\\n        -0.02898489125072956,\\\\\\\\\\\\\\\\n        -0.005636718589812517,\\\\\\\\\\\\\\\\n        0.021842284128069878,\\\\\\\\\\\\\\\\n        -4.6249500883277506e-05,\\\\\\\\\\\\\\\\n        -0.007943904958665371,\\\\\\\\\\\\\\\\n        0.00017215391562785953,\\\\\\\\\\\\\\\\n        0.002833901671692729,\\\\\\\\\\\\\\\\n        -0.013117804192006588,\\\\\\\\\\\\\\\\n        -0.009657025337219238,\\\\\\\\\\\\\\\\n        -0.004210269544273615,\\\\\\\\\\\\\\\\n        -0.02021205611526966,\\\\\\\\\\\\\\\\n        0.02568298950791359,\\\\\\\\\\\\\\\\n        0.016274644061923027,\\\\\\\\\\\\\\\\n        0.004155007656663656,\\\\\\\\\\\\\\\\n        -0.014229951426386833,\\\\\\\\\\\\\\\\n        0.001432493212632835,\\\\\\\\\\\\\\\\n        0.017932502552866936,\\\\\\\\\\\\\\\\n        -0.029150675982236862,\\\\\\\\\\\\\\\\n        -0.013331945054233074,\\\\\\\\\\\\\\\\n        0.0029772373382002115,\\\\\\\\\\\\\\\\n        0.010914234444499016,\\\\\\\\\\\\\\\\n        0.004528025630861521,\\\\\\\\\\\\\\\\n        -0.02460538223385811,\\\\\\\\\\\\\\\\n        0.006897381506860256,\\\\\\\\\\\\\\\\n        -0.01609504222869873,\\\\\\\\\\\\\\\\n        -0.00013005985238123685,\\\\\\\\\\\\\\\\n        -0.013608254492282867,\\\\\\\\\\\\\\\\n        0.01656476780772209,\\\\\\\\\\\\\\\\n        0.001359098474495113,\\\\\\\\\\\\\\\\n        0.01649569161236286,\\\\\\\\\\\\\\\\n        -0.0032000120263546705,\\\\\\\\\\\\\\\\n        -0.011618824675679207,\\\\\\\\\\\\\\\\n        0.007018267177045345,\\\\\\\\\\\\\\\\n        0.029951974749565125,\\\\\\\\\\\\\\\\n        0.04863051325082779,\\\\\\\\\\\\\\\\n        -0.00240044086240232,\\\\\\\\\\\\\\\\n        -0.016965417191386223,\\\\\\\\\\\\\\\\n        0.0036438344977796078,\\\\\\\\\\\\\\\\n        0.012461569160223007,\\\\\\\\\\\\\\\\n        0.049183133989572525,\\\\\\\\\\\\\\\\n        0.006983728613704443,\\\\\\\\\\\\\\\\n        -0.020391657948493958,\\\\\\\\\\\\\\\\n        0.01197802647948265,\\\\\\\\\\\\\\\\n        -0.0023866253904998302,\\\\\\\\\\\\\\\\n        -0.004728350322693586,\\\\\\\\\\\\\\\\n        -0.019921932369470596,\\\\\\\\\\\\\\\\n        -0.019659437239170074,\\\\\\\\\\\\\\\\n        0.03492555022239685,\\\\\\\\\\\\\\\\n        -0.020336396992206573,\\\\\\\\\\\\\\\\n        -0.01710357330739498,\\\\\\\\\\\\\\\\n        -0.013725685887038708,\\\\\\\\\\\\\\\\n        0.012060919776558876,\\\\\\\\\\\\\\\\n        -0.0074327317997813225,\\\\\\\\\\\\\\\\n        0.025227079167962074,\\\\\\\\\\\\\\\\n        0.016288459300994873,\\\\\\\\\\\\\\\\n        -7.161386747611687e-05,\\\\\\\\\\\\\\\\n        -0.021787023171782494,\\\\\\\\\\\\\\\\n        0.005502017680555582,\\\\\\\\\\\\\\\\n        -0.0003976269799750298,\\\\\\\\\\\\\\\\n        0.008835003711283207,\\\\\\\\\\\\\\\\n        0.020267318934202194,\\\\\\\\\\\\\\\\n        0.0173798818141222,\\\\\\\\\\\\\\\\n        0.00300314137712121,\\\\\\\\\\\\\\\\n        0.024149470031261444,\\\\\\\\\\\\\\\\n        0.020018640905618668,\\\\\\\\\\\\\\\\n        0.011453038081526756,\\\\\\\\\\\\\\\\n        0.017490405589342117,\\\\\\\\\\\\\\\\n        0.019825223833322525,\\\\\\\\\\\\\\\\n        -0.017573298886418343,\\\\\\\\\\\\\\\\n        0.014533892273902893,\\\\\\\\\\\\\\\\n        0.014975987374782562,\\\\\\\\\\\\\\\\n        -0.01029253751039505,\\\\\\\\\\\\\\\\n        0.013352667912840843,\\\\\\\\\\\\\\\\n        -0.022864630445837975,\\\\\\\\\\\\\\\\n        0.028294116258621216,\\\\\\\\\\\\\\\\n        0.004306978080421686,\\\\\\\\\\\\\\\\n        0.01351845357567072,\\\\\\\\\\\\\\\\n        0.024950768798589706,\\\\\\\\\\\\\\\\n        -0.0047870660200715065,\\\\\\\\\\\\\\\\n        0.006524363532662392,\\\\\\\\\\\\\\\\n        0.02591785229742527,\\\\\\\\\\\\\\\\n        -0.0002944425505120307,\\\\\\\\\\\\\\\\n        0.0002605514309834689,\\\\\\\\\\\\\\\\n        0.011936580762267113,\\\\\\\\\\\\\\\\n        -0.004386417102068663,\\\\\\\\\\\\\\\\n        0.00042828009463846684,\\\\\\\\\\\\\\\\n        0.005716157611459494,\\\\\\\\\\\\\\\\n        -0.020640337839722633,\\\\\\\\\\\\\\\\n        -0.013587530702352524,\\\\\\\\\\\\\\\\n        5.7258715969510376e-05,\\\\\\\\\\\\\\\\n        -0.015445713885128498,\\\\\\\\\\\\\\\\n        -0.006144437473267317,\\\\\\\\\\\\\\\\n        0.014098703861236572,\\\\\\\\\\\\\\\\n        0.011812240816652775,\\\\\\\\\\\\\\\\n        0.014437183737754822,\\\\\\\\\\\\\\\\n        -0.023817898705601692,\\\\\\\\\\\\\\\\n        -0.019410759210586548,\\\\\\\\\\\\\\\\n        0.01439573708921671,\\\\\\\\\\\\\\\\n        -0.024384334683418274,\\\\\\\\\\\\\\\\n        -0.0415017232298851,\\\\\\\\\\\\\\\\n        0.007819565013051033,\\\\\\\\\\\\\\\\n        0.011867502704262733,\\\\\\\\\\\\\\\\n        0.002799362875521183,\\\\\\\\\\\\\\\\n        0.014216136187314987,\\\\\\\\\\\\\\\\n        -0.0013513272861018777,\\\\\\\\\\\\\\\\n        -0.006558902096003294,\\\\\\\\\\\\\\\\n        -0.018913401290774345,\\\\\\\\\\\\\\\\n        -0.020433105528354645,\\\\\\\\\\\\\\\\n        0.004113561008125544,\\\\\\\\\\\\\\\\n        -0.007874827831983566,\\\\\\\\\\\\\\\\n        -0.007308392319828272,\\\\\\\\\\\\\\\\n        -0.0458950474858284,\\\\\\\\\\\\\\\\n        -0.005636718589812517,\\\\\\\\\\\\\\\\n        0.011225082911550999,\\\\\\\\\\\\\\\\n        0.0165371373295784,\\\\\\\\\\\\\\\\n        0.017932502552866936,\\\\\\\\\\\\\\\\n        0.0018184634391218424,\\\\\\\\\\\\\\\\n        -0.01331122126430273,\\\\\\\\\\\\\\\\n        -0.0009083682671189308,\\\\\\\\\\\\\\\\n        -0.016854893416166306,\\\\\\\\\\\\\\\\n        -0.032549288123846054,\\\\\\\\\\\\\\\\n        -0.015404267236590385,\\\\\\\\\\\\\\\\n        -0.03078090399503708,\\\\\\\\\\\\\\\\n        0.004224085249006748,\\\\\\\\\\\\\\\\n        -0.0059579284861683846,\\\\\\\\\\\\\\\\n        0.0032570010516792536,\\\\\\\\\\\\\\\\n        -0.006406932137906551,\\\\\\\\\\\\\\\\n        -0.00434497045353055,\\\\\\\\\\\\\\\\n        0.004673088435083628,\\\\\\\\\\\\\\\\n        -0.001097467727959156,\\\\\\\\\\\\\\\\n        -0.003015229944139719,\\\\\\\\\\\\\\\\n        0.04890682175755501,\\\\\\\\\\\\\\\\n        -0.027658604085445404,\\\\\\\\\\\\\\\\n        0.030863797292113304,\\\\\\\\\\\\\\\\n        0.004051391500979662,\\\\\\\\\\\\\\\\n        0.0006225603865459561,\\\\\\\\\\\\\\\\n        0.013055634684860706,\\\\\\\\\\\\\\\\n        0.0011432315222918987,\\\\\\\\\\\\\\\\n        -0.018222626298666,\\\\\\\\\\\\\\\\n        -0.013304313644766808,\\\\\\\\\\\\\\\\n        -0.014713493175804615,\\\\\\\\\\\\\\\\n        -0.009359992109239101,\\\\\\\\\\\\\\\\n        0.0014739397447556257,\\\\\\\\\\\\\\\\n        -0.005426032468676567,\\\\\\\\\\\\\\\\n        0.0005271471454761922,\\\\\\\\\\\\\\\\n        0.007854104042053223,\\\\\\\\\\\\\\\\n        0.009152759797871113,\\\\\\\\\\\\\\\\n        0.02865331992506981,\\\\\\\\\\\\\\\\n        -0.02898489125072956,\\\\\\\\\\\\\\\\n        -0.0046212803572416306,\\\\\\\\\\\\\\\\n        -0.006196245551109314,\\\\\\\\\\\\\\\\n        -0.0032172815408557653,\\\\\\\\\\\\\\\\n        -0.006800673436373472,\\\\\\\\\\\\\\\\n        0.02318238653242588,\\\\\\\\\\\\\\\\n        0.016647661104798317,\\\\\\\\\\\\\\\\n        0.03685971722006798,\\\\\\\\\\\\\\\\n        -0.0018063748721033335,\\\\\\\\\\\\\\\\n        -0.011915856972336769,\\\\\\\\\\\\\\\\n        0.010299445129930973,\\\\\\\\\\\\\\\\n        -0.001650950638577342,\\\\\\\\\\\\\\\\n        -0.0217732060700655,\\\\\\\\\\\\\\\\n        0.019825223833322525,\\\\\\\\\\\\\\\\n        0.015141773037612438,\\\\\\\\\\\\\\\\n        -0.00682485057041049,\\\\\\\\\\\\\\\\n        -0.016481876373291016,\\\\\\\\\\\\\\\\n        0.004811243154108524,\\\\\\\\\\\\\\\\n        -0.015058880671858788,\\\\\\\\\\\\\\\\n        0.010720817372202873,\\\\\\\\\\\\\\\\n        0.02196662314236164,\\\\\\\\\\\\\\\\n        -0.022629767656326294,\\\\\\\\\\\\\\\\n        0.02790728211402893,\\\\\\\\\\\\\\\\n        0.008814280852675438,\\\\\\\\\\\\\\\\n        -0.056809280067682266,\\\\\\\\\\\\\\\\n        -0.02278173714876175,\\\\\\\\\\\\\\\\n        -0.020667968317866325,\\\\\\\\\\\\\\\\n        -0.017048310488462448,\\\\\\\\\\\\\\\\n        0.02696782909333706,\\\\\\\\\\\\\\\\n        -0.02051599696278572,\\\\\\\\\\\\\\\\n        0.01197802647948265,\\\\\\\\\\\\\\\\n        0.008392907679080963,\\\\\\\\\\\\\\\\n        -0.003781989449635148,\\\\\\\\\\\\\\\\n        -0.009049143642187119,\\\\\\\\\\\\\\\\n        -0.018512751907110214,\\\\\\\\\\\\\\\\n        0.05003969371318817,\\\\\\\\\\\\\\\\n        -0.028100699186325073,\\\\\\\\\\\\\\\\n        -0.01812591776251793,\\\\\\\\\\\\\\\\n        0.014616784639656544,\\\\\\\\\\\\\\\\n        -0.0062756845727562904,\\\\\\\\\\\\\\\\n        0.019286420196294785,\\\\\\\\\\\\\\\\n        -0.0003641675866674632,\\\\\\\\\\\\\\\\n        -0.007025174796581268,\\\\\\\\\\\\\\\\n        -0.04907260835170746,\\\\\\\\\\\\\\\\n        -0.01957654394209385,\\\\\\\\\\\\\\\\n        -0.02584877610206604,\\\\\\\\\\\\\\\\n        -0.027023091912269592,\\\\\\\\\\\\\\\\n        -0.0024574296548962593,\\\\\\\\\\\\\\\\n        0.007660687435418367,\\\\\\\\\\\\\\\\n        0.03412425145506859,\\\\\\\\\\\\\\\\n        0.01579110138118267,\\\\\\\\\\\\\\\\n        0.027105985209345818,\\\\\\\\\\\\\\\\n        0.004914859309792519,\\\\\\\\\\\\\\\\n        -0.011598100885748863,\\\\\\\\\\\\\\\\n        0.008717572316527367,\\\\\\\\\\\\\\\\n        -0.006710872519761324,\\\\\\\\\\\\\\\\n        3.8559239328606054e-05,\\\\\\\\\\\\\\\\n        0.004728350322693586,\\\\\\\\\\\\\\\\n        -0.018167365342378616,\\\\\\\\\\\\\\\\n        -0.012109274044632912,\\\\\\\\\\\\\\\\n        -0.0026249424554407597,\\\\\\\\\\\\\\\\n        0.009511962532997131,\\\\\\\\\\\\\\\\n        -0.022933708503842354,\\\\\\\\\\\\\\\\n        0.003940867725759745,\\\\\\\\\\\\\\\\n        -0.002552411053329706,\\\\\\\\\\\\\\\\n        0.020598890259861946,\\\\\\\\\\\\\\\\n        0.020156795158982277,\\\\\\\\\\\\\\\\n        -0.0021034078672528267,\\\\\\\\\\\\\\\\n        -0.01602596417069435,\\\\\\\\\\\\\\\\n        -0.011453038081526756,\\\\\\\\\\\\\\\\n        -0.02423236332833767,\\\\\\\\\\\\\\\\n        -0.005871581844985485,\\\\\\\\\\\\\\\\n        0.00040237605571746826,\\\\\\\\\\\\\\\\n        0.0021034078672528267,\\\\\\\\\\\\\\\\n        -0.007943904958665371,\\\\\\\\\\\\\\\\n        -0.027589526027441025,\\\\\\\\\\\\\\\\n        0.004569472279399633,\\\\\\\\\\\\\\\\n        0.011231990531086922,\\\\\\\\\\\\\\\\n        0.03920835256576538,\\\\\\\\\\\\\\\\n        0.015597684308886528,\\\\\\\\\\\\\\\\n        0.004821605049073696,\\\\\\\\\\\\\\\\n        0.004372601397335529,\\\\\\\\\\\\\\\\n        -0.009954058565199375,\\\\\\\\\\\\\\\\n        0.0029185216408222914,\\\\\\\\\\\\\\\\n        0.01883050799369812,\\\\\\\\\\\\\\\\n        0.04136356711387634,\\\\\\\\\\\\\\\\n        -0.0069871824234724045,\\\\\\\\\\\\\\\\n        -0.019991008564829826,\\\\\\\\\\\\\\\\n        -0.027520449832081795,\\\\\\\\\\\\\\\\n        0.023541588336229324,\\\\\\\\\\\\\\\\n        0.03067038021981716,\\\\\\\\\\\\\\\\n        0.02503366209566593,\\\\\\\\\\\\\\\\n        -0.006534724961966276,\\\\\\\\\\\\\\\\n        0.01697923243045807,\\\\\\\\\\\\\\\\n        0.007591609843075275,\\\\\\\\\\\\\\\\n        -0.011218175292015076,\\\\\\\\\\\\\\\\n        0.0048561436124145985,\\\\\\\\\\\\\\\\n        0.007598517462611198,\\\\\\\\\\\\\\\\n        -0.0025144186802208424,\\\\\\\\\\\\\\\\n        0.0050737373530864716,\\\\\\\\\\\\\\\\n        0.005118637811392546,\\\\\\\\\\\\\\\\n        -0.024646827951073647,\\\\\\\\\\\\\\\\n        -0.00781265739351511,\\\\\\\\\\\\\\\\n        -0.0075087170116603374,\\\\\\\\\\\\\\\\n        0.022615952417254448,\\\\\\\\\\\\\\\\n        0.015431898646056652,\\\\\\\\\\\\\\\\n        0.005567640997469425,\\\\\\\\\\\\\\\\n        -0.01859564520418644,\\\\\\\\\\\\\\\\n        0.02254687435925007,\\\\\\\\\\\\\\\\n        -0.01572202332317829,\\\\\\\\\\\\\\\\n        -0.004023760557174683,\\\\\\\\\\\\\\\\n        0.020695598796010017,\\\\\\\\\\\\\\\\n        -0.006897381506860256,\\\\\\\\\\\\\\\\n        0.019106818363070488,\\\\\\\\\\\\\\\\n        -0.0004956306074745953,\\\\\\\\\\\\\\\\n        0.003250093199312687,\\\\\\\\\\\\\\\\n        -0.005481294356286526,\\\\\\\\\\\\\\\\n        0.009670840576291084,\\\\\\\\\\\\\\\\n        0.009325453080236912,\\\\\\\\\\\\\\\\n        0.0022104778327047825,\\\\\\\\\\\\\\\\n        0.017697637900710106,\\\\\\\\\\\\\\\\n        0.011197451502084732,\\\\\\\\\\\\\\\\n        0.022284379228949547,\\\\\\\\\\\\\\\\n        0.019728515297174454,\\\\\\\\\\\\\\\\n        -0.027257954701781273,\\\\\\\\\\\\\\\\n        -0.021538343280553818,\\\\\\\\\\\\\\\\n        0.022629767656326294,\\\\\\\\\\\\\\\\n        0.004983936902135611,\\\\\\\\\\\\\\\\n        -0.018609460443258286,\\\\\\\\\\\\\\\\n        -0.030919058248400688,\\\\\\\\\\\\\\\\n        0.015127957798540592,\\\\\\\\\\\\\\\\n        0.019314050674438477,\\\\\\\\\\\\\\\\n        0.020101532340049744,\\\\\\\\\\\\\\\\n        -0.014368105679750443,\\\\\\\\\\\\\\\\n        -0.021137693896889687,\\\\\\\\\\\\\\\\n        -0.027313217520713806,\\\\\\\\\\\\\\\\n        0.03691498190164566,\\\\\\\\\\\\\\\\n        0.017200279980897903,\\\\\\\\\\\\\\\\n        0.007045898120850325,\\\\\\\\\\\\\\\\n        0.0025904036592692137,\\\\\\\\\\\\\\\\n        -0.014299028553068638,\\\\\\\\\\\\\\\\n        -0.030532225966453552,\\\\\\\\\\\\\\\\n        0.01970088481903076,\\\\\\\\\\\\\\\\n        -0.016039779409766197,\\\\\\\\\\\\\\\\n        0.01539045199751854,\\\\\\\\\\\\\\\\n        0.014029626734554768,\\\\\\\\\\\\\\\\n        0.007639964111149311,\\\\\\\\\\\\\\\\n        -0.0063827550038695335,\\\\\\\\\\\\\\\\n        0.019825223833322525,\\\\\\\\\\\\\\\\n        -0.0008755564922466874,\\\\\\\\\\\\\\\\n        0.014098703861236572,\\\\\\\\\\\\\\\\n        0.003730181371793151,\\\\\\\\\\\\\\\\n        -0.002447067992761731,\\\\\\\\\\\\\\\\n        -0.03130589425563812,\\\\\\\\\\\\\\\\n        0.011301067657768726,\\\\\\\\\\\\\\\\n        -0.0023935330100357533,\\\\\\\\\\\\\\\\n        -0.006406932137906551,\\\\\\\\\\\\\\\\n        -0.0008764199446886778,\\\\\\\\\\\\\\\\n        -0.016205566003918648,\\\\\\\\\\\\\\\\n        -0.0027890014462172985,\\\\\\\\\\\\\\\\n        0.03111247532069683,\\\\\\\\\\\\\\\\n        -0.03246639296412468,\\\\\\\\\\\\\\\\n        -0.0320519283413887,\\\\\\\\\\\\\\\\n        0.018070656806230545,\\\\\\\\\\\\\\\\n        -0.030007237568497658,\\\\\\\\\\\\\\\\n        0.01579110138118267,\\\\\\\\\\\\\\\\n        -0.01017510611563921,\\\\\\\\\\\\\\\\n        -0.004431317560374737,\\\\\\\\\\\\\\\\n        0.019396943971514702,\\\\\\\\\\\\\\\\n        0.0008367004338651896,\\\\\\\\\\\\\\\\n        -0.00824784580618143,\\\\\\\\\\\\\\\\n        0.024038946256041527,\\\\\\\\\\\\\\\\n        0.013532268814742565,\\\\\\\\\\\\\\\\n        -0.021690314635634422,\\\\\\\\\\\\\\\\n        0.018264073878526688,\\\\\\\\\\\\\\\\n        0.002878802129998803,\\\\\\\\\\\\\\\\n        0.02355540543794632,\\\\\\\\\\\\\\\\n        -0.02624942548573017,\\\\\\\\\\\\\\\\n        0.01778053119778633,\\\\\\\\\\\\\\\\n        0.001873725326731801,\\\\\\\\\\\\\\\\n        -0.03614131361246109,\\\\\\\\\\\\\\\\n        -0.011784610338509083,\\\\\\\\\\\\\\\\n        0.006973366718739271,\\\\\\\\\\\\\\\\n        0.013014188036322594,\\\\\\\\\\\\\\\\n        0.005332777742296457,\\\\\\\\\\\\\\\\n        0.017490405589342117,\\\\\\\\\\\\\\\\n        -0.01218525879085064,\\\\\\\\\\\\\\\\n        0.006755772978067398,\\\\\\\\\\\\\\\\n        0.0039028748869895935,\\\\\\\\\\\\\\\\n        -0.016191750764846802,\\\\\\\\\\\\\\\\n        0.012779325246810913,\\\\\\\\\\\\\\\\n        0.03277033567428589,\\\\\\\\\\\\\\\\n        -0.006524363532662392,\\\\\\\\\\\\\\\\n        -0.015666762366890907,\\\\\\\\\\\\\\\\n        -0.017656192183494568,\\\\\\\\\\\\\\\\n        -0.02196662314236164,\\\\\\\\\\\\\\\\n        -0.036997873336076736,\\\\\\\\\\\\\\\\n        0.020322579890489578,\\\\\\\\\\\\\\\\n        -0.03185851126909256,\\\\\\\\\\\\\\\\n        -0.012427030131220818,\\\\\\\\\\\\\\\\n        0.001960072200745344,\\\\\\\\\\\\\\\\n        0.01059647835791111,\\\\\\\\\\\\\\\\n        0.014699677936732769,\\\\\\\\\\\\\\\\n        0.02011534944176674,\\\\\\\\\\\\\\\\n        -0.0018996293656527996,\\\\\\\\\\\\\\\\n        -0.026940198615193367,\\\\\\\\\\\\\\\\n        0.0046281879767775536,\\\\\\\\\\\\\\\\n        0.013753317296504974,\\\\\\\\\\\\\\\\n        -0.0009023239836096764,\\\\\\\\\\\\\\\\n        -0.004255170002579689,\\\\\\\\\\\\\\\\n        -0.004604010842740536,\\\\\\\\\\\\\\\\n        -0.006807581055909395,\\\\\\\\\\\\\\\\n        -0.010534308850765228,\\\\\\\\\\\\\\\\n        0.03719129040837288,\\\\\\\\\\\\\\\\n        -0.018844323232769966,\\\\\\\\\\\\\\\\n        0.011680994182825089,\\\\\\\\\\\\\\\\n        -0.016744369640946388,\\\\\\\\\\\\\\\\n        0.014464814215898514,\\\\\\\\\\\\\\\\n        0.009187298826873302,\\\\\\\\\\\\\\\\n        -0.022450165823101997,\\\\\\\\\\\\\\\\n        -0.021579790860414505,\\\\\\\\\\\\\\\\n        -0.03387557342648506,\\\\\\\\\\\\\\\\n        0.010485954582691193,\\\\\\\\\\\\\\\\n        -0.02460538223385811,\\\\\\\\\\\\\\\\n        -0.015459529124200344,\\\\\\\\\\\\\\\\n        0.021925177425146103,\\\\\\\\\\\\\\\\n        0.005453663412481546,\\\\\\\\\\\\\\\\n        -0.007446547504514456,\\\\\\\\\\\\\\\\n        0.016260826960206032,\\\\\\\\\\\\\\\\n        0.004030668176710606,\\\\\\\\\\\\\\\\n        -0.01331122126430273,\\\\\\\\\\\\\\\\n        -0.028059253469109535,\\\\\\\\\\\\\\\\n        0.009470515884459019,\\\\\\\\\\\\\\\\n        0.003431421471759677,\\\\\\\\\\\\\\\\n        0.021317295730113983,\\\\\\\\\\\\\\\\n        -0.02828030101954937,\\\\\\\\\\\\\\\\n        -0.0067903115414083,\\\\\\\\\\\\\\\\n        -0.016108857467770576,\\\\\\\\\\\\\\\\n        -0.00739819323644042,\\\\\\\\\\\\\\\\n        -0.028459902852773666,\\\\\\\\\\\\\\\\n        -0.0024867875035852194,\\\\\\\\\\\\\\\\n        0.007142606656998396,\\\\\\\\\\\\\\\\n        0.00048138335114344954,\\\\\\\\\\\\\\\\n        0.04072805494070053,\\\\\\\\\\\\\\\\n        -0.015818731859326363,\\\\\\\\\\\\\\\\n        -0.015804916620254517,\\\\\\\\\\\\\\\\n        -0.012592815794050694,\\\\\\\\\\\\\\\\n        -0.045673999935388565,\\\\\\\\\\\\\\\\n        -0.008931712247431278,\\\\\\\\\\\\\\\\n        0.0005124682211317122,\\\\\\\\\\\\\\\\n        -0.003864882281050086,\\\\\\\\\\\\\\\\n        -0.009056051261723042,\\\\\\\\\\\\\\\\n        0.011093835346400738,\\\\\\\\\\\\\\\\n        -0.004904497880488634,\\\\\\\\\\\\\\\\n        0.03431766852736473,\\\\\\\\\\\\\\\\n        -0.012385583482682705,\\\\\\\\\\\\\\\\n        -0.009228745475411415,\\\\\\\\\\\\\\\\n        -0.012088551186025143,\\\\\\\\\\\\\\\\n        0.023900792002677917,\\\\\\\\\\\\\\\\n        -0.0217732060700655,\\\\\\\\\\\\\\\\n        -0.001094877370633185,\\\\\\\\\\\\\\\\n        0.00011343809455865994,\\\\\\\\\\\\\\\\n        -0.020916646346449852,\\\\\\\\\\\\\\\\n        -0.012952018529176712,\\\\\\\\\\\\\\\\n        -0.007923181168735027,\\\\\\\\\\\\\\\\n        -0.013449376448988914,\\\\\\\\\\\\\\\\n        -0.004300069995224476,\\\\\\\\\\\\\\\\n        -0.0016958509804680943,\\\\\\\\\\\\\\\\n        0.0031706541776657104,\\\\\\\\\\\\\\\\n        0.013642792589962482,\\\\\\\\\\\\\\\\n        -0.016882523894309998,\\\\\\\\\\\\\\\\n        0.018650906160473824,\\\\\\\\\\\\\\\\n        0.03580974042415619,\\\\\\\\\\\\\\\\n        0.026111269369721413,\\\\\\\\\\\\\\\\n        -0.007992259226739407,\\\\\\\\\\\\\\\\n        -0.005975198000669479,\\\\\\\\\\\\\\\\n        -0.018982479348778725,\\\\\\\\\\\\\\\\n        0.003937413915991783,\\\\\\\\\\\\\\\\n        0.009214929305016994,\\\\\\\\\\\\\\\\n        -0.008814280852675438,\\\\\\\\\\\\\\\\n        -0.013235236518085003,\\\\\\\\\\\\\\\\n        0.019866669550538063,\\\\\\\\\\\\\\\\n        0.0106310173869133,\\\\\\\\\\\\\\\\n        -0.02514418587088585,\\\\\\\\\\\\\\\\n        -0.0048699588514864445,\\\\\\\\\\\\\\\\n        -0.03310190513730049,\\\\\\\\\\\\\\\\n        -0.005394947715103626,\\\\\\\\\\\\\\\\n        0.01391910295933485,\\\\\\\\\\\\\\\\n        -0.019521282985806465,\\\\\\\\\\\\\\\\n        0.004106653388589621,\\\\\\\\\\\\\\\\n        0.0036438344977796078,\\\\\\\\\\\\\\\\n        -0.020239688456058502,\\\\\\\\\\\\\\\\n        0.007709041703492403,\\\\\\\\\\\\\\\\n        0.007598517462611198,\\\\\\\\\\\\\\\\n        -0.010472138412296772,\\\\\\\\\\\\\\\\n        -0.008068243972957134,\\\\\\\\\\\\\\\\n        0.003049768740311265,\\\\\\\\\\\\\\\\n        -0.00754325557500124,\\\\\\\\\\\\\\\\n        -0.015887809917330742,\\\\\\\\\\\\\\\\n        0.01518321968615055,\\\\\\\\\\\\\\\\n        -0.027492817491292953,\\\\\\\\\\\\\\\\n        -0.004006491042673588,\\\\\\\\\\\\\\\\n        0.01700686477124691,\\\\\\\\\\\\\\\\n        -0.01533519010990858,\\\\\\\\\\\\\\\\n        -0.006272230762988329,\\\\\\\\\\\\\\\\n        0.004103199578821659,\\\\\\\\\\\\\\\\n        -0.0031171191949397326,\\\\\\\\\\\\\\\\n        -0.0008341100183315575,\\\\\\\\\\\\\\\\n        -0.036832086741924286,\\\\\\\\\\\\\\\\n        0.0020947731100022793,\\\\\\\\\\\\\\\\n        -0.010651740245521069,\\\\\\\\\\\\\\\\n        -0.015321374870836735,\\\\\\\\\\\\\\\\n        0.00918039120733738,\\\\\\\\\\\\\\\\n        -0.01691015623509884,\\\\\\\\\\\\\\\\n        -0.009346176870167255,\\\\\\\\\\\\\\\\n        -0.019562728703022003,\\\\\\\\\\\\\\\\n        -0.01539045199751854,\\\\\\\\\\\\\\\\n        -0.0072876689955592155,\\\\\\\\\\\\\\\\n        -0.021980438381433487,\\\\\\\\\\\\\\\\n        0.0017372973961755633,\\\\\\\\\\\\\\\\n        0.007577794604003429,\\\\\\\\\\\\\\\\n        -0.02105480246245861,\\\\\\\\\\\\\\\\n        0.009318545460700989,\\\\\\\\\\\\\\\\n        -0.011632639914751053,\\\\\\\\\\\\\\\\n        0.01246847677975893,\\\\\\\\\\\\\\\\n        0.011736256070435047,\\\\\\\\\\\\\\\\n        0.020198240876197815,\\\\\\\\\\\\\\\\n        0.23497380316257477,\\\\\\\\\\\\\\\\n        -0.007329115644097328,\\\\\\\\\\\\\\\\n        -0.024038946256041527,\\\\\\\\\\\\\\\\n        0.033792681992053986,\\\\\\\\\\\\\\\\n        -0.012689524330198765,\\\\\\\\\\\\\\\\n        0.023210017010569572,\\\\\\\\\\\\\\\\n        0.03749522939324379,\\\\\\\\\\\\\\\\n        -0.015915440395474434,\\\\\\\\\\\\\\\\n        -0.009677748195827007,\\\\\\\\\\\\\\\\n        0.016813447698950768,\\\\\\\\\\\\\\\\n        0.015141773037612438,\\\\\\\\\\\\\\\\n        -0.017863424494862556,\\\\\\\\\\\\\\\\n        -0.04175040125846863,\\\\\\\\\\\\\\\\n        -0.00037344987504184246,\\\\\\\\\\\\\\\\n        0.012143813073635101,\\\\\\\\\\\\\\\\n        -0.014602969400584698,\\\\\\\\\\\\\\\\n        -0.04349115118384361,\\\\\\\\\\\\\\\\n        -0.022312011569738388,\\\\\\\\\\\\\\\\n        -0.013297406025230885,\\\\\\\\\\\\\\\\n        0.003695642575621605,\\\\\\\\\\\\\\\\n        0.03230060636997223,\\\\\\\\\\\\\\\\n        -0.0021880276035517454,\\\\\\\\\\\\\\\\n        -0.013684239238500595,\\\\\\\\\\\\\\\\n        -0.01609504222869873,\\\\\\\\\\\\\\\\n        0.03738470748066902,\\\\\\\\\\\\\\\\n        -0.023679744452238083,\\\\\\\\\\\\\\\\n        0.02044692076742649,\\\\\\\\\\\\\\\\n        0.009746826253831387,\\\\\\\\\\\\\\\\n        0.014768755063414574,\\\\\\\\\\\\\\\\n        0.008904080837965012,\\\\\\\\\\\\\\\\n        -0.0239560529589653,\\\\\\\\\\\\\\\\n        0.001896175555884838,\\\\\\\\\\\\\\\\n        0.0035160414408892393,\\\\\\\\\\\\\\\\n        0.016813447698950768,\\\\\\\\\\\\\\\\n        -0.024950768798589706,\\\\\\\\\\\\\\\\n        -0.00754325557500124,\\\\\\\\\\\\\\\\n        -0.00918039120733738,\\\\\\\\\\\\\\\\n        -0.003899421077221632,\\\\\\\\\\\\\\\\n        0.025323787704110146,\\\\\\\\\\\\\\\\n        0.005726519040763378,\\\\\\\\\\\\\\\\n        0.0016794450348243117,\\\\\\\\\\\\\\\\n        -0.0031913775019347668,\\\\\\\\\\\\\\\\n        -0.03730181232094765,\\\\\\\\\\\\\\\\n        -0.005633264780044556,\\\\\\\\\\\\\\\\n        -0.0015879174461588264,\\\\\\\\\\\\\\\\n        0.019493652507662773,\\\\\\\\\\\\\\\\n        0.01143922284245491,\\\\\\\\\\\\\\\\n        -0.020032456144690514,\\\\\\\\\\\\\\\\n        0.006286046467721462,\\\\\\\\\\\\\\\\n        0.015500975772738457,\\\\\\\\\\\\\\\\n        -0.024964584037661552,\\\\\\\\\\\\\\\\n        0.0070562600158154964,\\\\\\\\\\\\\\\\n        0.02430144138634205,\\\\\\\\\\\\\\\\n        0.011425407603383064,\\\\\\\\\\\\\\\\n        -0.012413214892148972,\\\\\\\\\\\\\\\\n        0.002155215945094824,\\\\\\\\\\\\\\\\n        -0.00141090655233711,\\\\\\\\\\\\\\\\n        0.00369909661822021,\\\\\\\\\\\\\\\\n        0.021994255483150482,\\\\\\\\\\\\\\\\n        0.03702550381422043,\\\\\\\\\\\\\\\\n        -0.010651740245521069,\\\\\\\\\\\\\\\\n        0.004306978080421686,\\\\\\\\\\\\\\\\n        -0.0028010900132358074,\\\\\\\\\\\\\\\\n        0.028100699186325073,\\\\\\\\\\\\\\\\n        -0.0066176182590425014,\\\\\\\\\\\\\\\\n        -0.0006968186353333294,\\\\\\\\\\\\\\\\n        -0.023444881662726402,\\\\\\\\\\\\\\\\n        0.01819499582052231,\\\\\\\\\\\\\\\\n        0.020557444542646408,\\\\\\\\\\\\\\\\n        -0.01132179144769907,\\\\\\\\\\\\\\\\n        0.00224847043864429,\\\\\\\\\\\\\\\\n        -0.01819499582052231,\\\\\\\\\\\\\\\\n        0.00600628275424242,\\\\\\\\\\\\\\\\n        -0.004003037232905626,\\\\\\\\\\\\\\\\n        -0.040507007390260696,\\\\\\\\\\\\\\\\n        -0.010043858550488949,\\\\\\\\\\\\\\\\n        0.024784982204437256,\\\\\\\\\\\\\\\\n        0.015376636758446693,\\\\\\\\\\\\\\\\n        0.006434563081711531,\\\\\\\\\\\\\\\\n        0.0165371373295784,\\\\\\\\\\\\\\\\n        -0.008717572316527367,\\\\\\\\\\\\\\\\n        -0.01724172756075859,\\\\\\\\\\\\\\\\n        0.0015127958031371236,\\\\\\\\\\\\\\\\n        0.0004852689744438976,\\\\\\\\\\\\\\\\n        -0.02079230733215809,\\\\\\\\\\\\\\\\n        -0.021234402433037758,\\\\\\\\\\\\\\\\n        -0.007722856942564249,\\\\\\\\\\\\\\\\n        0.009422161616384983,\\\\\\\\\\\\\\\\n        -0.015169404447078705,\\\\\\\\\\\\\\\\n        -1.9984559003205504e-06,\\\\\\\\\\\\\\\\n        -0.003313989844173193,\\\\\\\\\\\\\\\\n        -0.010637925006449223,\\\\\\\\\\\\\\\\n        -0.027630973607301712,\\\\\\\\\\\\\\\\n        -0.0002275237930007279,\\\\\\\\\\\\\\\\n        0.0010966042755171657,\\\\\\\\\\\\\\\\n        -0.015418083406984806,\\\\\\\\\\\\\\\\n        0.01943838968873024,\\\\\\\\\\\\\\\\n        0.010734633542597294,\\\\\\\\\\\\\\\\n        -0.0049459440633654594,\\\\\\\\\\\\\\\\n        0.009670840576291084,\\\\\\\\\\\\\\\\n        -0.015915440395474434,\\\\\\\\\\\\\\\\n        0.020502181723713875,\\\\\\\\\\\\\\\\n        0.008627771399915218,\\\\\\\\\\\\\\\\n        0.0032449124846607447,\\\\\\\\\\\\\\\\n        -0.0041895462200045586,\\\\\\\\\\\\\\\\n        -0.017904870212078094,\\\\\\\\\\\\\\\\n        -0.016316089779138565,\\\\\\\\\\\\\\\\n        -0.004538387525826693,\\\\\\\\\\\\\\\\n        0.018070656806230545,\\\\\\\\\\\\\\\\n        -0.013891471549868584,\\\\\\\\\\\\\\\\n        -0.002217385685071349,\\\\\\\\\\\\\\\\n        -0.03520185872912407,\\\\\\\\\\\\\\\\n        0.006279138848185539,\\\\\\\\\\\\\\\\n        -0.004845781717449427,\\\\\\\\\\\\\\\\n        0.0032414584420621395,\\\\\\\\\\\\\\\\n        0.011515208519995213,\\\\\\\\\\\\\\\\n        0.019051555544137955,\\\\\\\\\\\\\\\\n        0.0023261825554072857,\\\\\\\\\\\\\\\\n        0.01363588497042656,\\\\\\\\\\\\\\\\n        -0.012675709091126919,\\\\\\\\\\\\\\\\n        0.01784960925579071,\\\\\\\\\\\\\\\\n        -0.00929782260209322,\\\\\\\\\\\\\\\\n        0.004807789344340563,\\\\\\\\\\\\\\\\n        0.018346965312957764,\\\\\\\\\\\\\\\\n        0.015058880671858788,\\\\\\\\\\\\\\\\n        -0.010451415553689003,\\\\\\\\\\\\\\\\n        -0.0350913368165493,\\\\\\\\\\\\\\\\n        0.0012943383771926165,\\\\\\\\\\\\\\\\n        -0.009470515884459019,\\\\\\\\\\\\\\\\n        -0.022215303033590317,\\\\\\\\\\\\\\\\n        0.013988180086016655,\\\\\\\\\\\\\\\\n        -0.03050459362566471,\\\\\\\\\\\\\\\\n        0.007066621445119381,\\\\\\\\\\\\\\\\n        -0.008365277200937271,\\\\\\\\\\\\\\\\n        -0.02159360609948635,\\\\\\\\\\\\\\\\n        -0.015708208084106445,\\\\\\\\\\\\\\\\n        -0.003524675965309143,\\\\\\\\\\\\\\\\n        -0.011964211240410805,\\\\\\\\\\\\\\\\n        -0.0006061544991098344,\\\\\\\\\\\\\\\\n        0.003291539615020156,\\\\\\\\\\\\\\\\n        0.011729348450899124,\\\\\\\\\\\\\\\\n        -0.009539593942463398,\\\\\\\\\\\\\\\\n        0.018471306189894676,\\\\\\\\\\\\\\\\n        0.005605633836239576,\\\\\\\\\\\\\\\\n        0.011570470407605171,\\\\\\\\\\\\\\\\n        -0.01677200011909008,\\\\\\\\\\\\\\\\n        0.017269358038902283,\\\\\\\\\\\\\\\\n        0.027257954701781273,\\\\\\\\\\\\\\\\n        -0.002272647572681308,\\\\\\\\\\\\\\\\n        -0.015266112983226776,\\\\\\\\\\\\\\\\n        -0.0106310173869133,\\\\\\\\\\\\\\\\n        -0.004755981266498566,\\\\\\\\\\\\\\\\n        0.007646871730685234,\\\\\\\\\\\\\\\\n        -0.010789895430207253,\\\\\\\\\\\\\\\\n        0.016689108684659004,\\\\\\\\\\\\\\\\n        -0.0033934288658201694,\\\\\\\\\\\\\\\\n        -0.005160084459930658,\\\\\\\\\\\\\\\\n        -0.030062498524785042,\\\\\\\\\\\\\\\\n        0.0069111972115933895,\\\\\\\\\\\\\\\\n        -0.00459019560366869,\\\\\\\\\\\\\\\\n        -0.010879695415496826,\\\\\\\\\\\\\\\\n        -0.004196453839540482,\\\\\\\\\\\\\\\\n        0.003654196159914136,\\\\\\\\\\\\\\\\n        0.0015102053293958306,\\\\\\\\\\\\\\\\n        -0.016260826960206032,\\\\\\\\\\\\\\\\n        0.0024021677672863007,\\\\\\\\\\\\\\\\n        -0.17860661447048187,\\\\\\\\\\\\\\\\n        0.008240938186645508,\\\\\\\\\\\\\\\\n        0.02865331992506981,\\\\\\\\\\\\\\\\n        -0.0327427014708519,\\\\\\\\\\\\\\\\n        0.017628561705350876,\\\\\\\\\\\\\\\\n        -0.00531550869345665,\\\\\\\\\\\\\\\\n        0.020902831107378006,\\\\\\\\\\\\\\\\n        0.011494484730064869,\\\\\\\\\\\\\\\\n        -0.03263217955827713,\\\\\\\\\\\\\\\\n        0.017573298886418343,\\\\\\\\\\\\\\\\n        0.0037163658998906612,\\\\\\\\\\\\\\\\n        -0.005363862495869398,\\\\\\\\\\\\\\\\n        -0.03279796615242958,\\\\\\\\\\\\\\\\n        -0.024757351726293564,\\\\\\\\\\\\\\\\n        0.00933236163109541,\\\\\\\\\\\\\\\\n        -0.0052257077768445015,\\\\\\\\\\\\\\\\n        -0.012060919776558876,\\\\\\\\\\\\\\\\n        0.013739501126110554,\\\\\\\\\\\\\\\\n        0.012475384399294853,\\\\\\\\\\\\\\\\n        0.01632990501821041,\\\\\\\\\\\\\\\\n        0.01677200011909008,\\\\\\\\\\\\\\\\n        -0.01418850477784872,\\\\\\\\\\\\\\\\n        0.029454616829752922,\\\\\\\\\\\\\\\\n        0.009574132040143013,\\\\\\\\\\\\\\\\n        -0.0020636883564293385,\\\\\\\\\\\\\\\\n        0.0008250435930676758,\\\\\\\\\\\\\\\\n        -0.014575337991118431,\\\\\\\\\\\\\\\\n        0.007619240786880255,\\\\\\\\\\\\\\\\n        -0.0050668297335505486,\\\\\\\\\\\\\\\\n        -0.038959670811891556,\\\\\\\\\\\\\\\\n        0.0006678924546577036,\\\\\\\\\\\\\\\\n        -0.015321374870836735,\\\\\\\\\\\\\\\\n        0.012945110909640789,\\\\\\\\\\\\\\\\n        -0.00797844398766756,\\\\\\\\\\\\\\\\n        -0.017062125727534294,\\\\\\\\\\\\\\\\n        -0.0010577482171356678,\\\\\\\\\\\\\\\\n        -0.026194162666797638,\\\\\\\\\\\\\\\\n        -0.01067937072366476,\\\\\\\\\\\\\\\\n        -0.004158461466431618,\\\\\\\\\\\\\\\\n        0.010852064937353134,\\\\\\\\\\\\\\\\n        0.031499311327934265,\\\\\\\\\\\\\\\\n        0.019452204927802086,\\\\\\\\\\\\\\\\n        0.02605600841343403,\\\\\\\\\\\\\\\\n        0.015597684308886528,\\\\\\\\\\\\\\\\n        -0.0034055174328386784,\\\\\\\\\\\\\\\\n        0.0027786397840827703,\\\\\\\\\\\\\\\\n        0.030117761343717575,\\\\\\\\\\\\\\\\n        -0.043076686561107635,\\\\\\\\\\\\\\\\n        0.00266984268091619,\\\\\\\\\\\\\\\\n        -0.02524089440703392,\\\\\\\\\\\\\\\\n        0.006565810181200504,\\\\\\\\\\\\\\\\n        -0.013815486803650856,\\\\\\\\\\\\\\\\n        -0.0004710217472165823,\\\\\\\\\\\\\\\\n        -0.025834960862994194,\\\\\\\\\\\\\\\\n        0.012751693837344646,\\\\\\\\\\\\\\\\n        -0.004977029282599688,\\\\\\\\\\\\\\\\n        -0.0034469638485461473,\\\\\\\\\\\\\\\\n        0.015155589208006859,\\\\\\\\\\\\\\\\n        -0.013283590786159039,\\\\\\\\\\\\\\\\n        -0.01032707653939724,\\\\\\\\\\\\\\\\n        -0.00987116526812315,\\\\\\\\\\\\\\\\n        -0.008075151592493057,\\\\\\\\\\\\\\\\n        0.031195368617773056,\\\\\\\\\\\\\\\\n        0.011080020107328892,\\\\\\\\\\\\\\\\n        0.0020291495602577925,\\\\\\\\\\\\\\\\n        0.001252028509043157,\\\\\\\\\\\\\\\\n        0.006393116433173418,\\\\\\\\\\\\\\\\n        0.00681794248521328,\\\\\\\\\\\\\\\\n        -0.0239560529589653,\\\\\\\\\\\\\\\\n        0.018650906160473824,\\\\\\\\\\\\\\\\n        -0.009594855830073357,\\\\\\\\\\\\\\\\n        -0.009138944558799267,\\\\\\\\\\\\\\\\n        -0.009643210098147392,\\\\\\\\\\\\\\\\n        -0.017324620857834816,\\\\\\\\\\\\\\\\n        0.00987116526812315,\\\\\\\\\\\\\\\\n        0.02528234012424946,\\\\\\\\\\\\\\\\n        -0.028059253469109535,\\\\\\\\\\\\\\\\n        -0.004072114825248718,\\\\\\\\\\\\\\\\n        -0.04578452184796333,\\\\\\\\\\\\\\\\n        0.010216552764177322,\\\\\\\\\\\\\\\\n        -0.016081226989626884,\\\\\\\\\\\\\\\\n        0.034068990498781204,\\\\\\\\\\\\\\\\n        -0.007895550690591335,\\\\\\\\\\\\\\\\n        0.004338062833994627,\\\\\\\\\\\\\\\\n        -0.01988048478960991,\\\\\\\\\\\\\\\\n        -0.012275059707462788,\\\\\\\\\\\\\\\\n        0.004358786158263683,\\\\\\\\\\\\\\\\n        0.014685862697660923,\\\\\\\\\\\\\\\\n        -0.013967457227408886,\\\\\\\\\\\\\\\\n        -0.02334817312657833,\\\\\\\\\\\\\\\\n        0.05357645824551582,\\\\\\\\\\\\\\\\n        -0.030587486922740936,\\\\\\\\\\\\\\\\n        -0.011356329545378685,\\\\\\\\\\\\\\\\n        -0.0064034778624773026,\\\\\\\\\\\\\\\\n        0.054819852113723755,\\\\\\\\\\\\\\\\n        0.031333524733781815,\\\\\\\\\\\\\\\\n        0.007239315193146467,\\\\\\\\\\\\\\\\n        -0.013642792589962482,\\\\\\\\\\\\\\\\n        0.02327909506857395,\\\\\\\\\\\\\\\\n        -0.003992675803601742,\\\\\\\\\\\\\\\\n        -0.01758711412549019,\\\\\\\\\\\\\\\\n        -0.0006514865672215819,\\\\\\\\\\\\\\\\n        -0.01883050799369812,\\\\\\\\\\\\\\\\n        -0.0022225663997232914,\\\\\\\\\\\\\\\\n        0.02274029143154621,\\\\\\\\\\\\\\\\n        -0.0004071251314599067,\\\\\\\\\\\\\\\\n        0.0086899409070611,\\\\\\\\\\\\\\\\n        -0.007702133618295193,\\\\\\\\\\\\\\\\n        0.014001995325088501,\\\\\\\\\\\\\\\\n        -0.011010942980647087,\\\\\\\\\\\\\\\\n        -0.007135699037462473,\\\\\\\\\\\\\\\\n        -0.00887645035982132,\\\\\\\\\\\\\\\\n        0.00456256465986371,\\\\\\\\\\\\\\\\n        -0.009926427155733109,\\\\\\\\\\\\\\\\n        -0.017531853169202805,\\\\\\\\\\\\\\\\n        0.02327909506857395,\\\\\\\\\\\\\\\\n        0.0034884102642536163,\\\\\\\\\\\\\\\\n        0.0008807372651062906,\\\\\\\\\\\\\\\\n        -0.0023210018407553434,\\\\\\\\\\\\\\\\n        0.025738252326846123,\\\\\\\\\\\\\\\\n        0.05584219843149185,\\\\\\\\\\\\\\\\n        -0.015597684308886528,\\\\\\\\\\\\\\\\n        -0.018678538501262665,\\\\\\\\\\\\\\\\n        -0.00960176344960928,\\\\\\\\\\\\\\\\n        -0.018637090921401978,\\\\\\\\\\\\\\\\n        -0.024218548089265823,\\\\\\\\\\\\\\\\n        -0.10753975063562393,\\\\\\\\\\\\\\\\n        -0.035422906279563904,\\\\\\\\\\\\\\\\n        0.015749655663967133,\\\\\\\\\\\\\\\\n        0.01554242242127657,\\\\\\\\\\\\\\\\n        0.0005716157611459494,\\\\\\\\\\\\\\\\n        0.018885770812630653,\\\\\\\\\\\\\\\\n        0.006517455913126469,\\\\\\\\\\\\\\\\n        0.0006303315749391913,\\\\\\\\\\\\\\\\n        -0.015500975772738457,\\\\\\\\\\\\\\\\n        0.02879147417843342,\\\\\\\\\\\\\\\\n        -0.005578002892434597,\\\\\\\\\\\\\\\\n        -0.011687901802361012,\\\\\\\\\\\\\\\\n        -0.0016250465996563435,\\\\\\\\\\\\\\\\n        -0.015473345294594765,\\\\\\\\\\\\\\\\n        0.0021673045121133327,\\\\\\\\\\\\\\\\n        -0.024577749893069267,\\\\\\\\\\\\\\\\n        -0.0019393488764762878,\\\\\\\\\\\\\\\\n        -0.002364175161346793,\\\\\\\\\\\\\\\\n        0.012302691116929054,\\\\\\\\\\\\\\\\n        0.015915440395474434,\\\\\\\\\\\\\\\\n        0.009967873804271221,\\\\\\\\\\\\\\\\n        -0.016813447698950768,\\\\\\\\\\\\\\\\n        0.024660643190145493,\\\\\\\\\\\\\\\\n        -0.0046972655691206455,\\\\\\\\\\\\\\\\n        -0.026746781542897224,\\\\\\\\\\\\\\\\n        0.0015110688982531428,\\\\\\\\\\\\\\\\n        -0.01128725241869688,\\\\\\\\\\\\\\\\n        0.007142606656998396,\\\\\\\\\\\\\\\\n        0.010126751847565174,\\\\\\\\\\\\\\\\n        0.01162573229521513,\\\\\\\\\\\\\\\\n        0.0008539697737433016,\\\\\\\\\\\\\\\\n        -0.018871955573558807,\\\\\\\\\\\\\\\\n        0.007405100855976343,\\\\\\\\\\\\\\\\n        -0.011080020107328892,\\\\\\\\\\\\\\\\n        0.0010689733317121863,\\\\\\\\\\\\\\\\n        0.013850024901330471,\\\\\\\\\\\\\\\\n        -0.014202320016920567,\\\\\\\\\\\\\\\\n        -0.03359926491975784,\\\\\\\\\\\\\\\\n        0.0038096203934401274,\\\\\\\\\\\\\\\\n        -0.017158834263682365,\\\\\\\\\\\\\\\\n        -0.0019894300494343042,\\\\\\\\\\\\\\\\n        0.008047521114349365,\\\\\\\\\\\\\\\\n        0.015362821519374847,\\\\\\\\\\\\\\\\n        0.004887228365987539,\\\\\\\\\\\\\\\\n        0.015500975772738457,\\\\\\\\\\\\\\\\n        -0.008261661045253277,\\\\\\\\\\\\\\\\n        -0.029758557677268982,\\\\\\\\\\\\\\\\n        0.025890221819281578,\\\\\\\\\\\\\\\\n        0.0073498389683663845,\\\\\\\\\\\\\\\\n        -0.012212890200316906,\\\\\\\\\\\\\\\\n        -0.0249783992767334,\\\\\\\\\\\\\\\\n        -0.0045073023065924644,\\\\\\\\\\\\\\\\n        -0.026194162666797638,\\\\\\\\\\\\\\\\n        -0.012406307272613049,\\\\\\\\\\\\\\\\n        0.014506260864436626,\\\\\\\\\\\\\\\\n        -0.027105985209345818,\\\\\\\\\\\\\\\\n        0.005567640997469425,\\\\\\\\\\\\\\\\n        -0.008738295175135136,\\\\\\\\\\\\\\\\n        0.013449376448988914,\\\\\\\\\\\\\\\\n        0.0034210598096251488,\\\\\\\\\\\\\\\\n        0.00815113727003336,\\\\\\\\\\\\\\\\n        0.00398231390863657,\\\\\\\\\\\\\\\\n        -0.015210851095616817,\\\\\\\\\\\\\\\\n        0.0428556390106678,\\\\\\\\\\\\\\\\n        0.041999079287052155,\\\\\\\\\\\\\\\\n        -0.004465856123715639,\\\\\\\\\\\\\\\\n        -0.008137322030961514,\\\\\\\\\\\\\\\\n        -0.015666762366890907,\\\\\\\\\\\\\\\\n        0.008821188472211361,\\\\\\\\\\\\\\\\n        -0.02416328527033329,\\\\\\\\\\\\\\\\n        -0.02318238653242588,\\\\\\\\\\\\\\\\n        0.02072322927415371,\\\\\\\\\\\\\\\\n        -0.008441261947154999,\\\\\\\\\\\\\\\\n        0.02848753333091736,\\\\\\\\\\\\\\\\n        -0.02713361568748951,\\\\\\\\\\\\\\\\n        -0.0015939617296680808,\\\\\\\\\\\\\\\\n        -0.008765926584601402,\\\\\\\\\\\\\\\\n        -0.010948773473501205,\\\\\\\\\\\\\\\\n        -0.0033709786366671324,\\\\\\\\\\\\\\\\n        0.01677200011909008,\\\\\\\\\\\\\\\\n        -0.03600315749645233,\\\\\\\\\\\\\\\\n        -0.012178351171314716,\\\\\\\\\\\\\\\\n        -0.008931712247431278,\\\\\\\\\\\\\\\\n        0.006493278779089451,\\\\\\\\\\\\\\\\n        -0.0023261825554072857,\\\\\\\\\\\\\\\\n        0.012123089283704758,\\\\\\\\\\\\\\\\n        -0.01819499582052231,\\\\\\\\\\\\\\\\n        -0.023776452988386154,\\\\\\\\\\\\\\\\n        0.010492862202227116,\\\\\\\\\\\\\\\\n        -0.031001951545476913,\\\\\\\\\\\\\\\\n        -0.01943838968873024,\\\\\\\\\\\\\\\\n        0.03627946972846985,\\\\\\\\\\\\\\\\n        0.009691563434898853,\\\\\\\\\\\\\\\\n        -0.008123505860567093,\\\\\\\\\\\\\\\\n        -0.01923115737736225,\\\\\\\\\\\\\\\\n        0.01728317327797413,\\\\\\\\\\\\\\\\n        -0.014015811495482922,\\\\\\\\\\\\\\\\n        -0.004731804132461548,\\\\\\\\\\\\\\\\n        0.016661476343870163,\\\\\\\\\\\\\\\\n        0.02423236332833767,\\\\\\\\\\\\\\\\n        -0.0003350255428813398,\\\\\\\\\\\\\\\\n        -0.007619240786880255,\\\\\\\\\\\\\\\\n        -0.04067279398441315,\\\\\\\\\\\\\\\\n        0.017131203785538673,\\\\\\\\\\\\\\\\n        0.02018442563712597,\\\\\\\\\\\\\\\\n        -0.0024505220353603363,\\\\\\\\\\\\\\\\n        0.010472138412296772,\\\\\\\\\\\\\\\\n        0.0069802748039364815,\\\\\\\\\\\\\\\\n        0.032853227108716965,\\\\\\\\\\\\\\\\n        -0.002194935455918312,\\\\\\\\\\\\\\\\n        -0.015639130026102066,\\\\\\\\\\\\\\\\n        -0.014478630386292934,\\\\\\\\\\\\\\\\n        -0.02318238653242588,\\\\\\\\\\\\\\\\n        0.001557696145027876,\\\\\\\\\\\\\\\\n        -0.022906076163053513,\\\\\\\\\\\\\\\\n        -0.008109690621495247,\\\\\\\\\\\\\\\\n        -0.004970121197402477,\\\\\\\\\\\\\\\\n        -0.011694809421896935,\\\\\\\\\\\\\\\\n        0.034704502671957016,\\\\\\\\\\\\\\\\n        -0.011121466755867004,\\\\\\\\\\\\\\\\n        0.012371768243610859,\\\\\\\\\\\\\\\\n        0.01693778671324253,\\\\\\\\\\\\\\\\n        0.009256375953555107,\\\\\\\\\\\\\\\\n        0.01192967314273119,\\\\\\\\\\\\\\\\n        -0.004479671362787485,\\\\\\\\\\\\\\\\n        0.01285530999302864,\\\\\\\\\\\\\\\\n        0.029482249170541763,\\\\\\\\\\\\\\\\n        -0.016647661104798317,\\\\\\\\\\\\\\\\n        -0.0008716708398424089,\\\\\\\\\\\\\\\\n        -0.0017519764369353652,\\\\\\\\\\\\\\\\n        -0.023210017010569572,\\\\\\\\\\\\\\\\n        -0.016288459300994873,\\\\\\\\\\\\\\\\n        0.0030100492294877768,\\\\\\\\\\\\\\\\n        -0.012613539583981037,\\\\\\\\\\\\\\\\n        0.005868128035217524,\\\\\\\\\\\\\\\\n        0.021607421338558197,\\\\\\\\\\\\\\\\n        0.0037509046960622072,\\\\\\\\\\\\\\\\n        -0.0004882910870946944,\\\\\\\\\\\\\\\\n        -0.006690149195492268,\\\\\\\\\\\\\\\\n        0.018498936668038368,\\\\\\\\\\\\\\\\n        0.019079187884926796,\\\\\\\\\\\\\\\\n        -0.004034121986478567,\\\\\\\\\\\\\\\\n        0.009933334775269032,\\\\\\\\\\\\\\\\n        -0.00422753905877471,\\\\\\\\\\\\\\\\n        -0.007101160008460283,\\\\\\\\\\\\\\\\n        -0.03627946972846985,\\\\\\\\\\\\\\\\n        0.01348391454666853,\\\\\\\\\\\\\\\\n        -0.008517247624695301,\\\\\\\\\\\\\\\\n        -0.01376713253557682,\\\\\\\\\\\\\\\\n        0.008945527486503124,\\\\\\\\\\\\\\\\n        0.01649569161236286,\\\\\\\\\\\\\\\\n        -7.420427573379129e-05,\\\\\\\\\\\\\\\\n        0.0249783992767334,\\\\\\\\\\\\\\\\n        0.011805333197116852,\\\\\\\\\\\\\\\\n        0.008821188472211361,\\\\\\\\\\\\\\\\n        -0.00564362620934844,\\\\\\\\\\\\\\\\n        0.002845990238711238,\\\\\\\\\\\\\\\\n        -0.02240872010588646,\\\\\\\\\\\\\\\\n        -0.014299028553068638,\\\\\\\\\\\\\\\\n        -0.014685862697660923,\\\\\\\\\\\\\\\\n        0.003933959640562534,\\\\\\\\\\\\\\\\n        -0.04448586702346802,\\\\\\\\\\\\\\\\n        0.02088901586830616,\\\\\\\\\\\\\\\\n        0.013304313644766808,\\\\\\\\\\\\\\\\n        0.007418916095048189,\\\\\\\\\\\\\\\\n        -0.019286420196294785,\\\\\\\\\\\\\\\\n        0.014699677936732769,\\\\\\\\\\\\\\\\n        0.001908264122903347,\\\\\\\\\\\\\\\\n        -0.003588572610169649,\\\\\\\\\\\\\\\\n        0.016012148931622505,\\\\\\\\\\\\\\\\n        -0.0005072873900644481,\\\\\\\\\\\\\\\\n        -0.020129164680838585,\\\\\\\\\\\\\\\\n        -0.007971535436809063,\\\\\\\\\\\\\\\\n        0.02170412987470627,\\\\\\\\\\\\\\\\n        0.01586017943918705,\\\\\\\\\\\\\\\\n        0.010907326824963093,\\\\\\\\\\\\\\\\n        0.022726476192474365,\\\\\\\\\\\\\\\\n        0.011632639914751053,\\\\\\\\\\\\\\\\n        0.001780470833182335,\\\\\\\\\\\\\\\\n        0.010548124089837074,\\\\\\\\\\\\\\\\n        -0.005353501066565514,\\\\\\\\\\\\\\\\n        0.021621236577630043,\\\\\\\\\\\\\\\\n        0.024881690740585327,\\\\\\\\\\\\\\\\n        -0.011266529560089111,\\\\\\\\\\\\\\\\n        -0.019797591492533684,\\\\\\\\\\\\\\\\n        0.016053594648838043,\\\\\\\\\\\\\\\\n        0.035616323351860046,\\\\\\\\\\\\\\\\n        -0.01116982102394104,\\\\\\\\\\\\\\\\n        -0.013725685887038708,\\\\\\\\\\\\\\\\n        0.018581829965114594,\\\\\\\\\\\\\\\\n        -0.00985044240951538,\\\\\\\\\\\\\\\\n        -0.00011246669600950554,\\\\\\\\\\\\\\\\n        -0.0028736211825162172,\\\\\\\\\\\\\\\\n        -0.0039719524793326855,\\\\\\\\\\\\\\\\n        -0.001913444953970611,\\\\\\\\\\\\\\\\n        -0.01988048478960991,\\\\\\\\\\\\\\\\n        0.008869542740285397,\\\\\\\\\\\\\\\\n        0.03492555022239685,\\\\\\\\\\\\\\\\n        -0.029924344271421432,\\\\\\\\\\\\\\\\n        0.01866472326219082,\\\\\\\\\\\\\\\\n        0.03277033567428589,\\\\\\\\\\\\\\\\n        0.010534308850765228,\\\\\\\\\\\\\\\\n        -0.0067903115414083,\\\\\\\\\\\\\\\\n        0.006406932137906551,\\\\\\\\\\\\\\\\n        -0.011238898150622845,\\\\\\\\\\\\\\\\n        -0.01409179624170065,\\\\\\\\\\\\\\\\n        -0.017020680010318756,\\\\\\\\\\\\\\\\n        0.01934168115258217,\\\\\\\\\\\\\\\\n        -0.011142189614474773,\\\\\\\\\\\\\\\\n        -0.022602135315537453,\\\\\\\\\\\\\\\\n        0.0005897486116737127,\\\\\\\\\\\\\\\\n        0.022187670692801476,\\\\\\\\\\\\\\\\n        0.02119295671582222,\\\\\\\\\\\\\\\\n        0.020999539643526077,\\\\\\\\\\\\\\\\n        0.02102717012166977,\\\\\\\\\\\\\\\\n        0.0017070760950446129,\\\\\\\\\\\\\\\\n        -0.013338852673768997,\\\\\\\\\\\\\\\\n        0.02432907186448574,\\\\\\\\\\\\\\\\n        -0.02327909506857395,\\\\\\\\\\\\\\\\n        -0.010195828974246979,\\\\\\\\\\\\\\\\n        -0.017573298886418343,\\\\\\\\\\\\\\\\n        0.007909365929663181,\\\\\\\\\\\\\\\\n        0.008544878102838993,\\\\\\\\\\\\\\\\n        -0.001028390252031386,\\\\\\\\\\\\\\\\n        0.013449376448988914,\\\\\\\\\\\\\\\\n        -0.009456700645387173,\\\\\\\\\\\\\\\\n        0.02898489125072956,\\\\\\\\\\\\\\\\n        0.0012813863577321172,\\\\\\\\\\\\\\\\n        0.00696991290897131,\\\\\\\\\\\\\\\\n        -0.04570163041353226,\\\\\\\\\\\\\\\\n        0.01670292392373085,\\\\\\\\\\\\\\\\n        0.006165160797536373,\\\\\\\\\\\\\\\\n        -0.0028960714116692543,\\\\\\\\\\\\\\\\n        -0.0239560529589653,\\\\\\\\\\\\\\\\n        -0.01116982102394104,\\\\\\\\\\\\\\\\n        -0.007197868544608355,\\\\\\\\\\\\\\\\n        -0.008489616215229034,\\\\\\\\\\\\\\\\n        -0.03312953561544418,\\\\\\\\\\\\\\\\n        0.0008276340086013079,\\\\\\\\\\\\\\\\n        0.011798425577580929,\\\\\\\\\\\\\\\\n        -0.01936931163072586,\\\\\\\\\\\\\\\\n        0.07836143672466278,\\\\\\\\\\\\\\\\n        0.012136905454099178,\\\\\\\\\\\\\\\\n        0.005968290381133556,\\\\\\\\\\\\\\\\n        -0.02362448163330555,\\\\\\\\\\\\\\\\n        0.009007696993649006,\\\\\\\\\\\\\\\\n        0.0003779830876737833,\\\\\\\\\\\\\\\\n        0.011211267672479153,\\\\\\\\\\\\\\\\n        -0.0032984474673867226,\\\\\\\\\\\\\\\\n        -0.02372119016945362,\\\\\\\\\\\\\\\\n        -0.030449332669377327,\\\\\\\\\\\\\\\\n        -0.011149098165333271,\\\\\\\\\\\\\\\\n        0.0016751277726143599,\\\\\\\\\\\\\\\\n        0.02028113417327404,\\\\\\\\\\\\\\\\n        -0.027893466874957085,\\\\\\\\\\\\\\\\n        0.004503848496824503,\\\\\\\\\\\\\\\\n        0.011639547534286976,\\\\\\\\\\\\\\\\n        -0.004735257942229509,\\\\\\\\\\\\\\\\n        0.0261527169495821,\\\\\\\\\\\\\\\\n        0.004255170002579689,\\\\\\\\\\\\\\\\n        -0.014975987374782562,\\\\\\\\\\\\\\\\n        0.01572202332317829,\\\\\\\\\\\\\\\\n        -0.013856933452188969,\\\\\\\\\\\\\\\\n        0.022008070722222328,\\\\\\\\\\\\\\\\n        0.009525777772068977,\\\\\\\\\\\\\\\\n        -0.007156421896070242,\\\\\\\\\\\\\\\\n        -0.012876033782958984,\\\\\\\\\\\\\\\\n        0.018982479348778725,\\\\\\\\\\\\\\\\n        -0.0005068556638434529,\\\\\\\\\\\\\\\\n        -0.01896866224706173,\\\\\\\\\\\\\\\\n        -0.0367768257856369,\\\\\\\\\\\\\\\\n        0.007080436684191227,\\\\\\\\\\\\\\\\n        0.009670840576291084,\\\\\\\\\\\\\\\\n        -0.0055123791098594666,\\\\\\\\\\\\\\\\n        -0.01744895987212658,\\\\\\\\\\\\\\\\n        -0.01983903907239437,\\\\\\\\\\\\\\\\n        -0.020405473187565804,\\\\\\\\\\\\\\\\n        -0.010403061285614967,\\\\\\\\\\\\\\\\n        0.0023607213515788317,\\\\\\\\\\\\\\\\n        0.019079187884926796,\\\\\\\\\\\\\\\\n        0.047027915716171265,\\\\\\\\\\\\\\\\n        -0.0021690314169973135,\\\\\\\\\\\\\\\\n        0.014975987374782562,\\\\\\\\\\\\\\\\n        -0.018471306189894676,\\\\\\\\\\\\\\\\n        -0.021469267085194588,\\\\\\\\\\\\\\\\n        -0.026719151064753532,\\\\\\\\\\\\\\\\n        -0.0006329219904728234,\\\\\\\\\\\\\\\\n        0.0009714014013297856,\\\\\\\\\\\\\\\\n        -0.0035505800042301416,\\\\\\\\\\\\\\\\n        -0.03522948920726776\\\\\\\\\\\\\\\\n      ],\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""index\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0,\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""embedding\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""ada\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""list\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""usage\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""prompt_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 12,\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""total_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 12\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""children\\\\\\\\\\\\\\\"": []}\\\\\\\""]}\\\""]}\"", \""{\\\""attributes\\\"": \\\""{\\\\\\\""flow_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""framework\\\\\\\"":\\\\\\\""promptflow\\\\\\\"",\\\\\\\""function\\\\\\\"":\\\\\\\""generate_prompt_context\\\\\\\"",\\\\\\\""inputs\\\\\\\"":\\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""search_result\\\\\\\\\\\\\\\"": [\\\\\\\\n    [\\\\\\\\n      {\\\\\\\\n        \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf3\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n          \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 3,\\\\\\\\n          \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n            \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 551,\\\\\\\\n            \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 2502,\\\\\\\\n            \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 35\\\\\\\\n          },\\\\\\\\n          \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n            \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n            \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n            \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.3891408443450928\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfAttention Visualizations\\\\\\\\\\\\\\\\nInput-Input Layer5\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\\\\\\\\\nthe verb \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019, completing the phrase \\\\\\\\\\\\\\\\u2018making...more difficult\\\\\\\\\\\\\\\\u2019. Attentions here shown only for\\\\\\\\\\\\\\\\nthe word \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\\\\\\\\\n13\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf12\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""2ab3047247294a730f42d2e9fb421bfa7bcf724d98adf2714c6566d1d3199abd\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n          \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 12,\\\\\\\\n          \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n            \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 254,\\\\\\\\n            \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 833,\\\\\\\\n            \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 73\\\\\\\\n          },\\\\\\\\n          \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n            \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n            \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n            \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.39398106932640076\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf0\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n          \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 0,\\\\\\\\n          \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n            \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 668,\\\\\\\\n            \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 2874,\\\\\\\\n            \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 50\\\\\\\\n          },\\\\\\\\n          \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n            \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n            \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n            \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.42212480306625366\\\\\\\\n      }\\\\\\\\n    ],\\\\\\\\n    [\\\\\\\\n      {\\\\\\\\n        \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf3\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n          \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 3,\\\\\\\\n          \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n            \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 551,\\\\\\\\n            \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 2502,\\\\\\\\n            \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 35\\\\\\\\n          },\\\\\\\\n          \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n            \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n            \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n            \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.403403103351593\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfAttention Visualizations\\\\\\\\\\\\\\\\nInput-Input Layer5\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\\\\\\\\\nthe verb \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019, completing the phrase \\\\\\\\\\\\\\\\u2018making...more difficult\\\\\\\\\\\\\\\\u2019. Attentions here shown only for\\\\\\\\\\\\\\\\nthe word \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\\\\\\\\\n13\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf12\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""2ab3047247294a730f42d2e9fb421bfa7bcf724d98adf2714c6566d1d3199abd\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n          \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 12,\\\\\\\\n          \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n            \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 254,\\\\\\\\n            \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 833,\\\\\\\\n            \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 73\\\\\\\\n          },\\\\\\\\n          \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n            \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n            \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n            \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.42596590518951416\\\\\\\\n      },\\\\\\\\n      {\\\\\\\\n        \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf0\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n          \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 0,\\\\\\\\n          \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n            \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 668,\\\\\\\\n            \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 2874,\\\\\\\\n            \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 50\\\\\\\\n          },\\\\\\\\n          \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n            \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n            \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n            \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n          }\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.4357953667640686\\\\\\\\n      }\\\\\\\\n    ]\\\\\\\\n  ]\\\\\\\\n}\\\\\\\"",\\\\\\\""line_run_id\\\\\\\"":\\\\\\\""d13da436-d3ad-4905-9aae-2dfc0cb2b538\\\\\\\"",\\\\\\\""node_name\\\\\\\"":\\\\\\\""generate_prompt_context\\\\\\\"",\\\\\\\""output\\\\\\\"":\\\\\\\""\\\\\\\\\\\\\\\""Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfAttention Visualizations\\\\\\\\\\\\\\\\nInput-Input Layer5\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\\\\\\\\\nthe verb \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019, completing the phrase \\\\\\\\\\\\\\\\u2018making...more difficult\\\\\\\\\\\\\\\\u2019. Attentions here shown only for\\\\\\\\\\\\\\\\nthe word \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\\\\\\\\\n13\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\""\\\\\\\"",\\\\\\\""root_run_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""span_type\\\\\\\"":\\\\\\\""Tool\\\\\\\""}\\\"", \\\""context\\\"": \\\""{\\\\\\\""span_id\\\\\\\"":\\\\\\\""0x950ff8d24b8480aa\\\\\\\"",\\\\\\\""trace_id\\\\\\\"":\\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\"",\\\\\\\""trace_state\\\\\\\"":\\\\\\\""[]\\\\\\\""}\\\"", \\\""end_time\\\"": \\\""2024-02-05T15:56:05.761406\\\"", \\\""events\\\"": \\\""[]\\\"", \\\""kind\\\"": \\\""SpanKind.INTERNAL\\\"", \\\""links\\\"": \\\""[]\\\"", \\\""name\\\"": \\\""generate_prompt_context\\\"", \\\""parent_id\\\"": \\\""0x4d0bbb09563f095d\\\"", \\\""resource\\\"": \\\""{\\\\\\\""attributes\\\\\\\"":{\\\\\\\""service.name\\\\\\\"":\\\\\\\""promptflow\\\\\\\""},\\\\\\\""schema_url\\\\\\\"":\\\\\\\""\\\\\\\""}\\\"", \\\""start_time\\\"": \\\""2024-02-05T15:56:05.754652\\\"", \\\""status\\\"": \\\""OK\\\"", \\\""trace_id\\\"": \\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\"", \\\""span_id\\\"": \\\""0x950ff8d24b8480aa\\\"", \\\""span_type\\\"": \\\""Tool\\\"", \\\""framework\\\"": \\\""promptflow\\\"", \\\""input\\\"": \\\""{\\\\n  \\\\\\\""search_result\\\\\\\"": [\\\\n    [\\\\n      {\\\\n        \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\n Multi-Head Attention\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\nattention layers running in parallel.\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\nquery with the corresponding key.\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\nquery with all keys, divide each by\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\nvalues.\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\nthe matrix of outputs as:\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\n\\\\\\\\u221adk)V (1)\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\nof1\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\nmatrix multiplication code.\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\u221adk.\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\u00b7k=Pdk\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\n4\\\\\\\"",\\\\n        \\\\\\\""metadata\\\\\\\"": {\\\\n          \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf3\\\\\\\"",\\\\n          \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": null,\\\\n          \\\\\\\""page_number\\\\\\\"": 3,\\\\n          \\\\\\\""stats\\\\\\\"": {\\\\n            \\\\\\\""tiktokens\\\\\\\"": 551,\\\\n            \\\\\\\""chars\\\\\\\"": 2502,\\\\n            \\\\\\\""lines\\\\\\\"": 35\\\\n          },\\\\n          \\\\\\\""source\\\\\\\"": {\\\\n            \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n            \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n            \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n          }\\\\n        },\\\\n        \\\\\\\""score\\\\\\\"": 0.3891408443450928\\\\n      },\\\\n      {\\\\n        \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfAttention Visualizations\\\\\\\\nInput-Input Layer5\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\nthe verb \\\\\\\\u2018making\\\\\\\\u2019, completing the phrase \\\\\\\\u2018making...more difficult\\\\\\\\u2019. Attentions here shown only for\\\\\\\\nthe word \\\\\\\\u2018making\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\n13\\\\\\\"",\\\\n        \\\\\\\""metadata\\\\\\\"": {\\\\n          \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf12\\\\\\\"",\\\\n          \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""2ab3047247294a730f42d2e9fb421bfa7bcf724d98adf2714c6566d1d3199abd\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": null,\\\\n          \\\\\\\""page_number\\\\\\\"": 12,\\\\n          \\\\\\\""stats\\\\\\\"": {\\\\n            \\\\\\\""tiktokens\\\\\\\"": 254,\\\\n            \\\\\\\""chars\\\\\\\"": 833,\\\\n            \\\\\\\""lines\\\\\\\"": 73\\\\n          },\\\\n          \\\\\\\""source\\\\\\\"": {\\\\n            \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n            \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n            \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n          }\\\\n        },\\\\n        \\\\\\\""score\\\\\\\"": 0.39398106932640076\\\\n      },\\\\n      {\\\\n        \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\nscholarly works.\\\\\\\\nAttention Is All You Need\\\\\\\\nAshish Vaswani\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nusz@google.com\\\\\\\\nLlion Jones\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\u2217 \\\\\\\\u2020\\\\\\\\nUniversity of Toronto\\\\\\\\naidan@cs.toronto.edu\\\\\\\\u0141ukasz Kaiser\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nlukaszkaiser@google.com\\\\\\\\nIllia Polosukhin\\\\\\\\u2217 \\\\\\\\u2021\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\nAbstract\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\nlarge and limited training data.\\\\\\\\n\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\nour research.\\\\\\\\n\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\n\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\"",\\\\n        \\\\\\\""metadata\\\\\\\"": {\\\\n          \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf0\\\\\\\"",\\\\n          \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": null,\\\\n          \\\\\\\""page_number\\\\\\\"": 0,\\\\n          \\\\\\\""stats\\\\\\\"": {\\\\n            \\\\\\\""tiktokens\\\\\\\"": 668,\\\\n            \\\\\\\""chars\\\\\\\"": 2874,\\\\n            \\\\\\\""lines\\\\\\\"": 50\\\\n          },\\\\n          \\\\\\\""source\\\\\\\"": {\\\\n            \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n            \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n            \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n          }\\\\n        },\\\\n        \\\\\\\""score\\\\\\\"": 0.42212480306625366\\\\n      }\\\\n    ],\\\\n    [\\\\n      {\\\\n        \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\n Multi-Head Attention\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\nattention layers running in parallel.\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\nquery with the corresponding key.\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\nquery with all keys, divide each by\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\nvalues.\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\nthe matrix of outputs as:\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\n\\\\\\\\u221adk)V (1)\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\nof1\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\nmatrix multiplication code.\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\u221adk.\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\u00b7k=Pdk\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\n4\\\\\\\"",\\\\n        \\\\\\\""metadata\\\\\\\"": {\\\\n          \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf3\\\\\\\"",\\\\n          \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": null,\\\\n          \\\\\\\""page_number\\\\\\\"": 3,\\\\n          \\\\\\\""stats\\\\\\\"": {\\\\n            \\\\\\\""tiktokens\\\\\\\"": 551,\\\\n            \\\\\\\""chars\\\\\\\"": 2502,\\\\n            \\\\\\\""lines\\\\\\\"": 35\\\\n          },\\\\n          \\\\\\\""source\\\\\\\"": {\\\\n            \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n            \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n            \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n          }\\\\n        },\\\\n        \\\\\\\""score\\\\\\\"": 0.403403103351593\\\\n      },\\\\n      {\\\\n        \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfAttention Visualizations\\\\\\\\nInput-Input Layer5\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\nthe verb \\\\\\\\u2018making\\\\\\\\u2019, completing the phrase \\\\\\\\u2018making...more difficult\\\\\\\\u2019. Attentions here shown only for\\\\\\\\nthe word \\\\\\\\u2018making\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\n13\\\\\\\"",\\\\n        \\\\\\\""metadata\\\\\\\"": {\\\\n          \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf12\\\\\\\"",\\\\n          \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""2ab3047247294a730f42d2e9fb421bfa7bcf724d98adf2714c6566d1d3199abd\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": null,\\\\n          \\\\\\\""page_number\\\\\\\"": 12,\\\\n          \\\\\\\""stats\\\\\\\"": {\\\\n            \\\\\\\""tiktokens\\\\\\\"": 254,\\\\n            \\\\\\\""chars\\\\\\\"": 833,\\\\n            \\\\\\\""lines\\\\\\\"": 73\\\\n          },\\\\n          \\\\\\\""source\\\\\\\"": {\\\\n            \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n            \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n            \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n          }\\\\n        },\\\\n        \\\\\\\""score\\\\\\\"": 0.42596590518951416\\\\n      },\\\\n      {\\\\n        \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\nscholarly works.\\\\\\\\nAttention Is All You Need\\\\\\\\nAshish Vaswani\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nusz@google.com\\\\\\\\nLlion Jones\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\u2217 \\\\\\\\u2020\\\\\\\\nUniversity of Toronto\\\\\\\\naidan@cs.toronto.edu\\\\\\\\u0141ukasz Kaiser\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nlukaszkaiser@google.com\\\\\\\\nIllia Polosukhin\\\\\\\\u2217 \\\\\\\\u2021\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\nAbstract\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\nlarge and limited training data.\\\\\\\\n\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\nour research.\\\\\\\\n\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\n\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\"",\\\\n        \\\\\\\""metadata\\\\\\\"": {\\\\n          \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf0\\\\\\\"",\\\\n          \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": null,\\\\n          \\\\\\\""page_number\\\\\\\"": 0,\\\\n          \\\\\\\""stats\\\\\\\"": {\\\\n            \\\\\\\""tiktokens\\\\\\\"": 668,\\\\n            \\\\\\\""chars\\\\\\\"": 2874,\\\\n            \\\\\\\""lines\\\\\\\"": 50\\\\n          },\\\\n          \\\\\\\""source\\\\\\\"": {\\\\n            \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n            \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n            \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n          }\\\\n        },\\\\n        \\\\\\\""score\\\\\\\"": 0.4357953667640686\\\\n      }\\\\n    ]\\\\n  ]\\\\n}\\\"", \\\""output\\\"": \\\""\\\\\\\""Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\n Multi-Head Attention\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\nattention layers running in parallel.\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\nquery with the corresponding key.\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\nquery with all keys, divide each by\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\nvalues.\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\nthe matrix of outputs as:\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\n\\\\\\\\u221adk)V (1)\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\nof1\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\nmatrix multiplication code.\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\u221adk.\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\u00b7k=Pdk\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\n4\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfAttention Visualizations\\\\\\\\nInput-Input Layer5\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\nthe verb \\\\\\\\u2018making\\\\\\\\u2019, completing the phrase \\\\\\\\u2018making...more difficult\\\\\\\\u2019. Attentions here shown only for\\\\\\\\nthe word \\\\\\\\u2018making\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\n13\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\nscholarly works.\\\\\\\\nAttention Is All You Need\\\\\\\\nAshish Vaswani\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nusz@google.com\\\\\\\\nLlion Jones\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\u2217 \\\\\\\\u2020\\\\\\\\nUniversity of Toronto\\\\\\\\naidan@cs.toronto.edu\\\\\\\\u0141ukasz Kaiser\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nlukaszkaiser@google.com\\\\\\\\nIllia Polosukhin\\\\\\\\u2217 \\\\\\\\u2021\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\nAbstract\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\nlarge and limited training data.\\\\\\\\n\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\nour research.\\\\\\\\n\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\n\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\""\\\"", \\\""children\\\"": []}\"", \""{\\\""attributes\\\"": \\\""{\\\\\\\""flow_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""framework\\\\\\\"":\\\\\\\""promptflow\\\\\\\"",\\\\\\\""function\\\\\\\"":\\\\\\\""render_template_jinja2\\\\\\\"",\\\\\\\""inputs\\\\\\\"":\\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""template\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""system: \\\\\\\\\\\\\\\\nYou are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"".\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n user: \\\\\\\\\\\\\\\\n {{contexts}} \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n chat history: \\\\\\\\\\\\\\\\n{% for item in chat_history %} user: \\\\\\\\\\\\\\\\n{{ item.inputs.question }} \\\\\\\\\\\\\\\\nassistant: \\\\\\\\\\\\\\\\n{{ item.outputs.output }} \\\\\\\\\\\\\\\\n{% endfor %}\\\\\\\\\\\\\\\\nuser: {{question}} \\\\\\\\\\\\\\\\nassistant:\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""chat_history\\\\\\\\\\\\\\\"": [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""inputs\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""question\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""how to calculate Attention?\\\\\\\\\\\\\\\""\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""outputs\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""output\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""To calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\\\\\\\\\\\\\\\""\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  ],\\\\\\\\n  \\\\\\\\\\\\\\\""contexts\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfAttention Visualizations\\\\\\\\\\\\\\\\nInput-Input Layer5\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\\\\\\\\\nthe verb \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019, completing the phrase \\\\\\\\\\\\\\\\u2018making...more difficult\\\\\\\\\\\\\\\\u2019. Attentions here shown only for\\\\\\\\\\\\\\\\nthe word \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\\\\\\\\\n13\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""question\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""how to improve Attension calculation efficiency?\\\\\\\\\\\\\\\""\\\\\\\\n}\\\\\\\"",\\\\\\\""line_run_id\\\\\\\"":\\\\\\\""d13da436-d3ad-4905-9aae-2dfc0cb2b538\\\\\\\"",\\\\\\\""node_name\\\\\\\"":\\\\\\\""Prompt_variants\\\\\\\"",\\\\\\\""output\\\\\\\"":\\\\\\\""\\\\\\\\\\\\\\\""system: \\\\\\\\\\\\\\\\nYou are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"".\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n user: \\\\\\\\\\\\\\\\n Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfAttention Visualizations\\\\\\\\\\\\\\\\nInput-Input Layer5\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\\\\\\\\\nthe verb \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019, completing the phrase \\\\\\\\\\\\\\\\u2018making...more difficult\\\\\\\\\\\\\\\\u2019. Attentions here shown only for\\\\\\\\\\\\\\\\nthe word \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\\\\\\\\\n13\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n chat history: \\\\\\\\\\\\\\\\n user: \\\\\\\\\\\\\\\\nhow to calculate Attention? \\\\\\\\\\\\\\\\nassistant: \\\\\\\\\\\\\\\\nTo calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf) \\\\\\\\\\\\\\\\nuser: how to improve Attension calculation efficiency? \\\\\\\\\\\\\\\\nassistant:\\\\\\\\\\\\\\\""\\\\\\\"",\\\\\\\""root_run_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""span_type\\\\\\\"":\\\\\\\""Tool\\\\\\\""}\\\"", \\\""context\\\"": \\\""{\\\\\\\""span_id\\\\\\\"":\\\\\\\""0xe56ecf03d4fff786\\\\\\\"",\\\\\\\""trace_id\\\\\\\"":\\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\"",\\\\\\\""trace_state\\\\\\\"":\\\\\\\""[]\\\\\\\""}\\\"", \\\""end_time\\\"": \\\""2024-02-05T15:56:05.770483\\\"", \\\""events\\\"": \\\""[]\\\"", \\\""kind\\\"": \\\""SpanKind.INTERNAL\\\"", \\\""links\\\"": \\\""[]\\\"", \\\""name\\\"": \\\""Prompt_variants\\\"", \\\""parent_id\\\"": \\\""0x4d0bbb09563f095d\\\"", \\\""resource\\\"": \\\""{\\\\\\\""attributes\\\\\\\"":{\\\\\\\""service.name\\\\\\\"":\\\\\\\""promptflow\\\\\\\""},\\\\\\\""schema_url\\\\\\\"":\\\\\\\""\\\\\\\""}\\\"", \\\""start_time\\\"": \\\""2024-02-05T15:56:05.767721\\\"", \\\""status\\\"": \\\""OK\\\"", \\\""trace_id\\\"": \\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\"", \\\""span_id\\\"": \\\""0xe56ecf03d4fff786\\\"", \\\""span_type\\\"": \\\""Tool\\\"", \\\""framework\\\"": \\\""promptflow\\\"", \\\""input\\\"": \\\""{\\\\n  \\\\\\\""template\\\\\\\"": \\\\\\\""system: \\\\\\\\nYou are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\"".\\\\\\\\n\\\\\\\\n user: \\\\\\\\n {{contexts}} \\\\\\\\n\\\\\\\\n chat history: \\\\\\\\n{% for item in chat_history %} user: \\\\\\\\n{{ item.inputs.question }} \\\\\\\\nassistant: \\\\\\\\n{{ item.outputs.output }} \\\\\\\\n{% endfor %}\\\\\\\\nuser: {{question}} \\\\\\\\nassistant:\\\\\\\"",\\\\n  \\\\\\\""chat_history\\\\\\\"": [\\\\n    {\\\\n      \\\\\\\""inputs\\\\\\\"": {\\\\n        \\\\\\\""question\\\\\\\"": \\\\\\\""how to calculate Attention?\\\\\\\""\\\\n      },\\\\n      \\\\\\\""outputs\\\\\\\"": {\\\\n        \\\\\\\""output\\\\\\\"": \\\\\\\""To calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\\\\\\\""\\\\n      }\\\\n    }\\\\n  ],\\\\n  \\\\\\\""contexts\\\\\\\"": \\\\\\\""Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\n Multi-Head Attention\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\nattention layers running in parallel.\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\nquery with the corresponding key.\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\nquery with all keys, divide each by\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\nvalues.\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\nthe matrix of outputs as:\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\n\\\\\\\\u221adk)V (1)\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\nof1\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\nmatrix multiplication code.\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\u221adk.\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\u00b7k=Pdk\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\n4\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfAttention Visualizations\\\\\\\\nInput-Input Layer5\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\nthe verb \\\\\\\\u2018making\\\\\\\\u2019, completing the phrase \\\\\\\\u2018making...more difficult\\\\\\\\u2019. Attentions here shown only for\\\\\\\\nthe word \\\\\\\\u2018making\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\n13\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\nscholarly works.\\\\\\\\nAttention Is All You Need\\\\\\\\nAshish Vaswani\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nusz@google.com\\\\\\\\nLlion Jones\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\u2217 \\\\\\\\u2020\\\\\\\\nUniversity of Toronto\\\\\\\\naidan@cs.toronto.edu\\\\\\\\u0141ukasz Kaiser\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nlukaszkaiser@google.com\\\\\\\\nIllia Polosukhin\\\\\\\\u2217 \\\\\\\\u2021\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\nAbstract\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\nlarge and limited training data.\\\\\\\\n\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\nour research.\\\\\\\\n\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\n\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n  \\\\\\\""question\\\\\\\"": \\\\\\\""how to improve Attension calculation efficiency?\\\\\\\""\\\\n}\\\"", \\\""output\\\"": \\\""\\\\\\\""system: \\\\\\\\nYou are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\"".\\\\\\\\n\\\\\\\\n user: \\\\\\\\n Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\n Multi-Head Attention\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\nattention layers running in parallel.\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\nquery with the corresponding key.\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\nquery with all keys, divide each by\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\nvalues.\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\nthe matrix of outputs as:\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\n\\\\\\\\u221adk)V (1)\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\nof1\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\nmatrix multiplication code.\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\u221adk.\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\u00b7k=Pdk\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\n4\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfAttention Visualizations\\\\\\\\nInput-Input Layer5\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\nthe verb \\\\\\\\u2018making\\\\\\\\u2019, completing the phrase \\\\\\\\u2018making...more difficult\\\\\\\\u2019. Attentions here shown only for\\\\\\\\nthe word \\\\\\\\u2018making\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\n13\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\nscholarly works.\\\\\\\\nAttention Is All You Need\\\\\\\\nAshish Vaswani\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nusz@google.com\\\\\\\\nLlion Jones\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\u2217 \\\\\\\\u2020\\\\\\\\nUniversity of Toronto\\\\\\\\naidan@cs.toronto.edu\\\\\\\\u0141ukasz Kaiser\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nlukaszkaiser@google.com\\\\\\\\nIllia Polosukhin\\\\\\\\u2217 \\\\\\\\u2021\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\nAbstract\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\nlarge and limited training data.\\\\\\\\n\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\nour research.\\\\\\\\n\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\n\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf \\\\\\\\n\\\\\\\\n chat history: \\\\\\\\n user: \\\\\\\\nhow to calculate Attention? \\\\\\\\nassistant: \\\\\\\\nTo calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf) \\\\\\\\nuser: how to improve Attension calculation efficiency? \\\\\\\\nassistant:\\\\\\\""\\\"", \\\""children\\\"": []}\"", \""{\\\""attributes\\\"": \\\""{\\\\\\\""flow_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""framework\\\\\\\"":\\\\\\\""promptflow\\\\\\\"",\\\\\\\""function\\\\\\\"":\\\\\\\""AzureOpenAI.chat\\\\\\\"",\\\\\\\""inputs\\\\\\\"":\\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""prompt\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{{prompt_text}}\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""deployment_name\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""temperature\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""top_p\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\n  \\\\\\\\\\\\\\\""max_tokens\\\\\\\\\\\\\\\"": 1000,\\\\\\\\n  \\\\\\\\\\\\\\\""presence_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""frequency_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""prompt_text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""system: \\\\\\\\\\\\\\\\nYou are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"".\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n user: \\\\\\\\\\\\\\\\n Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfAttention Visualizations\\\\\\\\\\\\\\\\nInput-Input Layer5\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\\\\\\\\\nthe verb \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019, completing the phrase \\\\\\\\\\\\\\\\u2018making...more difficult\\\\\\\\\\\\\\\\u2019. Attentions here shown only for\\\\\\\\\\\\\\\\nthe word \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\\\\\\\\\n13\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n chat history: \\\\\\\\\\\\\\\\n user: \\\\\\\\\\\\\\\\nhow to calculate Attention? \\\\\\\\\\\\\\\\nassistant: \\\\\\\\\\\\\\\\nTo calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf) \\\\\\\\\\\\\\\\nuser: how to improve Attension calculation efficiency? \\\\\\\\\\\\\\\\nassistant:\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""stream\\\\\\\\\\\\\\\"": false\\\\\\\\n}\\\\\\\"",\\\\\\\""line_run_id\\\\\\\"":\\\\\\\""d13da436-d3ad-4905-9aae-2dfc0cb2b538\\\\\\\"",\\\\\\\""node_name\\\\\\\"":\\\\\\\""answer_the_question_with_context\\\\\\\"",\\\\\\\""output\\\\\\\"":\\\\\\\""\\\\\\\\\\\\\\\""One way to improve the efficiency of attention calculation is to use dot-product attention, which is faster and more space-efficient than additive attention. Additionally, multi-head attention can be used to linearly project the queries, keys, and values multiple times with different, learned linear projections to different dimensions, and then perform the attention function in parallel on each of these projected versions. This can improve the model's performance while also being more parallelizable and requiring less time to train. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\\\\\\\\\\\\\\\""\\\\\\\"",\\\\\\\""root_run_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""span_type\\\\\\\"":\\\\\\\""Tool\\\\\\\""}\\\"", \\\""context\\\"": \\\""{\\\\\\\""span_id\\\\\\\"":\\\\\\\""0xbb234096db5a96c4\\\\\\\"",\\\\\\\""trace_id\\\\\\\"":\\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\"",\\\\\\\""trace_state\\\\\\\"":\\\\\\\""[]\\\\\\\""}\\\"", \\\""end_time\\\"": \\\""2024-02-05T15:56:08.083729\\\"", \\\""events\\\"": \\\""[]\\\"", \\\""kind\\\"": \\\""SpanKind.INTERNAL\\\"", \\\""links\\\"": \\\""[]\\\"", \\\""name\\\"": \\\""answer_the_question_with_context\\\"", \\\""parent_id\\\"": \\\""0x4d0bbb09563f095d\\\"", \\\""resource\\\"": \\\""{\\\\\\\""attributes\\\\\\\"":{\\\\\\\""service.name\\\\\\\"":\\\\\\\""promptflow\\\\\\\""},\\\\\\\""schema_url\\\\\\\"":\\\\\\\""\\\\\\\""}\\\"", \\\""start_time\\\"": \\\""2024-02-05T15:56:05.774437\\\"", \\\""status\\\"": \\\""OK\\\"", \\\""trace_id\\\"": \\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\"", \\\""span_id\\\"": \\\""0xbb234096db5a96c4\\\"", \\\""span_type\\\"": \\\""Tool\\\"", \\\""framework\\\"": \\\""promptflow\\\"", \\\""input\\\"": \\\""{\\\\n  \\\\\\\""prompt\\\\\\\"": \\\\\\\""{{prompt_text}}\\\\\\\"",\\\\n  \\\\\\\""deployment_name\\\\\\\"": \\\\\\\""gpt-35-turbo\\\\\\\"",\\\\n  \\\\\\\""temperature\\\\\\\"": 0.0,\\\\n  \\\\\\\""top_p\\\\\\\"": 1.0,\\\\n  \\\\\\\""max_tokens\\\\\\\"": 1000,\\\\n  \\\\\\\""presence_penalty\\\\\\\"": 0.0,\\\\n  \\\\\\\""frequency_penalty\\\\\\\"": 0.0,\\\\n  \\\\\\\""prompt_text\\\\\\\"": \\\\\\\""system: \\\\\\\\nYou are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\"".\\\\\\\\n\\\\\\\\n user: \\\\\\\\n Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\n Multi-Head Attention\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\nattention layers running in parallel.\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\nquery with the corresponding key.\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\nquery with all keys, divide each by\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\nvalues.\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\nthe matrix of outputs as:\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\n\\\\\\\\u221adk)V (1)\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\nof1\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\nmatrix multiplication code.\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\u221adk.\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\u00b7k=Pdk\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\n4\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfAttention Visualizations\\\\\\\\nInput-Input Layer5\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nIt\\\\\\\\nis\\\\\\\\nin\\\\\\\\nthis\\\\\\\\nspirit\\\\\\\\nthat\\\\\\\\na\\\\\\\\nmajority\\\\\\\\nof\\\\\\\\nAmerican\\\\\\\\ngovernments\\\\\\\\nhave\\\\\\\\npassed\\\\\\\\nnew\\\\\\\\nlaws\\\\\\\\nsince\\\\\\\\n2009\\\\\\\\nmaking\\\\\\\\nthe\\\\\\\\nregistration\\\\\\\\nor\\\\\\\\nvoting\\\\\\\\nprocess\\\\\\\\nmore\\\\\\\\ndifficult\\\\\\\\n.\\\\\\\\n<EOS>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\n<pad>\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\nthe verb \\\\\\\\u2018making\\\\\\\\u2019, completing the phrase \\\\\\\\u2018making...more difficult\\\\\\\\u2019. Attentions here shown only for\\\\\\\\nthe word \\\\\\\\u2018making\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\n13\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\nscholarly works.\\\\\\\\nAttention Is All You Need\\\\\\\\nAshish Vaswani\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nusz@google.com\\\\\\\\nLlion Jones\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\u2217 \\\\\\\\u2020\\\\\\\\nUniversity of Toronto\\\\\\\\naidan@cs.toronto.edu\\\\\\\\u0141ukasz Kaiser\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nlukaszkaiser@google.com\\\\\\\\nIllia Polosukhin\\\\\\\\u2217 \\\\\\\\u2021\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\nAbstract\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\nlarge and limited training data.\\\\\\\\n\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\nour research.\\\\\\\\n\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\n\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf \\\\\\\\n\\\\\\\\n chat history: \\\\\\\\n user: \\\\\\\\nhow to calculate Attention? \\\\\\\\nassistant: \\\\\\\\nTo calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf) \\\\\\\\nuser: how to improve Attension calculation efficiency? \\\\\\\\nassistant:\\\\\\\"",\\\\n  \\\\\\\""stream\\\\\\\"": false\\\\n}\\\"", \\\""output\\\"": \\\""\\\\\\\""One way to improve the efficiency of attention calculation is to use dot-product attention, which is faster and more space-efficient than additive attention. Additionally, multi-head attention can be used to linearly project the queries, keys, and values multiple times with different, learned linear projections to different dimensions, and then perform the attention function in parallel on each of these projected versions. This can improve the model's performance while also being more parallelizable and requiring less time to train. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\\\\\\\""\\\"", \\\""children\\\"": [\\\""{\\\\\\\""attributes\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""flow_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""framework\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""function\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""openai.resources.chat.completions.Completions.create\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""inputs\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""messages\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""system\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""You are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"".\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfAttention Visualizations\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nInput-Input Layer5\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe verb \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2019, completing the phrase \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2018making...more difficult\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2019. Attentions here shown only for\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe word \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n13\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n chat history:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""how to calculate Attention?\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""To calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf) \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nuser: how to improve Attension calculation efficiency? \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nassistant:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""temperature\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""top_p\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stream\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": false,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""max_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1000,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""presence_penalty\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""frequency_penalty\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""logit_bias\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {},\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""response_format\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""line_run_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""d13da436-d3ad-4905-9aae-2dfc0cb2b538\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""node_name\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""answer_the_question_with_context\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""output\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chatcmpl-8ovcE3f3rGGaVqddJNHN2ZzY2b4ny\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""choices\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""finish_reason\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""index\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0,\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""logprobs\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""message\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""One way to improve the efficiency of attention calculation is to use dot-product attention, which is faster and more space-efficient than additive attention. Additionally, multi-head attention can be used to linearly project the queries, keys, and values multiple times with different, learned linear projections to different dimensions, and then perform the attention function in parallel on each of these projected versions. This can improve the model's performance while also being more parallelizable and requiring less time to train. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""function_call\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""tool_calls\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null\\\\\\\\\\\\\\\\n      }\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""created\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1707148566,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chat.completion\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""system_fingerprint\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""usage\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""completion_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 145,\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""prompt_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1872,\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""total_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 2017\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""root_run_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""span_type\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""LLM\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""context\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""span_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""0x89e11a2d7769c114\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""trace_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""trace_state\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""end_time\\\\\\\"": \\\\\\\""2024-02-05T15:56:08.081218\\\\\\\"", \\\\\\\""events\\\\\\\"": \\\\\\\""[]\\\\\\\"", \\\\\\\""kind\\\\\\\"": \\\\\\\""SpanKind.INTERNAL\\\\\\\"", \\\\\\\""links\\\\\\\"": \\\\\\\""[]\\\\\\\"", \\\\\\\""name\\\\\\\"": \\\\\\\""openai.resources.chat.completions.Completions.create\\\\\\\"", \\\\\\\""parent_id\\\\\\\"": \\\\\\\""0xbb234096db5a96c4\\\\\\\"", \\\\\\\""resource\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""attributes\\\\\\\\\\\\\\\"":{\\\\\\\\\\\\\\\""service.name\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\""},\\\\\\\\\\\\\\\""schema_url\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""start_time\\\\\\\"": \\\\\\\""2024-02-05T15:56:05.777037\\\\\\\"", \\\\\\\""status\\\\\\\"": \\\\\\\""OK\\\\\\\"", \\\\\\\""trace_id\\\\\\\"": \\\\\\\""0xeb680f9487455dd80bbb9ca58dbc11a7\\\\\\\"", \\\\\\\""span_id\\\\\\\"": \\\\\\\""0x89e11a2d7769c114\\\\\\\"", \\\\\\\""span_type\\\\\\\"": \\\\\\\""LLM\\\\\\\"", \\\\\\\""framework\\\\\\\"": \\\\\\\""promptflow\\\\\\\"", \\\\\\\""input\\\\\\\"": \\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""messages\\\\\\\\\\\\\\\"": [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""system\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""You are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"".\\\\\\\\\\\\\\\""\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfAttention Visualizations\\\\\\\\\\\\\\\\nInput-Input Layer5\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nIt\\\\\\\\\\\\\\\\nis\\\\\\\\\\\\\\\\nin\\\\\\\\\\\\\\\\nthis\\\\\\\\\\\\\\\\nspirit\\\\\\\\\\\\\\\\nthat\\\\\\\\\\\\\\\\na\\\\\\\\\\\\\\\\nmajority\\\\\\\\\\\\\\\\nof\\\\\\\\\\\\\\\\nAmerican\\\\\\\\\\\\\\\\ngovernments\\\\\\\\\\\\\\\\nhave\\\\\\\\\\\\\\\\npassed\\\\\\\\\\\\\\\\nnew\\\\\\\\\\\\\\\\nlaws\\\\\\\\\\\\\\\\nsince\\\\\\\\\\\\\\\\n2009\\\\\\\\\\\\\\\\nmaking\\\\\\\\\\\\\\\\nthe\\\\\\\\\\\\\\\\nregistration\\\\\\\\\\\\\\\\nor\\\\\\\\\\\\\\\\nvoting\\\\\\\\\\\\\\\\nprocess\\\\\\\\\\\\\\\\nmore\\\\\\\\\\\\\\\\ndifficult\\\\\\\\\\\\\\\\n.\\\\\\\\\\\\\\\\n<EOS>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\n<pad>\\\\\\\\\\\\\\\\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\\\\\\\\\\\\\\\\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\\\\\\\\\\\\\\\\nthe verb \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019, completing the phrase \\\\\\\\\\\\\\\\u2018making...more difficult\\\\\\\\\\\\\\\\u2019. Attentions here shown only for\\\\\\\\\\\\\\\\nthe word \\\\\\\\\\\\\\\\u2018making\\\\\\\\\\\\\\\\u2019. Different colors represent different heads. Best viewed in color.\\\\\\\\\\\\\\\\n13\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n chat history:\\\\\\\\\\\\\\\""\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""how to calculate Attention?\\\\\\\\\\\\\\\""\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""To calculate attention, we use a compatibility function of the query with the corresponding key, and then compute the dot products of the query with all keys, divide each by the square root of the dimension of the keys, and apply a softmax function to obtain the weights on the values. This is known as Scaled Dot-Product Attention. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf) \\\\\\\\\\\\\\\\nuser: how to improve Attension calculation efficiency? \\\\\\\\\\\\\\\\nassistant:\\\\\\\\\\\\\\\""\\\\\\\\n    }\\\\\\\\n  ],\\\\\\\\n  \\\\\\\\\\\\\\\""temperature\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""top_p\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\n  \\\\\\\\\\\\\\\""n\\\\\\\\\\\\\\\"": 1,\\\\\\\\n  \\\\\\\\\\\\\\\""stream\\\\\\\\\\\\\\\"": false,\\\\\\\\n  \\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\"": null,\\\\\\\\n  \\\\\\\\\\\\\\\""max_tokens\\\\\\\\\\\\\\\"": 1000,\\\\\\\\n  \\\\\\\\\\\\\\\""presence_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""frequency_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""logit_bias\\\\\\\\\\\\\\\"": {},\\\\\\\\n  \\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""response_format\\\\\\\\\\\\\\\"": null\\\\\\\\n}\\\\\\\"", \\\\\\\""output\\\\\\\"": \\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""chatcmpl-8ovcE3f3rGGaVqddJNHN2ZzY2b4ny\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""choices\\\\\\\\\\\\\\\"": [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""finish_reason\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""index\\\\\\\\\\\\\\\"": 0,\\\\\\\\n      \\\\\\\\\\\\\\\""logprobs\\\\\\\\\\\\\\\"": null,\\\\\\\\n      \\\\\\\\\\\\\\\""message\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""One way to improve the efficiency of attention calculation is to use dot-product attention, which is faster and more space-efficient than additive attention. Additionally, multi-head attention can be used to linearly project the queries, keys, and values multiple times with different, learned linear projections to different dimensions, and then perform the attention function in parallel on each of these projected versions. This can improve the model's performance while also being more parallelizable and requiring less time to train. (Source: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf)\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""function_call\\\\\\\\\\\\\\\"": null,\\\\\\\\n        \\\\\\\\\\\\\\\""tool_calls\\\\\\\\\\\\\\\"": null\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  ],\\\\\\\\n  \\\\\\\\\\\\\\\""created\\\\\\\\\\\\\\\"": 1707148566,\\\\\\\\n  \\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""chat.completion\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""system_fingerprint\\\\\\\\\\\\\\\"": null,\\\\\\\\n  \\\\\\\\\\\\\\\""usage\\\\\\\\\\\\\\\"": {\\\\\\\\n    \\\\\\\\\\\\\\\""completion_tokens\\\\\\\\\\\\\\\"": 145,\\\\\\\\n    \\\\\\\\\\\\\\\""prompt_tokens\\\\\\\\\\\\\\\"": 1872,\\\\\\\\n    \\\\\\\\\\\\\\\""total_tokens\\\\\\\\\\\\\\\"": 2017\\\\\\\\n  }\\\\\\\\n}\\\\\\\"", \\\\\\\""children\\\\\\\"": []}\\\""]}\""]}"

0x1f1ba2e1d4bdeb64c858cd9c0fc941cf,,,2024-02-05T15:00:34.166Z,2024-02-05T15:00:37.707Z,"{\""question\"": \""how to calculate Attention?\"",\""chat_history\"": [{\""inputs\"": {\""question\"": \""what's Attention?\""},\""outputs\"": {\""output\"": \""Attention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf)\""}}]}","{\""output\"": \""There are different ways to calculate attention, but one commonly used method is Scaled Dot-Product Attention. In this method, the input consists of queries and keys of dimension dk, and values of dimension dv. The dot products of the query with all keys are computed, divided by the square root of dk, and a softmax function is applied to obtain the weights on the values. The attention function can be computed on a set of queries simultaneously, packed together into a matrix Q, with the keys and values also packed together into matrices K and V. The matrix of outputs is then computed as Attention(Q, K, V) = softmax(QKT/\\u221adk)V. (Source: 1706.03762.pdf)\""}","{\""attributes\"": \""{\\\""framework\\\"":\\\""promptflow\\\"",\\\""inputs\\\"":\\\""{\\\\n  \\\\\\\""question\\\\\\\"": \\\\\\\""how to calculate Attention?\\\\\\\"",\\\\n  \\\\\\\""chat_history\\\\\\\"": [\\\\n    {\\\\n      \\\\\\\""inputs\\\\\\\"": {\\\\n        \\\\\\\""question\\\\\\\"": \\\\\\\""what's Attention?\\\\\\\""\\\\n      },\\\\n      \\\\\\\""outputs\\\\\\\"": {\\\\n        \\\\\\\""output\\\\\\\"": \\\\\\\""Attention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf)\\\\\\\""\\\\n      }\\\\n    }\\\\n  ]\\\\n}\\\"",\\\""output\\\"":\\\""{\\\\n  \\\\\\\""output\\\\\\\"": \\\\\\\""There are different ways to calculate attention, but one commonly used method is Scaled Dot-Product Attention. In this method, the input consists of queries and keys of dimension dk, and values of dimension dv. The dot products of the query with all keys are computed, divided by the square root of dk, and a softmax function is applied to obtain the weights on the values. The attention function can be computed on a set of queries simultaneously, packed together into a matrix Q, with the keys and values also packed together into matrices K and V. The matrix of outputs is then computed as Attention(Q, K, V) = softmax(QKT/\\\\\\\\u221adk)V. (Source: 1706.03762.pdf)\\\\\\\""\\\\n}\\\"",\\\""span_type\\\"":\\\""Flow\\\""}\"", \""context\"": \""{\\\""span_id\\\"":\\\""0xb1e57bf254752dd7\\\"",\\\""trace_id\\\"":\\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\"",\\\""trace_state\\\"":\\\""[]\\\""}\"", \""end_time\"": \""2024-02-05T15:00:37.707934\"", \""events\"": \""[]\"", \""kind\"": \""SpanKind.INTERNAL\"", \""links\"": \""[]\"", \""name\"": \""promptflow.flow\"", \""parent_id\"": null, \""resource\"": \""{\\\""attributes\\\"":{\\\""service.name\\\"":\\\""promptflow\\\""},\\\""schema_url\\\"":\\\""\\\""}\"", \""start_time\"": \""2024-02-05T15:00:34.166870\"", \""status\"": \""OK\"", \""trace_id\"": \""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\"", \""span_id\"": \""0xb1e57bf254752dd7\"", \""span_type\"": \""Flow\"", \""framework\"": \""promptflow\"", \""input\"": \""{\\n  \\\""question\\\"": \\\""how to calculate Attention?\\\"",\\n  \\\""chat_history\\\"": [\\n    {\\n      \\\""inputs\\\"": {\\n        \\\""question\\\"": \\\""what's Attention?\\\""\\n      },\\n      \\\""outputs\\\"": {\\n        \\\""output\\\"": \\\""Attention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf)\\\""\\n      }\\n    }\\n  ]\\n}\"", \""output\"": \""{\\n  \\\""output\\\"": \\\""There are different ways to calculate attention, but one commonly used method is Scaled Dot-Product Attention. In this method, the input consists of queries and keys of dimension dk, and values of dimension dv. The dot products of the query with all keys are computed, divided by the square root of dk, and a softmax function is applied to obtain the weights on the values. The attention function can be computed on a set of queries simultaneously, packed together into a matrix Q, with the keys and values also packed together into matrices K and V. The matrix of outputs is then computed as Attention(Q, K, V) = softmax(QKT/\\\\u221adk)V. (Source: 1706.03762.pdf)\\\""\\n}\"", \""children\"": [\""{\\\""attributes\\\"": \\\""{\\\\\\\""flow_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""framework\\\\\\\"":\\\\\\\""promptflow\\\\\\\"",\\\\\\\""function\\\\\\\"":\\\\\\\""AzureOpenAI.chat\\\\\\\"",\\\\\\\""inputs\\\\\\\"":\\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""prompt\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""system: \\\\\\\\\\\\\\\\nGiven the following conversation history and the users next question,rephrase the question to be a stand alone question.\\\\\\\\\\\\\\\\nIf the conversation is irrelevant or empty, just restate the original question.\\\\\\\\\\\\\\\\nDo not add more details than necessary to the question.\\\\\\\\\\\\\\\\nconversation:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n chat history: \\\\\\\\\\\\\\\\n{% for item in chat_history %} user: \\\\\\\\\\\\\\\\n{{ item.inputs.question }} \\\\\\\\\\\\\\\\nassistant: \\\\\\\\\\\\\\\\n{{ item.outputs.output }} \\\\\\\\\\\\\\\\n{% endfor %}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nuser:\\\\\\\\\\\\\\\\nFollow up Input: {{question}} \\\\\\\\\\\\\\\\nStandalone Question:\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""deployment_name\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""temperature\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\n  \\\\\\\\\\\\\\\""top_p\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\n  \\\\\\\\\\\\\\\""presence_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""frequency_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""chat_history\\\\\\\\\\\\\\\"": [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""inputs\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""question\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""what's Attention?\\\\\\\\\\\\\\\""\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""outputs\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""output\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Attention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf)\\\\\\\\\\\\\\\""\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  ],\\\\\\\\n  \\\\\\\\\\\\\\\""question\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""how to calculate Attention?\\\\\\\\\\\\\\\""\\\\\\\\n}\\\\\\\"",\\\\\\\""line_run_id\\\\\\\"":\\\\\\\""371856bd-457d-490c-8f4e-69f825b727d1\\\\\\\"",\\\\\\\""node_name\\\\\\\"":\\\\\\\""modify_query_with_history\\\\\\\"",\\\\\\\""output\\\\\\\"":\\\\\\\""\\\\\\\\\\\\\\\""How can attention be calculated in machine learning models?\\\\\\\\\\\\\\\""\\\\\\\"",\\\\\\\""root_run_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""span_type\\\\\\\"":\\\\\\\""Tool\\\\\\\""}\\\"", \\\""context\\\"": \\\""{\\\\\\\""span_id\\\\\\\"":\\\\\\\""0xa8317030c4283bfb\\\\\\\"",\\\\\\\""trace_id\\\\\\\"":\\\\\\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\\\\\"",\\\\\\\""trace_state\\\\\\\"":\\\\\\\""[]\\\\\\\""}\\\"", \\\""end_time\\\"": \\\""2024-02-05T15:00:34.831846\\\"", \\\""events\\\"": \\\""[]\\\"", \\\""kind\\\"": \\\""SpanKind.INTERNAL\\\"", \\\""links\\\"": \\\""[]\\\"", \\\""name\\\"": \\\""modify_query_with_history\\\"", \\\""parent_id\\\"": \\\""0xb1e57bf254752dd7\\\"", \\\""resource\\\"": \\\""{\\\\\\\""attributes\\\\\\\"":{\\\\\\\""service.name\\\\\\\"":\\\\\\\""promptflow\\\\\\\""},\\\\\\\""schema_url\\\\\\\"":\\\\\\\""\\\\\\\""}\\\"", \\\""start_time\\\"": \\\""2024-02-05T15:00:34.168947\\\"", \\\""status\\\"": \\\""OK\\\"", \\\""trace_id\\\"": \\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\"", \\\""span_id\\\"": \\\""0xa8317030c4283bfb\\\"", \\\""span_type\\\"": \\\""Tool\\\"", \\\""framework\\\"": \\\""promptflow\\\"", \\\""input\\\"": \\\""{\\\\n  \\\\\\\""prompt\\\\\\\"": \\\\\\\""system: \\\\\\\\nGiven the following conversation history and the users next question,rephrase the question to be a stand alone question.\\\\\\\\nIf the conversation is irrelevant or empty, just restate the original question.\\\\\\\\nDo not add more details than necessary to the question.\\\\\\\\nconversation:\\\\\\\\n\\\\\\\\n chat history: \\\\\\\\n{% for item in chat_history %} user: \\\\\\\\n{{ item.inputs.question }} \\\\\\\\nassistant: \\\\\\\\n{{ item.outputs.output }} \\\\\\\\n{% endfor %}\\\\\\\\n\\\\\\\\nuser:\\\\\\\\nFollow up Input: {{question}} \\\\\\\\nStandalone Question:\\\\\\\"",\\\\n  \\\\\\\""deployment_name\\\\\\\"": \\\\\\\""gpt-35-turbo\\\\\\\"",\\\\n  \\\\\\\""temperature\\\\\\\"": 1.0,\\\\n  \\\\\\\""top_p\\\\\\\"": 1.0,\\\\n  \\\\\\\""presence_penalty\\\\\\\"": 0.0,\\\\n  \\\\\\\""frequency_penalty\\\\\\\"": 0.0,\\\\n  \\\\\\\""chat_history\\\\\\\"": [\\\\n    {\\\\n      \\\\\\\""inputs\\\\\\\"": {\\\\n        \\\\\\\""question\\\\\\\"": \\\\\\\""what's Attention?\\\\\\\""\\\\n      },\\\\n      \\\\\\\""outputs\\\\\\\"": {\\\\n        \\\\\\\""output\\\\\\\"": \\\\\\\""Attention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf)\\\\\\\""\\\\n      }\\\\n    }\\\\n  ],\\\\n  \\\\\\\""question\\\\\\\"": \\\\\\\""how to calculate Attention?\\\\\\\""\\\\n}\\\"", \\\""output\\\"": \\\""\\\\\\\""How can attention be calculated in machine learning models?\\\\\\\""\\\"", \\\""children\\\"": [\\\""{\\\\\\\""attributes\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""flow_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""framework\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""function\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""openai.resources.chat.completions.Completions.create\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""inputs\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""messages\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""system\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Given the following conversation history and the users next question,rephrase the question to be a stand alone question.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIf the conversation is irrelevant or empty, just restate the original question.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nDo not add more details than necessary to the question.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconversation:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n chat history:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""what's Attention?\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Attention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Follow up Input: how to calculate Attention? \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nStandalone Question:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""temperature\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""top_p\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stream\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": false,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""max_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""presence_penalty\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""frequency_penalty\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""logit_bias\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {},\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""response_format\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""line_run_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""371856bd-457d-490c-8f4e-69f825b727d1\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""node_name\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""modify_query_with_history\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""output\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chatcmpl-8oukUwRal4goGohKqXRV5UJkyL5V1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""choices\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""finish_reason\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""index\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0,\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""logprobs\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""message\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""How can attention be calculated in machine learning models?\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""function_call\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""tool_calls\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null\\\\\\\\\\\\\\\\n      }\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""created\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1707145234,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chat.completion\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""system_fingerprint\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""usage\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""completion_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 10,\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""prompt_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 151,\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""total_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 161\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""root_run_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""span_type\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""LLM\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""context\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""span_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""0x05e7abd1ef928fa1\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""trace_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""trace_state\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""end_time\\\\\\\"": \\\\\\\""2024-02-05T15:00:34.829852\\\\\\\"", \\\\\\\""events\\\\\\\"": \\\\\\\""[]\\\\\\\"", \\\\\\\""kind\\\\\\\"": \\\\\\\""SpanKind.INTERNAL\\\\\\\"", \\\\\\\""links\\\\\\\"": \\\\\\\""[]\\\\\\\"", \\\\\\\""name\\\\\\\"": \\\\\\\""openai.resources.chat.completions.Completions.create\\\\\\\"", \\\\\\\""parent_id\\\\\\\"": \\\\\\\""0xa8317030c4283bfb\\\\\\\"", \\\\\\\""resource\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""attributes\\\\\\\\\\\\\\\"":{\\\\\\\\\\\\\\\""service.name\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\""},\\\\\\\\\\\\\\\""schema_url\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""start_time\\\\\\\"": \\\\\\\""2024-02-05T15:00:34.172071\\\\\\\"", \\\\\\\""status\\\\\\\"": \\\\\\\""OK\\\\\\\"", \\\\\\\""trace_id\\\\\\\"": \\\\\\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\\\\\"", \\\\\\\""span_id\\\\\\\"": \\\\\\\""0x05e7abd1ef928fa1\\\\\\\"", \\\\\\\""span_type\\\\\\\"": \\\\\\\""LLM\\\\\\\"", \\\\\\\""framework\\\\\\\"": \\\\\\\""promptflow\\\\\\\"", \\\\\\\""input\\\\\\\"": \\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""messages\\\\\\\\\\\\\\\"": [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""system\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Given the following conversation history and the users next question,rephrase the question to be a stand alone question.\\\\\\\\\\\\\\\\nIf the conversation is irrelevant or empty, just restate the original question.\\\\\\\\\\\\\\\\nDo not add more details than necessary to the question.\\\\\\\\\\\\\\\\nconversation:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n chat history:\\\\\\\\\\\\\\\""\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""what's Attention?\\\\\\\\\\\\\\\""\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Attention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf)\\\\\\\\\\\\\\\""\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Follow up Input: how to calculate Attention? \\\\\\\\\\\\\\\\nStandalone Question:\\\\\\\\\\\\\\\""\\\\\\\\n    }\\\\\\\\n  ],\\\\\\\\n  \\\\\\\\\\\\\\\""temperature\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\n  \\\\\\\\\\\\\\\""top_p\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\n  \\\\\\\\\\\\\\\""n\\\\\\\\\\\\\\\"": 1,\\\\\\\\n  \\\\\\\\\\\\\\\""stream\\\\\\\\\\\\\\\"": false,\\\\\\\\n  \\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\"": null,\\\\\\\\n  \\\\\\\\\\\\\\\""max_tokens\\\\\\\\\\\\\\\"": null,\\\\\\\\n  \\\\\\\\\\\\\\\""presence_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""frequency_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""logit_bias\\\\\\\\\\\\\\\"": {},\\\\\\\\n  \\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""response_format\\\\\\\\\\\\\\\"": null\\\\\\\\n}\\\\\\\"", \\\\\\\""output\\\\\\\"": \\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""chatcmpl-8oukUwRal4goGohKqXRV5UJkyL5V1\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""choices\\\\\\\\\\\\\\\"": [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""finish_reason\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""index\\\\\\\\\\\\\\\"": 0,\\\\\\\\n      \\\\\\\\\\\\\\\""logprobs\\\\\\\\\\\\\\\"": null,\\\\\\\\n      \\\\\\\\\\\\\\\""message\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""How can attention be calculated in machine learning models?\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""function_call\\\\\\\\\\\\\\\"": null,\\\\\\\\n        \\\\\\\\\\\\\\\""tool_calls\\\\\\\\\\\\\\\"": null\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  ],\\\\\\\\n  \\\\\\\\\\\\\\\""created\\\\\\\\\\\\\\\"": 1707145234,\\\\\\\\n  \\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""chat.completion\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""system_fingerprint\\\\\\\\\\\\\\\"": null,\\\\\\\\n  \\\\\\\\\\\\\\\""usage\\\\\\\\\\\\\\\"": {\\\\\\\\n    \\\\\\\\\\\\\\\""completion_tokens\\\\\\\\\\\\\\\"": 10,\\\\\\\\n    \\\\\\\\\\\\\\\""prompt_tokens\\\\\\\\\\\\\\\"": 151,\\\\\\\\n    \\\\\\\\\\\\\\\""total_tokens\\\\\\\\\\\\\\\"": 161\\\\\\\\n  }\\\\\\\\n}\\\\\\\"", \\\\\\\""children\\\\\\\"": []}\\\""]}\"", \""{\\\""attributes\\\"": \\\""{\\\\\\\""flow_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""framework\\\\\\\"":\\\\\\\""promptflow\\\\\\\"",\\\\\\\""function\\\\\\\"":\\\\\\\""search\\\\\\\"",\\\\\\\""inputs\\\\\\\"":\\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""mlindex_content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""embeddings:\\\\\\\\\\\\\\\\n  api_base: https://promptflow-ci-weu.openai.azure.com/\\\\\\\\\\\\\\\\n  api_type: azure\\\\\\\\\\\\\\\\n  api_version: 2023-03-15-preview\\\\\\\\\\\\\\\\n  batch_size: '16'\\\\\\\\\\\\\\\\n  connection:\\\\\\\\\\\\\\\\n    id: \\\\\\\\\\\\\\\\n      /subscriptions/96aede12-2f73-41cb-b983-6d11a904839b/resourceGroups/promptflow/providers/Microsoft.MachineLearningServices/workspaces/pf-xp/connections/azure_open_ai_connection\\\\\\\\\\\\\\\\n  connection_type: workspace_connection\\\\\\\\\\\\\\\\n  deployment: text-embedding-ada-003\\\\\\\\\\\\\\\\n  dimension: 1536\\\\\\\\\\\\\\\\n  file_format_version: '2'\\\\\\\\\\\\\\\\n  kind: open_ai\\\\\\\\\\\\\\\\n  model: text-embedding-ada-002\\\\\\\\\\\\\\\\n  schema_version: '2'\\\\\\\\\\\\\\\\nindex:\\\\\\\\\\\\\\\\n  engine: langchain.vectorstores.FAISS\\\\\\\\\\\\\\\\n  kind: faiss\\\\\\\\\\\\\\\\n  method: FlatL2\\\\\\\\\\\\\\\\n  path: \\\\\\\\\\\\\\\\n    azureml://subscriptions/96aede12-2f73-41cb-b983-6d11a904839b/resourcegroups/promptflow/workspaces/pf-xp/datastores/workspaceblobstore/paths/azureml/f7ee0381-06fc-4566-820f-86ba174db987/index/\\\\\\\\\\\\\\\\nself:\\\\\\\\\\\\\\\\n  path: \\\\\\\\\\\\\\\\n    azureml://subscriptions/96aede12-2f73-41cb-b983-6d11a904839b/resourcegroups/promptflow/workspaces/pf-xp/datastores/workspaceblobstore/paths/azureml/f7ee0381-06fc-4566-820f-86ba174db987/index/\\\\\\\\\\\\\\\\n  asset_id: \\\\\\\\\\\\\\\\n    azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/serene-honey-h9lrkyczzk/versions/1\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""queries\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""How can attention be calculated in machine learning models?\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""query_type\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Vector\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""top_k\\\\\\\\\\\\\\\"": 3\\\\\\\\n}\\\\\\\"",\\\\\\\""line_run_id\\\\\\\"":\\\\\\\""371856bd-457d-490c-8f4e-69f825b727d1\\\\\\\"",\\\\\\\""node_name\\\\\\\"":\\\\\\\""vector_lookup\\\\\\\"",\\\\\\\""output\\\\\\\"":\\\\\\\""[\\\\\\\\n  {\\\\\\\\n    \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\"",\\\\\\\\n    \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n      \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf3\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n      \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 3,\\\\\\\\n      \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 551,\\\\\\\\n        \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 2502,\\\\\\\\n        \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 35\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n      }\\\\\\\\n    },\\\\\\\\n    \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.3431832194328308\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\"",\\\\\\\\n    \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n      \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf0\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n      \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 0,\\\\\\\\n      \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 668,\\\\\\\\n        \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 2874,\\\\\\\\n        \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 50\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n      }\\\\\\\\n    },\\\\\\\\n    \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.3687279224395752\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\\\\\\\\\ndepicted in Figure 2.\\\\\\\\\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\\\\\\\\\ni, KWK\\\\\\\\\\\\\\\\ni, V WV\\\\\\\\\\\\\\\\ni)\\\\\\\\\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dk,WK\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dk,WV\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dv\\\\\\\\\\\\\\\\nandWO\\\\\\\\\\\\\\\\u2208Rhdv\\\\\\\\\\\\\\\\u00d7dmodel.\\\\\\\\\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022In \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\\\\\\\\\n[38, 2, 9].\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\\\\\\\\\nencoder.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\\\\\\\\\u2212\\\\\\\\\\\\\\\\u221e) all values in the input\\\\\\\\\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\\\\\\\\\ndff= 2048 .\\\\\\\\\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\\\\\\\\\u221admodel.\\\\\\\\\\\\\\\\n5\\\\\\\\\\\\\\\"",\\\\\\\\n    \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n      \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf4\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""b0907ffb4546970af003d72d3c66917f5f097f5428599ff50f68323e538f0da6\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n      \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 4,\\\\\\\\n      \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 743,\\\\\\\\n        \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 3190,\\\\\\\\n        \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 49\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n      }\\\\\\\\n    },\\\\\\\\n    \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.3867444396018982\\\\\\\\n  }\\\\\\\\n]\\\\\\\"",\\\\\\\""root_run_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""span_type\\\\\\\"":\\\\\\\""Tool\\\\\\\""}\\\"", \\\""context\\\"": \\\""{\\\\\\\""span_id\\\\\\\"":\\\\\\\""0x76c01ab723e2980f\\\\\\\"",\\\\\\\""trace_id\\\\\\\"":\\\\\\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\\\\\"",\\\\\\\""trace_state\\\\\\\"":\\\\\\\""[]\\\\\\\""}\\\"", \\\""end_time\\\"": \\\""2024-02-05T15:00:35.383484\\\"", \\\""events\\\"": \\\""[]\\\"", \\\""kind\\\"": \\\""SpanKind.INTERNAL\\\"", \\\""links\\\"": \\\""[]\\\"", \\\""name\\\"": \\\""vector_lookup\\\"", \\\""parent_id\\\"": \\\""0xb1e57bf254752dd7\\\"", \\\""resource\\\"": \\\""{\\\\\\\""attributes\\\\\\\"":{\\\\\\\""service.name\\\\\\\"":\\\\\\\""promptflow\\\\\\\""},\\\\\\\""schema_url\\\\\\\"":\\\\\\\""\\\\\\\""}\\\"", \\\""start_time\\\"": \\\""2024-02-05T15:00:34.836506\\\"", \\\""status\\\"": \\\""OK\\\"", \\\""trace_id\\\"": \\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\"", \\\""span_id\\\"": \\\""0x76c01ab723e2980f\\\"", \\\""span_type\\\"": \\\""Tool\\\"", \\\""framework\\\"": \\\""promptflow\\\"", \\\""input\\\"": \\\""{\\\\n  \\\\\\\""mlindex_content\\\\\\\"": \\\\\\\""embeddings:\\\\\\\\n  api_base: https://promptflow-ci-weu.openai.azure.com/\\\\\\\\n  api_type: azure\\\\\\\\n  api_version: 2023-03-15-preview\\\\\\\\n  batch_size: '16'\\\\\\\\n  connection:\\\\\\\\n    id: \\\\\\\\n      /subscriptions/96aede12-2f73-41cb-b983-6d11a904839b/resourceGroups/promptflow/providers/Microsoft.MachineLearningServices/workspaces/pf-xp/connections/azure_open_ai_connection\\\\\\\\n  connection_type: workspace_connection\\\\\\\\n  deployment: text-embedding-ada-003\\\\\\\\n  dimension: 1536\\\\\\\\n  file_format_version: '2'\\\\\\\\n  kind: open_ai\\\\\\\\n  model: text-embedding-ada-002\\\\\\\\n  schema_version: '2'\\\\\\\\nindex:\\\\\\\\n  engine: langchain.vectorstores.FAISS\\\\\\\\n  kind: faiss\\\\\\\\n  method: FlatL2\\\\\\\\n  path: \\\\\\\\n    azureml://subscriptions/96aede12-2f73-41cb-b983-6d11a904839b/resourcegroups/promptflow/workspaces/pf-xp/datastores/workspaceblobstore/paths/azureml/f7ee0381-06fc-4566-820f-86ba174db987/index/\\\\\\\\nself:\\\\\\\\n  path: \\\\\\\\n    azureml://subscriptions/96aede12-2f73-41cb-b983-6d11a904839b/resourcegroups/promptflow/workspaces/pf-xp/datastores/workspaceblobstore/paths/azureml/f7ee0381-06fc-4566-820f-86ba174db987/index/\\\\\\\\n  asset_id: \\\\\\\\n    azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/serene-honey-h9lrkyczzk/versions/1\\\\\\\\n\\\\\\\"",\\\\n  \\\\\\\""queries\\\\\\\"": \\\\\\\""How can attention be calculated in machine learning models?\\\\\\\"",\\\\n  \\\\\\\""query_type\\\\\\\"": \\\\\\\""Vector\\\\\\\"",\\\\n  \\\\\\\""top_k\\\\\\\"": 3\\\\n}\\\"", \\\""output\\\"": \\\""[\\\\n  {\\\\n    \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\n Multi-Head Attention\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\nattention layers running in parallel.\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\nquery with the corresponding key.\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\nquery with all keys, divide each by\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\nvalues.\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\nthe matrix of outputs as:\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\n\\\\\\\\u221adk)V (1)\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\nof1\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\nmatrix multiplication code.\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\u221adk.\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\u00b7k=Pdk\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\n4\\\\\\\"",\\\\n    \\\\\\\""metadata\\\\\\\"": {\\\\n      \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf3\\\\\\\"",\\\\n      \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\"",\\\\n      \\\\\\\""mtime\\\\\\\"": null,\\\\n      \\\\\\\""page_number\\\\\\\"": 3,\\\\n      \\\\\\\""stats\\\\\\\"": {\\\\n        \\\\\\\""tiktokens\\\\\\\"": 551,\\\\n        \\\\\\\""chars\\\\\\\"": 2502,\\\\n        \\\\\\\""lines\\\\\\\"": 35\\\\n      },\\\\n      \\\\\\\""source\\\\\\\"": {\\\\n        \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n        \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n        \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n      }\\\\n    },\\\\n    \\\\\\\""score\\\\\\\"": 0.3431832194328308\\\\n  },\\\\n  {\\\\n    \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\nscholarly works.\\\\\\\\nAttention Is All You Need\\\\\\\\nAshish Vaswani\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nusz@google.com\\\\\\\\nLlion Jones\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\u2217 \\\\\\\\u2020\\\\\\\\nUniversity of Toronto\\\\\\\\naidan@cs.toronto.edu\\\\\\\\u0141ukasz Kaiser\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nlukaszkaiser@google.com\\\\\\\\nIllia Polosukhin\\\\\\\\u2217 \\\\\\\\u2021\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\nAbstract\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\nlarge and limited training data.\\\\\\\\n\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\nour research.\\\\\\\\n\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\n\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\"",\\\\n    \\\\\\\""metadata\\\\\\\"": {\\\\n      \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf0\\\\\\\"",\\\\n      \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\"",\\\\n      \\\\\\\""mtime\\\\\\\"": null,\\\\n      \\\\\\\""page_number\\\\\\\"": 0,\\\\n      \\\\\\\""stats\\\\\\\"": {\\\\n        \\\\\\\""tiktokens\\\\\\\"": 668,\\\\n        \\\\\\\""chars\\\\\\\"": 2874,\\\\n        \\\\\\\""lines\\\\\\\"": 50\\\\n      },\\\\n      \\\\\\\""source\\\\\\\"": {\\\\n        \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n        \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n        \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n      }\\\\n    },\\\\n    \\\\\\\""score\\\\\\\"": 0.3687279224395752\\\\n  },\\\\n  {\\\\n    \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\ndepicted in Figure 2.\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\ni, KWK\\\\\\\\ni, V WV\\\\\\\\ni)\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dk,WK\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dk,WV\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dv\\\\\\\\nandWO\\\\\\\\u2208Rhdv\\\\\\\\u00d7dmodel.\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\n\\\\\\\\u2022In \\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\n[38, 2, 9].\\\\\\\\n\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\nencoder.\\\\\\\\n\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\u2212\\\\\\\\u221e) all values in the input\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\ndff= 2048 .\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\u221admodel.\\\\\\\\n5\\\\\\\"",\\\\n    \\\\\\\""metadata\\\\\\\"": {\\\\n      \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf4\\\\\\\"",\\\\n      \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""b0907ffb4546970af003d72d3c66917f5f097f5428599ff50f68323e538f0da6\\\\\\\"",\\\\n      \\\\\\\""mtime\\\\\\\"": null,\\\\n      \\\\\\\""page_number\\\\\\\"": 4,\\\\n      \\\\\\\""stats\\\\\\\"": {\\\\n        \\\\\\\""tiktokens\\\\\\\"": 743,\\\\n        \\\\\\\""chars\\\\\\\"": 3190,\\\\n        \\\\\\\""lines\\\\\\\"": 49\\\\n      },\\\\n      \\\\\\\""source\\\\\\\"": {\\\\n        \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n        \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n        \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n      }\\\\n    },\\\\n    \\\\\\\""score\\\\\\\"": 0.3867444396018982\\\\n  }\\\\n]\\\"", \\\""children\\\"": [\\\""{\\\\\\\""attributes\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""retrieval.documents\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""[\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.3431832194328308,\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.metadata\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf3\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 3,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 551,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 2502,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 35\\\\\\\\\\\\\\\\n            },\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\\\\\\\\\n            }\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.3687279224395752,\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.metadata\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 668,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 2874,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 50\\\\\\\\\\\\\\\\n            },\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\\\\\\\\\n            }\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndepicted in Figure 2.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni, KWK\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni, V WV\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u00d7dk,WK\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u00d7dk,WV\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u00d7dv\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nandWO\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2208Rhdv\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u00d7dmodel.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2022In \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n[38, 2, 9].\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nencoder.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2212\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221e) all values in the input\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndff= 2048 .\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221admodel.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n5\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.3867444396018982,\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""document.metadata\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf4\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""b0907ffb4546970af003d72d3c66917f5f097f5428599ff50f68323e538f0da6\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 4,\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 743,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 3190,\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 49\\\\\\\\\\\\\\\\n            },\\\\\\\\\\\\\\\\n            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\\\\\\\\\n            }\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""retrieval.query\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""How can attention be calculated in machine learning models?\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""span_type\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""Retrieval\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""context\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""span_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""0xf853c85fdfd565fc\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""trace_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""trace_state\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""end_time\\\\\\\"": \\\\\\\""2024-02-05T15:00:35.377829\\\\\\\"", \\\\\\\""events\\\\\\\"": \\\\\\\""[]\\\\\\\"", \\\\\\\""kind\\\\\\\"": \\\\\\\""SpanKind.INTERNAL\\\\\\\"", \\\\\\\""links\\\\\\\"": \\\\\\\""[]\\\\\\\"", \\\\\\\""name\\\\\\\"": \\\\\\\""search\\\\\\\"", \\\\\\\""parent_id\\\\\\\"": \\\\\\\""0x76c01ab723e2980f\\\\\\\"", \\\\\\\""resource\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""attributes\\\\\\\\\\\\\\\"":{\\\\\\\\\\\\\\\""service.name\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\""},\\\\\\\\\\\\\\\""schema_url\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""start_time\\\\\\\"": \\\\\\\""2024-02-05T15:00:34.837373\\\\\\\"", \\\\\\\""status\\\\\\\"": \\\\\\\""UNSET\\\\\\\"", \\\\\\\""trace_id\\\\\\\"": \\\\\\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\\\\\"", \\\\\\\""span_id\\\\\\\"": \\\\\\\""0xf853c85fdfd565fc\\\\\\\"", \\\\\\\""span_type\\\\\\\"": \\\\\\\""Retrieval\\\\\\\"", \\\\\\\""framework\\\\\\\"": null, \\\\\\\""input\\\\\\\"": null, \\\\\\\""output\\\\\\\"": null, \\\\\\\""children\\\\\\\"": [\\\\\\\""{\\\\\\\\\\\\\\\""attributes\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""flow_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""framework\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""function\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""openai.resources.embeddings.Embeddings.create\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""inputs\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""input\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      4438,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      649,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      6666,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      387,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      16997,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      304,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      5780,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      6975,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      4211,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      30\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    ]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""text-embedding-ada-002\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""line_run_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""371856bd-457d-490c-8f4e-69f825b727d1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""node_name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""vector_lookup\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""output\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""data\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""embedding\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03242553398013115,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016978833824396133,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04613117128610611,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021240953356027603,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00824566837400198,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002475789748132229,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00796013418585062,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0012918678112328053,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023204870522022247,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016755977645516396,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03791335970163345,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04351261258125305,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020502742379903793,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020837025716900826,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0047530983574688435,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0031774374656379223,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022104518488049507,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022856658324599266,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001187404035590589,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02186773531138897,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.041200485080480576,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01962524652481079,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0078695984557271,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015780983492732048,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018998464569449425,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016045624390244484,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018970608711242676,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025335930287837982,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009791730903089046,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026352709159255028,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019374534487724304,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0050490787252783775,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010474227368831635,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03468194976449013,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018859179690480232,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015223843045532703,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020837025716900826,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.000933209084905684,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02447236329317093,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016254551708698273,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03292695805430412,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030308401212096214,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004157655406743288,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003031188389286399,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014360276982188225,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017744900658726692,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014019028283655643,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030642686411738396,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013642959296703339,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022633802145719528,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006379249971359968,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03782978653907776,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025280214846134186,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023232726380228996,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0056514861062169075,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008433702401816845,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024528076872229576,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00983351655304432,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014318491332232952,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012347609736025333,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0259487833827734,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007270673755556345,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0008191695087589324,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01128904428333044,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023441653698682785,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002096238313242793,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003130428958684206,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027299847453832626,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015836697071790695,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007890491746366024,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024792717769742012,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014931345358490944,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0024096292909234762,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01685347780585289,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03256481885910034,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006233000662177801,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014666703529655933,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01817668415606022,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020057030022144318,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02334415540099144,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0003349367470946163,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001270104548893869,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002421816810965538,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.028971266001462936,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0025715481024235487,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006772730033844709,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01924917846918106,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00851727370172739,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0013676040107384324,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015154200606048107,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0007469154661521316,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021937377750873566,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02501557394862175,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00569327175617218,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0027856987435370684,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00991708692163229,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012897784821689129,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03262053057551384,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011344757862389088,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009346019476652145,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01649133674800396,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022564159706234932,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.050142575055360794,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015683483332395554,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0019151679007336497,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00038238067645579576,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004690420348197222,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006922461092472076,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012556537054479122,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015850625932216644,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008635666221380234,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02835841290652752,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002049229573458433,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03445909172296524,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02185380645096302,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0013754387618973851,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0021589165553450584,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01778668537735939,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03189624845981598,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002952840644866228,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03039197251200676,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02133845165371895,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01722954586148262,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022912371903657913,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0070687104016542435,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026088068261742592,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007632814347743988,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017354903742671013,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015377056784927845,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026394495740532875,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00027508774655871093,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02110166847705841,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014025992713868618,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017480259761214256,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010731903836131096,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006591659504920244,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011839219368994236,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009443518705666065,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04482189193367958,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001659231842495501,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0005701977061107755,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003271454945206642,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003680604510009289,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009965837001800537,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008496381342411041,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04774687439203262,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0010742350714281201,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03092125616967678,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0009828293696045876,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001983069349080324,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003698015119880438,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021784164011478424,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0024183345958590508,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02372022531926632,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002155434340238571,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004714794922620058,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0032975708600133657,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011456185951828957,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0017802355578169227,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020711669698357582,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017717042937874794,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019555604085326195,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013064926490187645,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018789537250995636,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.031171968206763268,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02983483299612999,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024040579795837402,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01906810700893402,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00750049389898777,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006769247818738222,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006636927369982004,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03356767073273659,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03002983145415783,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003722389927133918,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006525499280542135,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0018228916451334953,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.045824743807315826,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012633143924176693,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00638969661667943,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023079514503479004,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00015506330237258226,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0115745784714818,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005292827729135752,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006156394258141518,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010787618346512318,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013740458525717258,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0019430248066782951,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01546062808483839,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003798996564000845,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02057238481938839,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014485633000731468,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010348870418965816,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022828800603747368,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01853882521390915,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.6257793307304382,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01268885750323534,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008962985128164291,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016226695850491524,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002757841721177101,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014610989950597286,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008001919835805893,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006703087594360113,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016588835045695305,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.031171968206763268,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0012178726028651,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00945048313587904,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007625850383192301,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008545130491256714,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006142465863376856,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03273196145892143,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006877193693071604,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03721693530678749,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002716056304052472,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02557271346449852,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04239833354949951,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029026979580521584,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020488813519477844,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01870596595108509,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013016177341341972,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010697082616388798,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001234412775374949,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020990239456295967,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00547041604295373,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007389065809547901,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003456007456406951,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006497642025351524,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010878153145313263,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01743847317993641,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03629765287041664,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028079843148589134,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01167207770049572,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02114345319569111,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020238101482391357,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04838758707046509,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014931345358490944,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021268809214234352,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017647400498390198,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010704047046601772,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013092784211039543,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004081048537045717,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004920240491628647,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009443518705666065,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004286494106054306,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030698399990797043,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012222252786159515,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004610331263393164,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006539427675306797,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010704047046601772,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01316242665052414,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0016461737686768174,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015808839350938797,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0050490787252783775,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01706240512430668,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03128339722752571,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010397620499134064,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006609070114791393,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014005100354552269,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010620476678013802,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008844593539834023,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015808839350938797,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002947617555037141,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020447028800845146,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0003941328322980553,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.032341960817575455,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005285863298922777,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01814882643520832,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003840781981125474,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.028093772009015083,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010759761556982994,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019221320748329163,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023789867758750916,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006313089746981859,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001743673230521381,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004467564169317484,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002143247053027153,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01204118225723505,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0008352743461728096,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014005100354552269,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0044466713443398476,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004471046384423971,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00443970737978816,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002522798487916589,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001045507495291531,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00662996293976903,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012751535512506962,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.028999123722314835,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012772428803145885,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.05276113376021385,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0036701580975204706,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01165814884006977,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003628372447565198,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004941132850944996,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027007348835468292,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023957008495926857,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02206273376941681,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020460957661271095,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0030851613264530897,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0032871244475245476,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.031784821301698685,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005334612913429737,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0031495806761085987,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014186170883476734,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012333680875599384,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02983483299612999,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01555812731385231,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0032575263176113367,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006877193693071604,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014708489179611206,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011825291439890862,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027898771688342094,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030419830232858658,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005745503585785627,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0027143151964992285,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01798168569803238,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007716385181993246,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0041681015864014626,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03259267657995224,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03242553398013115,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011644220910966396,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0040392628870904446,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0037049793172627687,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02261987328529358,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003987031057476997,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004185512196272612,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010244406759738922,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006459339056164026,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01286296360194683,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015279557555913925,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01408170722424984,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010070300661027431,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02019631490111351,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004941132850944996,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0012892561499029398,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021394165232777596,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018107041716575623,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01121243741363287,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024876289069652557,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018775608390569687,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04036477580666542,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002329540438950062,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003774621756747365,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021199166774749756,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012347609736025333,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015251700766384602,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014130456373095512,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02831662818789482,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025600571185350418,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0033637310843914747,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028636982664465904,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005310238339006901,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009561911225318909,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.031784821301698685,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01961131952702999,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.034347664564847946,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008921200409531593,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.037133362144231796,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02261987328529358,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00533113069832325,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017647400498390198,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010759761556982994,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0036005156580358744,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027480917051434517,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04855472967028618,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018288111314177513,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013886707834899426,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03292695805430412,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00448845699429512,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020126672461628914,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0005741150816902518,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02518271654844284,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011128866113722324,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007827813737094402,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011247258633375168,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021519523113965988,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01688133366405964,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022522373124957085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011184580624103546,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006800586823374033,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02888769470155239,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019513819366693497,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02702127769589424,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0124938590452075,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007584064733237028,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0022703444119542837,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002663824474439025,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0016209284076467156,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019694888964295387,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008106383495032787,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0028727517928928137,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0019517301116138697,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01454134751111269,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005035150330513716,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003805960761383176,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030614828690886497,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010892082005739212,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030141260474920273,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026533780619502068,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00798102654516697,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01232671644538641,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00907441321760416,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008886379189789295,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02963983453810215,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0015390985645353794,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008677451871335506,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018274184316396713,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004565063863992691,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0037084612995386124,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022536301985383034,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012890820391476154,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020837025716900826,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001690570847131312,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0038198893889784813,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004648634698241949,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02484843321144581,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018483111634850502,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0064837136305868626,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022633802145719528,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0059091635048389435,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029918404296040535,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00407756632193923,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011240294203162193,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029556263238191605,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.032119106501340866,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02352522499859333,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014332420192658901,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009346019476652145,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015042773447930813,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013218140229582787,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03596337139606476,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014652775600552559,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00887941475957632,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0011386543046683073,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03170125186443329,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01923524960875511,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01593419723212719,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003722389927133918,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009868337772786617,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025642355903983116,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.028804125264286995,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001045507495291531,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.048220444470644,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014527418650686741,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015028844587504864,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002865787595510483,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01614312455058098,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0019221320981159806,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00402881670743227,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01739668846130371,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0023991831112653017,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0034995339810848236,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        8.351655560545623e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008252632804214954,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013914564624428749,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025140929967164993,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01775882951915264,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02057238481938839,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0185527540743351,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017299188300967216,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004255154635757208,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0024775308556854725,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00890030711889267,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003868639003485441,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001080328831449151,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001057695015333593,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01473634596914053,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014931345358490944,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011734755709767342,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01742454618215561,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02016845904290676,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005794253200292587,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007660671602934599,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006361839361488819,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012479930184781551,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029305551201105118,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025698071345686913,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.038247644901275635,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0075562079437077045,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002284273039549589,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009708159603178501,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018650252372026443,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008210847154259682,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017159903421998024,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01230582408607006,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005630593281239271,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011463150382041931,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006664784159511328,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01167207770049572,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025447357445955276,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018622396513819695,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003868639003485441,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015474556013941765,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009972801432013512,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0019238732056692243,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0296676903963089,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004091495182365179,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.000986311468295753,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024374863132834435,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01910989359021187,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01259135827422142,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00815513264387846,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0021954788826406,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02259201556444168,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004909793846309185,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029751261696219444,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025865212082862854,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003374177496880293,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003913906868547201,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00026007110136561096,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026269137859344482,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013677780516445637,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002912796102464199,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014694560319185257,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02445843443274498,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0315062515437603,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0052440776489675045,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029054837301373482,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0020527117885649204,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014485633000731468,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.031199825927615166,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0194441769272089,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021463807672262192,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01390760112553835,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.041785482317209244,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012082967907190323,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018385611474514008,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010550834238529205,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03019697405397892,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002575030317530036,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.05691182613372803,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008308346383273602,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0033585079945623875,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0067448727786540985,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03679908066987991,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0166584774851799,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010167799890041351,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023567011579871178,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002545432187616825,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0002733466972131282,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005574879702180624,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003680604510009289,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02206273376941681,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0067100515589118,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020642027258872986,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009777802042663097,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004749616142362356,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022689515724778175,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011128866113722324,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006274786312133074,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015989910811185837,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.028400197625160217,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012201360426843166,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008475488051772118,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025252358987927437,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.037551216781139374,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014485633000731468,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0007073063170537353,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013886707834899426,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018288111314177513,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013350460678339005,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.038609784096479416,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010188693180680275,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004202922806143761,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0083431676030159,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019151678308844566,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.031199825927615166,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017299188300967216,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0027195382863283157,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0003904330951627344,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012459037825465202,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010801546275615692,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02572592720389366,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002841412788257003,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011275115422904491,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006748354993760586,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002576771192252636,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020976310595870018,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004812294617295265,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026993419975042343,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.036214083433151245,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0018054809188470244,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021185237914323807,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00398006709292531,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0314783938229084,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0030607865191996098,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006978175137192011,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026227353140711784,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025642355903983116,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0019987388513982296,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008092454634606838,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03796907514333725,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.05983680859208107,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006609070114791393,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02649199403822422,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025447357445955276,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014019028283655643,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006912014912813902,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02817734144628048,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005762914195656776,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017842400819063187,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024890217930078506,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02241094596683979,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007465672679245472,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0013162426184862852,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0015556386206299067,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0194859616458416,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007841741666197777,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003078197129070759,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00653594546020031,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015056701377034187,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014429919421672821,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03950120881199837,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02094845473766327,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021004168316721916,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015599912963807583,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0035761406179517508,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006410588975995779,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01812097057700157,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022299518808722496,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010070300661027431,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029584120959043503,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01138654351234436,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02129666693508625,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01397027913480997,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0033114992547780275,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010899046435952187,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007577100303024054,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01324599701911211,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014750274829566479,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00224422849714756,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00853816606104374,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004585956688970327,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01039065606892109,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02554485760629177,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001240506418980658,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04245404899120331,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00684933690354228,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007235852535814047,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004742652177810669,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004377028904855251,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014708489179611206,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04490546137094498,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010042443871498108,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006824961863458157,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002970251254737377,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003893014043569565,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0037119435146450996,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021213095635175705,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0035169445909559727,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006354874931275845,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027271989732980728,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0010315791005268693,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03236981853842735,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03223053365945816,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025461286306381226,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024932002648711205,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0037955145817250013,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022341303527355194,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013350460678339005,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013461888767778873,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013684744946658611,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016268480569124222,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012730643153190613,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.033623382449150085,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02484843321144581,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01997346058487892,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03245339170098305,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004046227317303419,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02463950589299202,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0011995915556326509,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025099145248532295,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.042342621833086014,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029138408601284027,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0024914592504501343,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0042969402857124805,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001340617542155087,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01222921721637249,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03317767009139061,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02611592598259449,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0426211915910244,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010745832696557045,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014513489790260792,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014360276982188225,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009854408912360668,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004589438438415527,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016031695529818535,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015711341053247452,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012312788516283035,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020252030342817307,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01703454740345478,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01983417384326458,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024583790451288223,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006842372473329306,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030893398448824883,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002928465837612748,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004937651101499796,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010126015171408653,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.035211231559515,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02239701710641384,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008475488051772118,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007389065809547901,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0026307441294193268,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026046283543109894,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023037727922201157,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009972801432013512,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009116198867559433,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0231491569429636,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004081048537045717,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015878481790423393,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007528350688517094,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011330829933285713,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0011726050870493054,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014443847350776196,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0314505398273468,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010871189646422863,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024152006953954697,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01945810578763485,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004760062787681818,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02702127769589424,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007079157046973705,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010522976517677307,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024750933051109314,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005362470168620348,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022912371903657913,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014214027673006058,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018232397735118866,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02352522499859333,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00118131039198488,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016379907727241516,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.036046940833330154,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004108905792236328,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0071871024556458,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014074742794036865,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010731903836131096,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010341905988752842,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0037049793172627687,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004244708456099033,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029584120959043503,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021575236693024635,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02022417262196541,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002024854766204953,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0305869709700346,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0076049575582146645,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03225839138031006,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0005266711814329028,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01611526682972908,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01546062808483839,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00016910061822272837,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002303424524143338,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009979765862226486,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017299188300967216,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004700866527855396,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02054452709853649,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0333169549703598,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003123464761301875,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005365951918065548,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004286494106054306,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020600242540240288,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011811362579464912,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004450153559446335,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007932277396321297,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014227956533432007,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017842400819063187,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01891489326953888,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03423623740673065,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0049655078910291195,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0027456542011350393,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01000762265175581,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009227626956999302,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009680302813649178,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02445843443274498,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0034403379540890455,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.028943410143256187,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01703454740345478,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003194848308339715,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00689808651804924,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018608467653393745,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0008949057082645595,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020795240998268127,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011651184409856796,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0010846814839169383,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014917416498064995,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014513489790260792,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012855999171733856,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016379907727241516,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004185512196272612,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003927835263311863,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0006729203159920871,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03206339105963707,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03551765903830528,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021923448890447617,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019541677087545395,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02649199403822422,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0024026650935411453,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003466453868895769,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0016740307910367846,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010975653305649757,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006515052635222673,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018970608711242676,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030865540727972984,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0036597116850316525,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026408424600958824,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022856658324599266,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0055853258818387985,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008969949558377266,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02665913663804531,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013942422345280647,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0015582501655444503,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007904419675469398,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005108274985104799,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007618885952979326,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01703454740345478,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0057141645811498165,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006351393181830645,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00853816606104374,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005738539155572653,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020976310595870018,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016533121466636658,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0011299489997327328,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016031695529818535,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002251192694529891,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022661659866571426,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        4.6818237024126574e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013949385844171047,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04276047646999359,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01174868457019329,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02204880490899086,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02924983575940132,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00918584130704403,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0066613019444048405,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0064001427963376045,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013378318399190903,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004241226240992546,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027550559490919113,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020321672782301903,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01370563730597496,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006072822958230972,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0143742049112916,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011630292050540447,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00518836360424757,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0259209256619215,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022160233929753304,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01647740788757801,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0026081104297190905,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029305551201105118,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008670487441122532,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015697412192821503,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019903818145394325,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012883856892585754,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014290634542703629,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02461164817214012,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008496381342411041,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008642630651593208,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01362903043627739,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002970251254737377,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01724347472190857,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030141260474920273,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002757841721177101,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029361264780163765,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003017259994521737,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0032975708600133657,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009241555817425251,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004505867604166269,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0370219349861145,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028581269085407257,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0025837356224656105,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004415332339704037,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.031227681785821915,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.036966223269701004,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028469840064644814,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03301053121685982,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.046047598123550415,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008865485899150372,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00989619456231594,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020614169538021088,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00908834207803011,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010070300661027431,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022174160927534103,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009882265701889992,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023929152637720108,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004760062787681818,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015613840892910957,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02149166539311409,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025085216388106346,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0047705089673399925,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0029215014073997736,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02037738636136055,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015599912963807583,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        9.140573820332065e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006455856841057539,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0077512068673968315,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029779119417071342,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020084887742996216,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0008283100905828178,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0034333737567067146,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006643891334533691,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0097429808229208,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006737908814102411,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011365651153028011,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007563171908259392,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021073810756206512,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.029556263238191605,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0026133335195481777,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01628240942955017,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.025280214846134186,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010000658221542835,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005564433056861162,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0019151679007336497,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009283340536057949,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005296309478580952,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03259267657995224,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030280545353889465,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -9.608484106138349e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04055977240204811,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0025071287527680397,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008524238131940365,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009694231674075127,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03390195220708847,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03259267657995224,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019555604085326195,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025489144027233124,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0009836998069658875,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003118241438642144,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02872055396437645,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012180467136204243,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.000898387806955725,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02078131213784218,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02703520655632019,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.031227681785821915,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012361537665128708,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0012248369166627526,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009332090616226196,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006306125316768885,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0022372642997652292,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014214027673006058,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012507786974310875,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026993419975042343,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009617624804377556,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00241137039847672,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026965564116835594,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016950976103544235,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018413469195365906,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002905831905081868,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01704847626388073,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0039382814429700375,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0002776993496809155,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00897691398859024,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022508446127176285,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013468853197991848,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014945273287594318,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004387475550174713,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00832227524369955,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019875960424542427,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00513961398974061,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007107013836503029,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.2261987328529358,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016909191384911537,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023093441501259804,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018580609932541847,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0011508418247103691,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010815475136041641,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024695219472050667,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009561911225318909,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007577100303024054,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010314049199223518,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023762010037899017,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006943353917449713,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03746764734387398,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -2.649678208399564e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011268150992691517,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0033463204745203257,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03590765595436096,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0370776504278183,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0018246326362714171,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        2.875472273444757e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012598322704434395,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0012039442081004381,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013106712140142918,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.041395481675863266,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04111691191792488,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0008513791835866868,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013287782669067383,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0041681015864014626,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013942422345280647,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016226695850491524,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019123822450637817,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020628098398447037,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00953405350446701,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02225773222744465,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026728779077529907,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007653707172721624,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01102440245449543,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0048157768324017525,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04189690947532654,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012904749251902103,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011365651153028011,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017925970256328583,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0021084256004542112,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0002639884769450873,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022689515724778175,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0012753276387229562,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0015730492305010557,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0352390892803669,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006664784159511328,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02405450865626335,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027453061193227768,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0176056157797575,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02612985298037529,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0194441769272089,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009589768014848232,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0013545459369197488,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01611526682972908,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00899084284901619,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0278152022510767,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.050504717975854874,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016783835366368294,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002054452896118164,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0024670844431966543,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03866549953818321,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -8.825006079860032e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008872450329363346,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014903487637639046,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020112745463848114,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01611526682972908,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02872055396437645,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0203634575009346,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021199166774749756,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0074935294687747955,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00908834207803011,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04432046785950661,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01817668415606022,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016895262524485588,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015182058326900005,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008196918293833733,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027202347293496132,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008928163908421993,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026547709479928017,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00021393295901361853,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0007360338349826634,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01519598625600338,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017494188621640205,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0030990897212177515,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016003839671611786,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022188089787960052,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00564800389111042,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00279962713830173,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016769906505942345,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02888769470155239,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008482452481985092,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01360813807696104,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007465672679245472,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02447236329317093,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02002917416393757,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016352051869034767,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0038303358014672995,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024737004190683365,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03426409512758255,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.033233385533094406,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0007477860199287534,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008712273091077805,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00504211476072669,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008252632804214954,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002853600075468421,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0012500822776928544,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0013919788179919124,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01924917846918106,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04707830771803856,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00417158380150795,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005766396410763264,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002787439851090312,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008273525163531303,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00015647792315576226,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005480862222611904,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018483111634850502,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013998135924339294,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0064663030207157135,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03275981545448303,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0011438775109127164,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005491308402270079,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015042773447930813,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023762010037899017,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01020262110978365,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008921200409531593,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01720169000327587,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004798366222530603,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0025889587122946978,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03312195837497711,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013120641000568867,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018037399277091026,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012918678112328053,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022299518808722496,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009304233826696873,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029305551201105118,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009171913377940655,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005923091899603605,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008969949558377266,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01416527759283781,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0040845307521522045,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01454134751111269,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008252632804214954,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01462491787970066,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012027254328131676,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023190941661596298,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00426908303052187,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02167273499071598,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016602763906121254,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006811033468693495,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00532764894887805,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017898114398121834,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004241226240992546,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0002594181860331446,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009840480983257294,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014290634542703629,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0013449701946228743,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01463884674012661,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014889559708535671,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01027922797948122,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004516314249485731,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004175066016614437,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020795240998268127,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014973130077123642,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.1780618578195572,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006654337979853153,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03075411356985569,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030057689175009727,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00897691398859024,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008886379189789295,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002056193770840764,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0029615459498018026,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.046576883643865585,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004498903173953295,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022828800603747368,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03610265627503395,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026979491114616394,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022271661087870598,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.000401532364776358,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0015660850331187248,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008259596303105354,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01500098779797554,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013998135924339294,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019569532945752144,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02944483608007431,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009756909683346748,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007813884876668453,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0038964960258454084,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00426560128107667,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007382101379334927,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01305099856108427,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.031784821301698685,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00472524156793952,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.039751920849084854,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010418512858450413,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0157252699136734,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010432441718876362,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005947466939687729,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00860780943185091,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0009749945602379739,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001659231842495501,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03181267902255058,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020962383598089218,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005386844743043184,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025322001427412033,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011135830543935299,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009582803584635258,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020990239456295967,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007207995280623436,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0014172241790220141,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03459837660193443,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021951306611299515,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021519523113965988,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03451480716466904,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019736675545573235,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00033406622242182493,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003480382263660431,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02203487604856491,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002682975959032774,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014214027673006058,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016769906505942345,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026575565338134766,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006170322652906179,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019513819366693497,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014457776211202145,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019360605627298355,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03225839138031006,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0017349679255858064,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005902199074625969,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0028692695777863264,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01020262110978365,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017452402040362358,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03682693839073181,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01324599701911211,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0015922009479254484,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013447960838675499,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01910989359021187,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012821177951991558,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002594181802123785,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03189624845981598,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028024129569530487,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004126316402107477,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016797762364149094,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01614312455058098,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020335599780082703,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03964049369096756,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0008139463607221842,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02295415662229061,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0035604711156338453,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013141533359885216,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018789537250995636,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030113402754068375,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008928163908421993,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026742707937955856,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.024695219472050667,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022856658324599266,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0052614882588386536,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019917745143175125,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021380238234996796,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01943024806678295,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0078695984557271,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01984810270369053,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03370695561170578,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.003301053075119853,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017494188621640205,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005195328034460545,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017633473500609398,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0033341331873089075,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009589768014848232,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005365951918065548,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006922461092472076,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013977243565022945,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04699473828077316,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017354903742671013,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011038331314921379,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01232671644538641,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004666045308113098,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014861702919006348,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002273826627060771,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027843058109283447,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014207063242793083,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011149759404361248,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017340974882245064,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011330829933285713,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.05209256708621979,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0034594896715134382,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017522044479846954,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010244406759738922,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020488813519477844,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.037328362464904785,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.12212502956390381,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028636982664465904,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002160657662898302,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0015086299972608685,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002303424524143338,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00620166165754199,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0008439796511083841,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02072559855878353,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023580940440297127,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023636654019355774,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014610989950597286,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016630621626973152,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0034455610439181328,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01704847626388073,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004516314249485731,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0006581213092431426,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.000348429981386289,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009283340536057949,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0074099586345255375,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03039197251200676,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0038964960258454084,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027188418433070183,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0073263878002762794,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008914235979318619,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010070300661027431,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00916494894772768,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021589165553450584,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013545460067689419,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010745832696557045,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007256744895130396,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0213105957955122,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029974117875099182,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006031037773936987,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007904419675469398,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        9.76082737906836e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014360276982188225,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.032704103738069534,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009422625415027142,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0023713260889053345,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018580609932541847,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005059525370597839,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0008653076365590096,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0055191656574606895,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00943655427545309,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0012082968605682254,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00013340884470380843,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0351276621222496,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02540557272732258,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007535315118730068,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0143742049112916,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02150559425354004,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021547378972172737,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.026422351598739624,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004861044231802225,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0014859961811453104,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02484843321144581,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0027439133264124393,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0031704732682555914,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016895262524485588,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004359618294984102,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00426560128107667,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.016560979187488556,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02349736914038658,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04671616852283478,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.05083899945020676,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010258335620164871,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011010474525392056,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0051117572002112865,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0046033672988414764,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020126672461628914,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017118118703365326,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021240953356027603,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005735057406127453,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008983878418803215,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.027160562574863434,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015404913574457169,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012250109575688839,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0019221320981159806,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02518271654844284,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008120311424136162,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021324522793293,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013935457915067673,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012605286203324795,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004707830958068371,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008364059962332249,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013803137466311455,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.05022614821791649,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.030809827148914337,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005553986877202988,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.037690501660108566,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.023121299222111702,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.030475543811917305,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02245273068547249,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005905681289732456,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01240332331508398,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014875630848109722,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013023141771554947,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011553685180842876,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015585984103381634,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0024270399007946253,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004373547155410051,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0026115926448255777,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.022884514182806015,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018051328137516975,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011379579082131386,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0022477107122540474,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0056340754963457584,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014388133771717548,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03799692913889885,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007653707172721624,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011762612499296665,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0015695671318098903,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.015613840892910957,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004415332339704037,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01979238912463188,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0010176505893468857,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0115815419703722,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.028246985748410225,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02707699127495289,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029333407059311867,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018775608390569687,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006908532697707415,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004498903173953295,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012723678722977638,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01575312577188015,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008844593539834023,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010446370579302311,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01871989481151104,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0037293541245162487,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018761681392788887,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02299594320356846,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02372022531926632,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012765464372932911,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.001814186223782599,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0008888120064511895,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01397027913480997,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00282400194555521,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01871989481151104,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014123492874205112,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02221594750881195,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027160562574863434,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0115745784714818,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005310238339006901,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02388736605644226,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009213698096573353,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.021199166774749756,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012089932337403297,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009554946795105934,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017118118703365326,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013190283440053463,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011776541359722614,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0011665113270282745,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013830994255840778,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017299188300967216,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005052560940384865,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012298859655857086,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.017744900658726692,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008036741055548191,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.009798695333302021,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011240294203162193,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010432441718876362,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01590633951127529,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.025711998343467712,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0019325785106047988,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0033759186044335365,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01008422952145338,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012619215063750744,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0030573043040931225,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.006880675908178091,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.020614169538021088,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.00750049389898777,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03596337139606476,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004147208761423826,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004592920653522015,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        8.800522664387245e-06,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007876562885940075,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02721627615392208,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004133280366659164,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.002930206712335348,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006375767756253481,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.024876289069652557,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.031756963580846786,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.006347910966724157,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.018190613016486168,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004272565245628357,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00629567913711071,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04278833046555519,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012382430955767632,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.008015847764909267,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.019402392208576202,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004161137621849775,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010961724445223808,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01742454618215561,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0027682881336659193,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013552424497902393,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010126015171408653,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017633473500609398,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014875630848109722,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016937047243118286,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01741061732172966,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02369236759841442,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01851096749305725,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010717975907027721,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010028515011072159,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014186170883476734,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010773689486086369,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.019694888964295387,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0027421722188591957,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0014868667349219322,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016017766669392586,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0019378017168492079,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.040281202644109726,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022731302306056023,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01129600778222084,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.021909520030021667,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0035569891333580017,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.007799956481903791,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02111559547483921,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013928493484854698,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0001116455823648721,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020279886201024055,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.00018085278861690313,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.004383993335068226,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.02150559425354004,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013538495637476444,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0101817287504673,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.04092191532254219,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01813489943742752,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.007674599997699261,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03295481577515602,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.03487694635987282,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.010711011476814747,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.014485633000731468,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0035831050481647253,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004049709532409906,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.01683954894542694,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.003823371371254325,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013030105270445347,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0012648813426494598,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.022536301985383034,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.012291895225644112,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.09142663329839706,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005985769908875227,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008691379800438881,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03599122539162636,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009659410454332829,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0021293184254318476,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013615102507174015,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0001742149906931445,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.04106120020151138,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012821177951991558,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.002681235084310174,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.01628240942955017,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.013447960838675499,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.029416978359222412,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0003438596904743463,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02034952864050865,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.009485304355621338,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.02221594750881195,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.010864225216209888,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016560979187488556,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.027313776314258575,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -3.237286728108302e-05,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.023302368819713593,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.011741720139980316,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0019935155287384987,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008691379800438881,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.008586916141211987,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.011031366884708405,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.004749616142362356,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.046799737960100174,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.026422351598739624,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.013587245717644691,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.016630621626973152,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0024618611205369234,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0006933778058737516,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005122203379869461,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.005560950841754675,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.005146578419953585,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.017452402040362358,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.015878481790423393,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.001499924692325294,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.018497038632631302,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.012869928032159805,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0101817287504673,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.03869335353374481,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        0.0006285232957452536,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.0020701223984360695,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.020057030022144318,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        -0.014931345358490944\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      ],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""index\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""embedding\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""ada\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""list\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""usage\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""prompt_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 10,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""total_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 10\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""root_run_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""span_type\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""LLM\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""context\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""span_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""0xed3c5ea2433ffb9e\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""trace_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""trace_state\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""end_time\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""2024-02-05T15:00:35.375385\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""events\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""kind\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""SpanKind.INTERNAL\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""links\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""name\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""openai.resources.embeddings.Embeddings.create\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""parent_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""0xf853c85fdfd565fc\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""resource\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""attributes\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""service.name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""schema_url\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""start_time\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""2024-02-05T15:00:34.838300\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""status\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""OK\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""trace_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""span_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""0xed3c5ea2433ffb9e\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""span_type\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""LLM\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""framework\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""input\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""input\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n    [\\\\\\\\\\\\\\\\n      4438,\\\\\\\\\\\\\\\\n      649,\\\\\\\\\\\\\\\\n      6666,\\\\\\\\\\\\\\\\n      387,\\\\\\\\\\\\\\\\n      16997,\\\\\\\\\\\\\\\\n      304,\\\\\\\\\\\\\\\\n      5780,\\\\\\\\\\\\\\\\n      6975,\\\\\\\\\\\\\\\\n      4211,\\\\\\\\\\\\\\\\n      30\\\\\\\\\\\\\\\\n    ]\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""text-embedding-ada-002\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""output\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""data\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""embedding\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n        -0.03242553398013115,\\\\\\\\\\\\\\\\n        0.016978833824396133,\\\\\\\\\\\\\\\\n        0.04613117128610611,\\\\\\\\\\\\\\\\n        -0.021240953356027603,\\\\\\\\\\\\\\\\n        0.00824566837400198,\\\\\\\\\\\\\\\\n        0.002475789748132229,\\\\\\\\\\\\\\\\n        -0.00796013418585062,\\\\\\\\\\\\\\\\n        -0.0012918678112328053,\\\\\\\\\\\\\\\\n        -0.023204870522022247,\\\\\\\\\\\\\\\\n        -0.016755977645516396,\\\\\\\\\\\\\\\\n        0.03791335970163345,\\\\\\\\\\\\\\\\n        0.04351261258125305,\\\\\\\\\\\\\\\\n        -0.020502742379903793,\\\\\\\\\\\\\\\\n        0.020837025716900826,\\\\\\\\\\\\\\\\n        0.0047530983574688435,\\\\\\\\\\\\\\\\n        -0.0031774374656379223,\\\\\\\\\\\\\\\\n        0.022104518488049507,\\\\\\\\\\\\\\\\n        0.022856658324599266,\\\\\\\\\\\\\\\\n        0.001187404035590589,\\\\\\\\\\\\\\\\n        -0.02186773531138897,\\\\\\\\\\\\\\\\n        -0.041200485080480576,\\\\\\\\\\\\\\\\n        0.01962524652481079,\\\\\\\\\\\\\\\\n        0.0078695984557271,\\\\\\\\\\\\\\\\n        -0.015780983492732048,\\\\\\\\\\\\\\\\n        -0.018998464569449425,\\\\\\\\\\\\\\\\n        0.016045624390244484,\\\\\\\\\\\\\\\\n        0.018970608711242676,\\\\\\\\\\\\\\\\n        -0.025335930287837982,\\\\\\\\\\\\\\\\n        -0.009791730903089046,\\\\\\\\\\\\\\\\n        -0.026352709159255028,\\\\\\\\\\\\\\\\n        0.019374534487724304,\\\\\\\\\\\\\\\\n        -0.0050490787252783775,\\\\\\\\\\\\\\\\n        -0.010474227368831635,\\\\\\\\\\\\\\\\n        -0.03468194976449013,\\\\\\\\\\\\\\\\n        -0.018859179690480232,\\\\\\\\\\\\\\\\n        0.015223843045532703,\\\\\\\\\\\\\\\\n        0.020837025716900826,\\\\\\\\\\\\\\\\n        -0.000933209084905684,\\\\\\\\\\\\\\\\n        0.02447236329317093,\\\\\\\\\\\\\\\\n        -0.016254551708698273,\\\\\\\\\\\\\\\\n        0.03292695805430412,\\\\\\\\\\\\\\\\n        0.030308401212096214,\\\\\\\\\\\\\\\\n        -0.004157655406743288,\\\\\\\\\\\\\\\\n        0.003031188389286399,\\\\\\\\\\\\\\\\n        0.014360276982188225,\\\\\\\\\\\\\\\\n        0.017744900658726692,\\\\\\\\\\\\\\\\n        0.014019028283655643,\\\\\\\\\\\\\\\\n        -0.030642686411738396,\\\\\\\\\\\\\\\\n        -0.013642959296703339,\\\\\\\\\\\\\\\\n        0.022633802145719528,\\\\\\\\\\\\\\\\n        0.006379249971359968,\\\\\\\\\\\\\\\\n        0.03782978653907776,\\\\\\\\\\\\\\\\n        -0.025280214846134186,\\\\\\\\\\\\\\\\n        -0.023232726380228996,\\\\\\\\\\\\\\\\n        -0.0056514861062169075,\\\\\\\\\\\\\\\\n        0.008433702401816845,\\\\\\\\\\\\\\\\n        0.024528076872229576,\\\\\\\\\\\\\\\\n        0.00983351655304432,\\\\\\\\\\\\\\\\n        0.014318491332232952,\\\\\\\\\\\\\\\\n        -0.012347609736025333,\\\\\\\\\\\\\\\\n        0.0259487833827734,\\\\\\\\\\\\\\\\n        -0.007270673755556345,\\\\\\\\\\\\\\\\n        0.0008191695087589324,\\\\\\\\\\\\\\\\n        0.01128904428333044,\\\\\\\\\\\\\\\\n        -0.023441653698682785,\\\\\\\\\\\\\\\\n        0.002096238313242793,\\\\\\\\\\\\\\\\n        0.003130428958684206,\\\\\\\\\\\\\\\\n        0.027299847453832626,\\\\\\\\\\\\\\\\n        0.015836697071790695,\\\\\\\\\\\\\\\\n        0.007890491746366024,\\\\\\\\\\\\\\\\n        0.024792717769742012,\\\\\\\\\\\\\\\\n        0.014931345358490944,\\\\\\\\\\\\\\\\n        -0.0024096292909234762,\\\\\\\\\\\\\\\\n        -0.01685347780585289,\\\\\\\\\\\\\\\\n        0.03256481885910034,\\\\\\\\\\\\\\\\n        -0.006233000662177801,\\\\\\\\\\\\\\\\n        -0.014666703529655933,\\\\\\\\\\\\\\\\n        -0.01817668415606022,\\\\\\\\\\\\\\\\n        0.020057030022144318,\\\\\\\\\\\\\\\\n        0.02334415540099144,\\\\\\\\\\\\\\\\n        0.0003349367470946163,\\\\\\\\\\\\\\\\n        0.001270104548893869,\\\\\\\\\\\\\\\\n        -0.002421816810965538,\\\\\\\\\\\\\\\\n        0.028971266001462936,\\\\\\\\\\\\\\\\n        0.0025715481024235487,\\\\\\\\\\\\\\\\n        -0.006772730033844709,\\\\\\\\\\\\\\\\n        0.01924917846918106,\\\\\\\\\\\\\\\\n        0.00851727370172739,\\\\\\\\\\\\\\\\n        -0.0013676040107384324,\\\\\\\\\\\\\\\\n        0.015154200606048107,\\\\\\\\\\\\\\\\n        -0.0007469154661521316,\\\\\\\\\\\\\\\\n        -0.021937377750873566,\\\\\\\\\\\\\\\\n        0.02501557394862175,\\\\\\\\\\\\\\\\n        0.00569327175617218,\\\\\\\\\\\\\\\\n        0.0027856987435370684,\\\\\\\\\\\\\\\\n        0.00991708692163229,\\\\\\\\\\\\\\\\n        -0.012897784821689129,\\\\\\\\\\\\\\\\n        0.03262053057551384,\\\\\\\\\\\\\\\\n        -0.011344757862389088,\\\\\\\\\\\\\\\\n        -0.009346019476652145,\\\\\\\\\\\\\\\\n        -0.01649133674800396,\\\\\\\\\\\\\\\\n        0.022564159706234932,\\\\\\\\\\\\\\\\n        -0.050142575055360794,\\\\\\\\\\\\\\\\n        -0.015683483332395554,\\\\\\\\\\\\\\\\n        0.0019151679007336497,\\\\\\\\\\\\\\\\n        -0.00038238067645579576,\\\\\\\\\\\\\\\\n        0.004690420348197222,\\\\\\\\\\\\\\\\n        -0.006922461092472076,\\\\\\\\\\\\\\\\n        -0.012556537054479122,\\\\\\\\\\\\\\\\n        0.015850625932216644,\\\\\\\\\\\\\\\\n        -0.008635666221380234,\\\\\\\\\\\\\\\\n        0.02835841290652752,\\\\\\\\\\\\\\\\n        0.002049229573458433,\\\\\\\\\\\\\\\\n        -0.03445909172296524,\\\\\\\\\\\\\\\\n        -0.02185380645096302,\\\\\\\\\\\\\\\\n        0.0013754387618973851,\\\\\\\\\\\\\\\\n        -0.0021589165553450584,\\\\\\\\\\\\\\\\n        -0.01778668537735939,\\\\\\\\\\\\\\\\n        -0.03189624845981598,\\\\\\\\\\\\\\\\n        -0.002952840644866228,\\\\\\\\\\\\\\\\n        0.03039197251200676,\\\\\\\\\\\\\\\\n        0.02133845165371895,\\\\\\\\\\\\\\\\n        0.01722954586148262,\\\\\\\\\\\\\\\\n        -0.022912371903657913,\\\\\\\\\\\\\\\\n        0.0070687104016542435,\\\\\\\\\\\\\\\\n        0.026088068261742592,\\\\\\\\\\\\\\\\n        0.007632814347743988,\\\\\\\\\\\\\\\\n        -0.017354903742671013,\\\\\\\\\\\\\\\\n        -0.015377056784927845,\\\\\\\\\\\\\\\\n        -0.026394495740532875,\\\\\\\\\\\\\\\\n        -0.00027508774655871093,\\\\\\\\\\\\\\\\n        0.02110166847705841,\\\\\\\\\\\\\\\\n        -0.014025992713868618,\\\\\\\\\\\\\\\\n        0.017480259761214256,\\\\\\\\\\\\\\\\n        -0.010731903836131096,\\\\\\\\\\\\\\\\n        0.006591659504920244,\\\\\\\\\\\\\\\\n        0.011839219368994236,\\\\\\\\\\\\\\\\n        0.009443518705666065,\\\\\\\\\\\\\\\\n        -0.04482189193367958,\\\\\\\\\\\\\\\\n        0.001659231842495501,\\\\\\\\\\\\\\\\n        -0.0005701977061107755,\\\\\\\\\\\\\\\\n        0.003271454945206642,\\\\\\\\\\\\\\\\n        0.003680604510009289,\\\\\\\\\\\\\\\\n        -0.009965837001800537,\\\\\\\\\\\\\\\\n        -0.008496381342411041,\\\\\\\\\\\\\\\\n        0.04774687439203262,\\\\\\\\\\\\\\\\n        -0.0010742350714281201,\\\\\\\\\\\\\\\\n        0.03092125616967678,\\\\\\\\\\\\\\\\n        -0.0009828293696045876,\\\\\\\\\\\\\\\\n        0.001983069349080324,\\\\\\\\\\\\\\\\n        -0.003698015119880438,\\\\\\\\\\\\\\\\n        -0.021784164011478424,\\\\\\\\\\\\\\\\n        -0.0024183345958590508,\\\\\\\\\\\\\\\\n        0.02372022531926632,\\\\\\\\\\\\\\\\n        0.002155434340238571,\\\\\\\\\\\\\\\\n        0.004714794922620058,\\\\\\\\\\\\\\\\n        -0.0032975708600133657,\\\\\\\\\\\\\\\\n        0.011456185951828957,\\\\\\\\\\\\\\\\n        -0.0017802355578169227,\\\\\\\\\\\\\\\\n        -0.020711669698357582,\\\\\\\\\\\\\\\\n        0.017717042937874794,\\\\\\\\\\\\\\\\n        0.019555604085326195,\\\\\\\\\\\\\\\\n        -0.013064926490187645,\\\\\\\\\\\\\\\\n        -0.018789537250995636,\\\\\\\\\\\\\\\\n        0.031171968206763268,\\\\\\\\\\\\\\\\n        0.02983483299612999,\\\\\\\\\\\\\\\\n        0.024040579795837402,\\\\\\\\\\\\\\\\n        -0.01906810700893402,\\\\\\\\\\\\\\\\n        -0.00750049389898777,\\\\\\\\\\\\\\\\n        -0.006769247818738222,\\\\\\\\\\\\\\\\n        -0.006636927369982004,\\\\\\\\\\\\\\\\n        0.03356767073273659,\\\\\\\\\\\\\\\\n        -0.03002983145415783,\\\\\\\\\\\\\\\\n        -0.003722389927133918,\\\\\\\\\\\\\\\\n        -0.006525499280542135,\\\\\\\\\\\\\\\\n        -0.0018228916451334953,\\\\\\\\\\\\\\\\n        0.045824743807315826,\\\\\\\\\\\\\\\\n        -0.012633143924176693,\\\\\\\\\\\\\\\\n        -0.00638969661667943,\\\\\\\\\\\\\\\\n        -0.023079514503479004,\\\\\\\\\\\\\\\\n        0.00015506330237258226,\\\\\\\\\\\\\\\\n        0.0115745784714818,\\\\\\\\\\\\\\\\n        -0.005292827729135752,\\\\\\\\\\\\\\\\n        0.006156394258141518,\\\\\\\\\\\\\\\\n        -0.010787618346512318,\\\\\\\\\\\\\\\\n        -0.013740458525717258,\\\\\\\\\\\\\\\\n        0.0019430248066782951,\\\\\\\\\\\\\\\\n        -0.01546062808483839,\\\\\\\\\\\\\\\\n        0.003798996564000845,\\\\\\\\\\\\\\\\n        -0.02057238481938839,\\\\\\\\\\\\\\\\n        0.014485633000731468,\\\\\\\\\\\\\\\\n        0.010348870418965816,\\\\\\\\\\\\\\\\n        -0.022828800603747368,\\\\\\\\\\\\\\\\n        -0.01853882521390915,\\\\\\\\\\\\\\\\n        -0.6257793307304382,\\\\\\\\\\\\\\\\n        -0.01268885750323534,\\\\\\\\\\\\\\\\n        -0.008962985128164291,\\\\\\\\\\\\\\\\n        -0.016226695850491524,\\\\\\\\\\\\\\\\n        0.002757841721177101,\\\\\\\\\\\\\\\\n        0.014610989950597286,\\\\\\\\\\\\\\\\n        0.008001919835805893,\\\\\\\\\\\\\\\\n        -0.006703087594360113,\\\\\\\\\\\\\\\\n        -0.016588835045695305,\\\\\\\\\\\\\\\\n        0.031171968206763268,\\\\\\\\\\\\\\\\n        -0.0012178726028651,\\\\\\\\\\\\\\\\n        -0.00945048313587904,\\\\\\\\\\\\\\\\n        -0.007625850383192301,\\\\\\\\\\\\\\\\n        -0.008545130491256714,\\\\\\\\\\\\\\\\n        -0.006142465863376856,\\\\\\\\\\\\\\\\n        -0.03273196145892143,\\\\\\\\\\\\\\\\n        0.006877193693071604,\\\\\\\\\\\\\\\\n        -0.03721693530678749,\\\\\\\\\\\\\\\\n        -0.002716056304052472,\\\\\\\\\\\\\\\\n        0.02557271346449852,\\\\\\\\\\\\\\\\n        -0.04239833354949951,\\\\\\\\\\\\\\\\n        0.029026979580521584,\\\\\\\\\\\\\\\\n        -0.020488813519477844,\\\\\\\\\\\\\\\\n        0.01870596595108509,\\\\\\\\\\\\\\\\n        -0.013016177341341972,\\\\\\\\\\\\\\\\n        -0.010697082616388798,\\\\\\\\\\\\\\\\n        -0.001234412775374949,\\\\\\\\\\\\\\\\n        -0.020990239456295967,\\\\\\\\\\\\\\\\n        0.00547041604295373,\\\\\\\\\\\\\\\\n        0.007389065809547901,\\\\\\\\\\\\\\\\n        0.003456007456406951,\\\\\\\\\\\\\\\\n        -0.006497642025351524,\\\\\\\\\\\\\\\\n        0.010878153145313263,\\\\\\\\\\\\\\\\n        0.01743847317993641,\\\\\\\\\\\\\\\\n        0.03629765287041664,\\\\\\\\\\\\\\\\n        -0.028079843148589134,\\\\\\\\\\\\\\\\n        -0.01167207770049572,\\\\\\\\\\\\\\\\n        0.02114345319569111,\\\\\\\\\\\\\\\\n        -0.020238101482391357,\\\\\\\\\\\\\\\\n        0.04838758707046509,\\\\\\\\\\\\\\\\n        -0.014931345358490944,\\\\\\\\\\\\\\\\n        -0.021268809214234352,\\\\\\\\\\\\\\\\n        0.017647400498390198,\\\\\\\\\\\\\\\\n        -0.010704047046601772,\\\\\\\\\\\\\\\\n        -0.013092784211039543,\\\\\\\\\\\\\\\\n        -0.004081048537045717,\\\\\\\\\\\\\\\\n        0.004920240491628647,\\\\\\\\\\\\\\\\n        0.009443518705666065,\\\\\\\\\\\\\\\\n        -0.004286494106054306,\\\\\\\\\\\\\\\\n        -0.030698399990797043,\\\\\\\\\\\\\\\\n        -0.012222252786159515,\\\\\\\\\\\\\\\\n        0.004610331263393164,\\\\\\\\\\\\\\\\n        -0.006539427675306797,\\\\\\\\\\\\\\\\n        -0.010704047046601772,\\\\\\\\\\\\\\\\n        0.01316242665052414,\\\\\\\\\\\\\\\\n        0.0016461737686768174,\\\\\\\\\\\\\\\\n        0.015808839350938797,\\\\\\\\\\\\\\\\n        0.0050490787252783775,\\\\\\\\\\\\\\\\n        0.01706240512430668,\\\\\\\\\\\\\\\\n        -0.03128339722752571,\\\\\\\\\\\\\\\\n        -0.010397620499134064,\\\\\\\\\\\\\\\\n        0.006609070114791393,\\\\\\\\\\\\\\\\n        -0.014005100354552269,\\\\\\\\\\\\\\\\n        -0.010620476678013802,\\\\\\\\\\\\\\\\n        -0.008844593539834023,\\\\\\\\\\\\\\\\n        0.015808839350938797,\\\\\\\\\\\\\\\\n        0.002947617555037141,\\\\\\\\\\\\\\\\n        0.020447028800845146,\\\\\\\\\\\\\\\\n        0.0003941328322980553,\\\\\\\\\\\\\\\\n        -0.032341960817575455,\\\\\\\\\\\\\\\\n        0.005285863298922777,\\\\\\\\\\\\\\\\n        0.01814882643520832,\\\\\\\\\\\\\\\\n        -0.003840781981125474,\\\\\\\\\\\\\\\\n        0.028093772009015083,\\\\\\\\\\\\\\\\n        0.010759761556982994,\\\\\\\\\\\\\\\\n        0.019221320748329163,\\\\\\\\\\\\\\\\n        0.023789867758750916,\\\\\\\\\\\\\\\\n        0.006313089746981859,\\\\\\\\\\\\\\\\n        -0.001743673230521381,\\\\\\\\\\\\\\\\n        0.004467564169317484,\\\\\\\\\\\\\\\\n        -0.002143247053027153,\\\\\\\\\\\\\\\\n        -0.01204118225723505,\\\\\\\\\\\\\\\\n        -0.0008352743461728096,\\\\\\\\\\\\\\\\n        -0.014005100354552269,\\\\\\\\\\\\\\\\n        -0.0044466713443398476,\\\\\\\\\\\\\\\\n        0.004471046384423971,\\\\\\\\\\\\\\\\n        0.00443970737978816,\\\\\\\\\\\\\\\\n        0.002522798487916589,\\\\\\\\\\\\\\\\n        0.001045507495291531,\\\\\\\\\\\\\\\\n        -0.00662996293976903,\\\\\\\\\\\\\\\\n        0.012751535512506962,\\\\\\\\\\\\\\\\n        0.028999123722314835,\\\\\\\\\\\\\\\\n        -0.012772428803145885,\\\\\\\\\\\\\\\\n        -0.05276113376021385,\\\\\\\\\\\\\\\\n        0.0036701580975204706,\\\\\\\\\\\\\\\\n        0.01165814884006977,\\\\\\\\\\\\\\\\n        0.003628372447565198,\\\\\\\\\\\\\\\\n        0.004941132850944996,\\\\\\\\\\\\\\\\n        0.027007348835468292,\\\\\\\\\\\\\\\\n        -0.023957008495926857,\\\\\\\\\\\\\\\\n        -0.02206273376941681,\\\\\\\\\\\\\\\\n        -0.020460957661271095,\\\\\\\\\\\\\\\\n        0.0030851613264530897,\\\\\\\\\\\\\\\\n        0.0032871244475245476,\\\\\\\\\\\\\\\\n        0.031784821301698685,\\\\\\\\\\\\\\\\n        -0.005334612913429737,\\\\\\\\\\\\\\\\n        0.0031495806761085987,\\\\\\\\\\\\\\\\n        0.014186170883476734,\\\\\\\\\\\\\\\\n        0.012333680875599384,\\\\\\\\\\\\\\\\n        -0.02983483299612999,\\\\\\\\\\\\\\\\n        -0.01555812731385231,\\\\\\\\\\\\\\\\n        0.0032575263176113367,\\\\\\\\\\\\\\\\n        -0.006877193693071604,\\\\\\\\\\\\\\\\n        0.014708489179611206,\\\\\\\\\\\\\\\\n        0.011825291439890862,\\\\\\\\\\\\\\\\n        -0.027898771688342094,\\\\\\\\\\\\\\\\n        0.030419830232858658,\\\\\\\\\\\\\\\\n        0.005745503585785627,\\\\\\\\\\\\\\\\n        0.0027143151964992285,\\\\\\\\\\\\\\\\n        0.01798168569803238,\\\\\\\\\\\\\\\\n        0.007716385181993246,\\\\\\\\\\\\\\\\n        0.0041681015864014626,\\\\\\\\\\\\\\\\n        0.03259267657995224,\\\\\\\\\\\\\\\\n        -0.03242553398013115,\\\\\\\\\\\\\\\\n        -0.011644220910966396,\\\\\\\\\\\\\\\\n        -0.0040392628870904446,\\\\\\\\\\\\\\\\n        0.0037049793172627687,\\\\\\\\\\\\\\\\n        -0.02261987328529358,\\\\\\\\\\\\\\\\n        -0.003987031057476997,\\\\\\\\\\\\\\\\n        0.004185512196272612,\\\\\\\\\\\\\\\\n        0.010244406759738922,\\\\\\\\\\\\\\\\n        -0.006459339056164026,\\\\\\\\\\\\\\\\n        -0.01286296360194683,\\\\\\\\\\\\\\\\n        -0.015279557555913925,\\\\\\\\\\\\\\\\n        0.01408170722424984,\\\\\\\\\\\\\\\\n        0.010070300661027431,\\\\\\\\\\\\\\\\n        -0.02019631490111351,\\\\\\\\\\\\\\\\n        -0.004941132850944996,\\\\\\\\\\\\\\\\n        0.0012892561499029398,\\\\\\\\\\\\\\\\n        -0.021394165232777596,\\\\\\\\\\\\\\\\n        -0.018107041716575623,\\\\\\\\\\\\\\\\n        0.01121243741363287,\\\\\\\\\\\\\\\\n        0.024876289069652557,\\\\\\\\\\\\\\\\n        -0.018775608390569687,\\\\\\\\\\\\\\\\n        -0.04036477580666542,\\\\\\\\\\\\\\\\n        -0.002329540438950062,\\\\\\\\\\\\\\\\n        0.003774621756747365,\\\\\\\\\\\\\\\\n        0.021199166774749756,\\\\\\\\\\\\\\\\n        0.012347609736025333,\\\\\\\\\\\\\\\\n        -0.015251700766384602,\\\\\\\\\\\\\\\\n        0.014130456373095512,\\\\\\\\\\\\\\\\n        -0.02831662818789482,\\\\\\\\\\\\\\\\n        -0.025600571185350418,\\\\\\\\\\\\\\\\n        0.0033637310843914747,\\\\\\\\\\\\\\\\n        -0.028636982664465904,\\\\\\\\\\\\\\\\n        -0.005310238339006901,\\\\\\\\\\\\\\\\n        -0.009561911225318909,\\\\\\\\\\\\\\\\n        -0.031784821301698685,\\\\\\\\\\\\\\\\n        -0.01961131952702999,\\\\\\\\\\\\\\\\n        -0.034347664564847946,\\\\\\\\\\\\\\\\n        0.008921200409531593,\\\\\\\\\\\\\\\\n        0.037133362144231796,\\\\\\\\\\\\\\\\n        -0.02261987328529358,\\\\\\\\\\\\\\\\n        0.00533113069832325,\\\\\\\\\\\\\\\\n        -0.017647400498390198,\\\\\\\\\\\\\\\\n        -0.010759761556982994,\\\\\\\\\\\\\\\\n        -0.0036005156580358744,\\\\\\\\\\\\\\\\n        0.027480917051434517,\\\\\\\\\\\\\\\\n        -0.04855472967028618,\\\\\\\\\\\\\\\\n        -0.018288111314177513,\\\\\\\\\\\\\\\\n        0.013886707834899426,\\\\\\\\\\\\\\\\n        -0.03292695805430412,\\\\\\\\\\\\\\\\n        0.00448845699429512,\\\\\\\\\\\\\\\\n        0.020126672461628914,\\\\\\\\\\\\\\\\n        0.0005741150816902518,\\\\\\\\\\\\\\\\n        0.02518271654844284,\\\\\\\\\\\\\\\\n        -0.011128866113722324,\\\\\\\\\\\\\\\\n        -0.007827813737094402,\\\\\\\\\\\\\\\\n        -0.011247258633375168,\\\\\\\\\\\\\\\\n        -0.021519523113965988,\\\\\\\\\\\\\\\\n        0.01688133366405964,\\\\\\\\\\\\\\\\n        0.022522373124957085,\\\\\\\\\\\\\\\\n        -0.011184580624103546,\\\\\\\\\\\\\\\\n        -0.006800586823374033,\\\\\\\\\\\\\\\\n        0.02888769470155239,\\\\\\\\\\\\\\\\n        0.019513819366693497,\\\\\\\\\\\\\\\\n        0.02702127769589424,\\\\\\\\\\\\\\\\n        0.0124938590452075,\\\\\\\\\\\\\\\\n        -0.007584064733237028,\\\\\\\\\\\\\\\\n        0.0022703444119542837,\\\\\\\\\\\\\\\\n        0.002663824474439025,\\\\\\\\\\\\\\\\n        0.0016209284076467156,\\\\\\\\\\\\\\\\n        -0.019694888964295387,\\\\\\\\\\\\\\\\n        0.008106383495032787,\\\\\\\\\\\\\\\\n        0.0028727517928928137,\\\\\\\\\\\\\\\\n        0.0019517301116138697,\\\\\\\\\\\\\\\\n        0.01454134751111269,\\\\\\\\\\\\\\\\n        -0.005035150330513716,\\\\\\\\\\\\\\\\n        -0.003805960761383176,\\\\\\\\\\\\\\\\n        0.030614828690886497,\\\\\\\\\\\\\\\\n        0.010892082005739212,\\\\\\\\\\\\\\\\n        0.030141260474920273,\\\\\\\\\\\\\\\\n        0.026533780619502068,\\\\\\\\\\\\\\\\n        -0.00798102654516697,\\\\\\\\\\\\\\\\n        0.01232671644538641,\\\\\\\\\\\\\\\\n        0.00907441321760416,\\\\\\\\\\\\\\\\n        0.008886379189789295,\\\\\\\\\\\\\\\\n        -0.02963983453810215,\\\\\\\\\\\\\\\\n        0.0015390985645353794,\\\\\\\\\\\\\\\\n        0.008677451871335506,\\\\\\\\\\\\\\\\n        0.018274184316396713,\\\\\\\\\\\\\\\\n        -0.004565063863992691,\\\\\\\\\\\\\\\\n        -0.0037084612995386124,\\\\\\\\\\\\\\\\n        -0.022536301985383034,\\\\\\\\\\\\\\\\n        0.012890820391476154,\\\\\\\\\\\\\\\\n        0.020837025716900826,\\\\\\\\\\\\\\\\n        0.001690570847131312,\\\\\\\\\\\\\\\\n        0.0038198893889784813,\\\\\\\\\\\\\\\\n        -0.004648634698241949,\\\\\\\\\\\\\\\\n        0.02484843321144581,\\\\\\\\\\\\\\\\n        0.018483111634850502,\\\\\\\\\\\\\\\\n        -0.0064837136305868626,\\\\\\\\\\\\\\\\n        0.022633802145719528,\\\\\\\\\\\\\\\\n        -0.0059091635048389435,\\\\\\\\\\\\\\\\n        0.029918404296040535,\\\\\\\\\\\\\\\\n        0.00407756632193923,\\\\\\\\\\\\\\\\n        0.011240294203162193,\\\\\\\\\\\\\\\\n        0.029556263238191605,\\\\\\\\\\\\\\\\n        0.032119106501340866,\\\\\\\\\\\\\\\\n        -0.02352522499859333,\\\\\\\\\\\\\\\\n        -0.014332420192658901,\\\\\\\\\\\\\\\\n        0.009346019476652145,\\\\\\\\\\\\\\\\n        0.015042773447930813,\\\\\\\\\\\\\\\\n        0.013218140229582787,\\\\\\\\\\\\\\\\n        0.03596337139606476,\\\\\\\\\\\\\\\\n        -0.014652775600552559,\\\\\\\\\\\\\\\\n        0.00887941475957632,\\\\\\\\\\\\\\\\n        -0.0011386543046683073,\\\\\\\\\\\\\\\\n        0.03170125186443329,\\\\\\\\\\\\\\\\n        -0.01923524960875511,\\\\\\\\\\\\\\\\n        -0.01593419723212719,\\\\\\\\\\\\\\\\n        0.003722389927133918,\\\\\\\\\\\\\\\\n        -0.009868337772786617,\\\\\\\\\\\\\\\\n        -0.025642355903983116,\\\\\\\\\\\\\\\\n        0.028804125264286995,\\\\\\\\\\\\\\\\n        -0.001045507495291531,\\\\\\\\\\\\\\\\n        0.048220444470644,\\\\\\\\\\\\\\\\n        0.014527418650686741,\\\\\\\\\\\\\\\\n        0.015028844587504864,\\\\\\\\\\\\\\\\n        -0.002865787595510483,\\\\\\\\\\\\\\\\n        -0.01614312455058098,\\\\\\\\\\\\\\\\n        -0.0019221320981159806,\\\\\\\\\\\\\\\\n        -0.00402881670743227,\\\\\\\\\\\\\\\\n        0.01739668846130371,\\\\\\\\\\\\\\\\n        -0.0023991831112653017,\\\\\\\\\\\\\\\\n        -0.0034995339810848236,\\\\\\\\\\\\\\\\n        8.351655560545623e-05,\\\\\\\\\\\\\\\\n        -0.008252632804214954,\\\\\\\\\\\\\\\\n        0.013914564624428749,\\\\\\\\\\\\\\\\n        0.025140929967164993,\\\\\\\\\\\\\\\\n        0.01775882951915264,\\\\\\\\\\\\\\\\n        0.02057238481938839,\\\\\\\\\\\\\\\\n        0.0185527540743351,\\\\\\\\\\\\\\\\n        -0.017299188300967216,\\\\\\\\\\\\\\\\n        0.004255154635757208,\\\\\\\\\\\\\\\\n        0.0024775308556854725,\\\\\\\\\\\\\\\\n        -0.00890030711889267,\\\\\\\\\\\\\\\\n        0.003868639003485441,\\\\\\\\\\\\\\\\n        -0.001080328831449151,\\\\\\\\\\\\\\\\n        0.001057695015333593,\\\\\\\\\\\\\\\\n        -0.01473634596914053,\\\\\\\\\\\\\\\\n        -0.014931345358490944,\\\\\\\\\\\\\\\\n        -0.011734755709767342,\\\\\\\\\\\\\\\\n        -0.01742454618215561,\\\\\\\\\\\\\\\\n        0.02016845904290676,\\\\\\\\\\\\\\\\n        0.005794253200292587,\\\\\\\\\\\\\\\\n        -0.007660671602934599,\\\\\\\\\\\\\\\\n        0.006361839361488819,\\\\\\\\\\\\\\\\n        0.012479930184781551,\\\\\\\\\\\\\\\\n        0.029305551201105118,\\\\\\\\\\\\\\\\n        -0.025698071345686913,\\\\\\\\\\\\\\\\n        -0.038247644901275635,\\\\\\\\\\\\\\\\n        0.0075562079437077045,\\\\\\\\\\\\\\\\n        -0.002284273039549589,\\\\\\\\\\\\\\\\n        -0.009708159603178501,\\\\\\\\\\\\\\\\n        -0.018650252372026443,\\\\\\\\\\\\\\\\n        -0.008210847154259682,\\\\\\\\\\\\\\\\n        0.017159903421998024,\\\\\\\\\\\\\\\\n        -0.01230582408607006,\\\\\\\\\\\\\\\\n        -0.005630593281239271,\\\\\\\\\\\\\\\\n        -0.011463150382041931,\\\\\\\\\\\\\\\\n        0.006664784159511328,\\\\\\\\\\\\\\\\n        -0.01167207770049572,\\\\\\\\\\\\\\\\n        -0.025447357445955276,\\\\\\\\\\\\\\\\n        -0.018622396513819695,\\\\\\\\\\\\\\\\n        0.003868639003485441,\\\\\\\\\\\\\\\\n        0.015474556013941765,\\\\\\\\\\\\\\\\n        0.009972801432013512,\\\\\\\\\\\\\\\\n        -0.0019238732056692243,\\\\\\\\\\\\\\\\n        -0.0296676903963089,\\\\\\\\\\\\\\\\n        -0.004091495182365179,\\\\\\\\\\\\\\\\n        0.000986311468295753,\\\\\\\\\\\\\\\\n        -0.024374863132834435,\\\\\\\\\\\\\\\\n        -0.01910989359021187,\\\\\\\\\\\\\\\\n        0.01259135827422142,\\\\\\\\\\\\\\\\n        0.00815513264387846,\\\\\\\\\\\\\\\\n        -0.0021954788826406,\\\\\\\\\\\\\\\\n        -0.02259201556444168,\\\\\\\\\\\\\\\\n        -0.004909793846309185,\\\\\\\\\\\\\\\\n        -0.029751261696219444,\\\\\\\\\\\\\\\\n        0.025865212082862854,\\\\\\\\\\\\\\\\n        0.003374177496880293,\\\\\\\\\\\\\\\\n        0.003913906868547201,\\\\\\\\\\\\\\\\n        -0.00026007110136561096,\\\\\\\\\\\\\\\\n        0.026269137859344482,\\\\\\\\\\\\\\\\n        0.013677780516445637,\\\\\\\\\\\\\\\\n        0.002912796102464199,\\\\\\\\\\\\\\\\n        0.014694560319185257,\\\\\\\\\\\\\\\\n        0.02445843443274498,\\\\\\\\\\\\\\\\n        0.0315062515437603,\\\\\\\\\\\\\\\\n        0.0052440776489675045,\\\\\\\\\\\\\\\\n        -0.029054837301373482,\\\\\\\\\\\\\\\\n        -0.0020527117885649204,\\\\\\\\\\\\\\\\n        0.014485633000731468,\\\\\\\\\\\\\\\\n        0.031199825927615166,\\\\\\\\\\\\\\\\n        0.0194441769272089,\\\\\\\\\\\\\\\\n        -0.021463807672262192,\\\\\\\\\\\\\\\\n        0.01390760112553835,\\\\\\\\\\\\\\\\n        -0.041785482317209244,\\\\\\\\\\\\\\\\n        0.012082967907190323,\\\\\\\\\\\\\\\\n        -0.018385611474514008,\\\\\\\\\\\\\\\\n        -0.010550834238529205,\\\\\\\\\\\\\\\\n        0.03019697405397892,\\\\\\\\\\\\\\\\n        0.002575030317530036,\\\\\\\\\\\\\\\\n        -0.05691182613372803,\\\\\\\\\\\\\\\\n        -0.008308346383273602,\\\\\\\\\\\\\\\\n        0.0033585079945623875,\\\\\\\\\\\\\\\\n        0.0067448727786540985,\\\\\\\\\\\\\\\\n        0.03679908066987991,\\\\\\\\\\\\\\\\n        0.0166584774851799,\\\\\\\\\\\\\\\\n        0.010167799890041351,\\\\\\\\\\\\\\\\n        -0.023567011579871178,\\\\\\\\\\\\\\\\n        0.002545432187616825,\\\\\\\\\\\\\\\\n        -0.0002733466972131282,\\\\\\\\\\\\\\\\n        0.005574879702180624,\\\\\\\\\\\\\\\\n        0.003680604510009289,\\\\\\\\\\\\\\\\n        0.02206273376941681,\\\\\\\\\\\\\\\\n        0.0067100515589118,\\\\\\\\\\\\\\\\n        0.020642027258872986,\\\\\\\\\\\\\\\\n        0.009777802042663097,\\\\\\\\\\\\\\\\n        0.004749616142362356,\\\\\\\\\\\\\\\\n        0.022689515724778175,\\\\\\\\\\\\\\\\n        0.011128866113722324,\\\\\\\\\\\\\\\\n        -0.006274786312133074,\\\\\\\\\\\\\\\\n        0.015989910811185837,\\\\\\\\\\\\\\\\n        0.028400197625160217,\\\\\\\\\\\\\\\\n        -0.012201360426843166,\\\\\\\\\\\\\\\\n        0.008475488051772118,\\\\\\\\\\\\\\\\n        -0.025252358987927437,\\\\\\\\\\\\\\\\n        0.037551216781139374,\\\\\\\\\\\\\\\\n        0.014485633000731468,\\\\\\\\\\\\\\\\n        -0.0007073063170537353,\\\\\\\\\\\\\\\\n        0.013886707834899426,\\\\\\\\\\\\\\\\n        -0.018288111314177513,\\\\\\\\\\\\\\\\n        0.013350460678339005,\\\\\\\\\\\\\\\\n        0.038609784096479416,\\\\\\\\\\\\\\\\n        -0.010188693180680275,\\\\\\\\\\\\\\\\n        0.004202922806143761,\\\\\\\\\\\\\\\\n        -0.0083431676030159,\\\\\\\\\\\\\\\\n        -0.019151678308844566,\\\\\\\\\\\\\\\\n        0.031199825927615166,\\\\\\\\\\\\\\\\n        0.017299188300967216,\\\\\\\\\\\\\\\\n        0.0027195382863283157,\\\\\\\\\\\\\\\\n        -0.0003904330951627344,\\\\\\\\\\\\\\\\n        -0.012459037825465202,\\\\\\\\\\\\\\\\n        -0.010801546275615692,\\\\\\\\\\\\\\\\n        -0.02572592720389366,\\\\\\\\\\\\\\\\n        0.002841412788257003,\\\\\\\\\\\\\\\\n        0.011275115422904491,\\\\\\\\\\\\\\\\n        0.006748354993760586,\\\\\\\\\\\\\\\\n        -0.002576771192252636,\\\\\\\\\\\\\\\\n        -0.020976310595870018,\\\\\\\\\\\\\\\\n        0.004812294617295265,\\\\\\\\\\\\\\\\n        -0.026993419975042343,\\\\\\\\\\\\\\\\n        -0.036214083433151245,\\\\\\\\\\\\\\\\n        -0.0018054809188470244,\\\\\\\\\\\\\\\\n        0.021185237914323807,\\\\\\\\\\\\\\\\n        0.00398006709292531,\\\\\\\\\\\\\\\\n        0.0314783938229084,\\\\\\\\\\\\\\\\n        -0.0030607865191996098,\\\\\\\\\\\\\\\\n        -0.006978175137192011,\\\\\\\\\\\\\\\\n        -0.026227353140711784,\\\\\\\\\\\\\\\\n        -0.025642355903983116,\\\\\\\\\\\\\\\\n        -0.0019987388513982296,\\\\\\\\\\\\\\\\n        0.008092454634606838,\\\\\\\\\\\\\\\\n        -0.03796907514333725,\\\\\\\\\\\\\\\\n        -0.05983680859208107,\\\\\\\\\\\\\\\\n        -0.006609070114791393,\\\\\\\\\\\\\\\\n        0.02649199403822422,\\\\\\\\\\\\\\\\n        0.025447357445955276,\\\\\\\\\\\\\\\\n        0.014019028283655643,\\\\\\\\\\\\\\\\n        0.006912014912813902,\\\\\\\\\\\\\\\\n        -0.02817734144628048,\\\\\\\\\\\\\\\\n        0.005762914195656776,\\\\\\\\\\\\\\\\n        -0.017842400819063187,\\\\\\\\\\\\\\\\n        -0.024890217930078506,\\\\\\\\\\\\\\\\n        -0.02241094596683979,\\\\\\\\\\\\\\\\n        -0.007465672679245472,\\\\\\\\\\\\\\\\n        -0.0013162426184862852,\\\\\\\\\\\\\\\\n        0.0015556386206299067,\\\\\\\\\\\\\\\\n        -0.0194859616458416,\\\\\\\\\\\\\\\\n        0.007841741666197777,\\\\\\\\\\\\\\\\n        0.003078197129070759,\\\\\\\\\\\\\\\\n        0.00653594546020031,\\\\\\\\\\\\\\\\n        -0.015056701377034187,\\\\\\\\\\\\\\\\n        0.014429919421672821,\\\\\\\\\\\\\\\\n        0.03950120881199837,\\\\\\\\\\\\\\\\n        -0.02094845473766327,\\\\\\\\\\\\\\\\n        0.021004168316721916,\\\\\\\\\\\\\\\\n        0.015599912963807583,\\\\\\\\\\\\\\\\n        -0.0035761406179517508,\\\\\\\\\\\\\\\\n        0.006410588975995779,\\\\\\\\\\\\\\\\n        0.01812097057700157,\\\\\\\\\\\\\\\\n        -0.022299518808722496,\\\\\\\\\\\\\\\\n        0.010070300661027431,\\\\\\\\\\\\\\\\n        -0.029584120959043503,\\\\\\\\\\\\\\\\n        -0.01138654351234436,\\\\\\\\\\\\\\\\n        -0.02129666693508625,\\\\\\\\\\\\\\\\n        -0.01397027913480997,\\\\\\\\\\\\\\\\n        0.0033114992547780275,\\\\\\\\\\\\\\\\n        -0.010899046435952187,\\\\\\\\\\\\\\\\n        0.007577100303024054,\\\\\\\\\\\\\\\\n        0.01324599701911211,\\\\\\\\\\\\\\\\n        -0.014750274829566479,\\\\\\\\\\\\\\\\n        0.00224422849714756,\\\\\\\\\\\\\\\\n        -0.00853816606104374,\\\\\\\\\\\\\\\\n        0.004585956688970327,\\\\\\\\\\\\\\\\n        -0.01039065606892109,\\\\\\\\\\\\\\\\n        0.02554485760629177,\\\\\\\\\\\\\\\\n        0.001240506418980658,\\\\\\\\\\\\\\\\n        0.04245404899120331,\\\\\\\\\\\\\\\\n        0.00684933690354228,\\\\\\\\\\\\\\\\n        0.007235852535814047,\\\\\\\\\\\\\\\\n        -0.004742652177810669,\\\\\\\\\\\\\\\\n        0.004377028904855251,\\\\\\\\\\\\\\\\n        -0.014708489179611206,\\\\\\\\\\\\\\\\n        0.04490546137094498,\\\\\\\\\\\\\\\\n        0.010042443871498108,\\\\\\\\\\\\\\\\n        -0.006824961863458157,\\\\\\\\\\\\\\\\n        -0.002970251254737377,\\\\\\\\\\\\\\\\n        -0.003893014043569565,\\\\\\\\\\\\\\\\n        -0.0037119435146450996,\\\\\\\\\\\\\\\\n        -0.021213095635175705,\\\\\\\\\\\\\\\\n        0.0035169445909559727,\\\\\\\\\\\\\\\\n        -0.006354874931275845,\\\\\\\\\\\\\\\\n        0.027271989732980728,\\\\\\\\\\\\\\\\n        -0.0010315791005268693,\\\\\\\\\\\\\\\\n        -0.03236981853842735,\\\\\\\\\\\\\\\\n        -0.03223053365945816,\\\\\\\\\\\\\\\\n        -0.025461286306381226,\\\\\\\\\\\\\\\\n        -0.024932002648711205,\\\\\\\\\\\\\\\\n        0.0037955145817250013,\\\\\\\\\\\\\\\\n        -0.022341303527355194,\\\\\\\\\\\\\\\\n        0.013350460678339005,\\\\\\\\\\\\\\\\n        0.013461888767778873,\\\\\\\\\\\\\\\\n        -0.013684744946658611,\\\\\\\\\\\\\\\\n        -0.016268480569124222,\\\\\\\\\\\\\\\\n        -0.012730643153190613,\\\\\\\\\\\\\\\\n        0.033623382449150085,\\\\\\\\\\\\\\\\n        -0.02484843321144581,\\\\\\\\\\\\\\\\n        -0.01997346058487892,\\\\\\\\\\\\\\\\n        0.03245339170098305,\\\\\\\\\\\\\\\\n        0.004046227317303419,\\\\\\\\\\\\\\\\n        0.02463950589299202,\\\\\\\\\\\\\\\\n        -0.0011995915556326509,\\\\\\\\\\\\\\\\n        0.025099145248532295,\\\\\\\\\\\\\\\\n        -0.042342621833086014,\\\\\\\\\\\\\\\\n        -0.029138408601284027,\\\\\\\\\\\\\\\\n        0.0024914592504501343,\\\\\\\\\\\\\\\\n        -0.0042969402857124805,\\\\\\\\\\\\\\\\n        -0.001340617542155087,\\\\\\\\\\\\\\\\n        0.01222921721637249,\\\\\\\\\\\\\\\\n        0.03317767009139061,\\\\\\\\\\\\\\\\n        0.02611592598259449,\\\\\\\\\\\\\\\\n        0.0426211915910244,\\\\\\\\\\\\\\\\n        0.010745832696557045,\\\\\\\\\\\\\\\\n        0.014513489790260792,\\\\\\\\\\\\\\\\n        0.014360276982188225,\\\\\\\\\\\\\\\\n        -0.009854408912360668,\\\\\\\\\\\\\\\\n        -0.004589438438415527,\\\\\\\\\\\\\\\\n        0.016031695529818535,\\\\\\\\\\\\\\\\n        -0.015711341053247452,\\\\\\\\\\\\\\\\n        0.012312788516283035,\\\\\\\\\\\\\\\\n        -0.020252030342817307,\\\\\\\\\\\\\\\\n        0.01703454740345478,\\\\\\\\\\\\\\\\n        -0.01983417384326458,\\\\\\\\\\\\\\\\n        0.024583790451288223,\\\\\\\\\\\\\\\\n        0.006842372473329306,\\\\\\\\\\\\\\\\n        0.030893398448824883,\\\\\\\\\\\\\\\\n        0.002928465837612748,\\\\\\\\\\\\\\\\n        0.004937651101499796,\\\\\\\\\\\\\\\\n        -0.010126015171408653,\\\\\\\\\\\\\\\\n        -0.035211231559515,\\\\\\\\\\\\\\\\n        -0.02239701710641384,\\\\\\\\\\\\\\\\n        -0.008475488051772118,\\\\\\\\\\\\\\\\n        0.007389065809547901,\\\\\\\\\\\\\\\\n        -0.0026307441294193268,\\\\\\\\\\\\\\\\n        0.026046283543109894,\\\\\\\\\\\\\\\\n        -0.023037727922201157,\\\\\\\\\\\\\\\\n        0.009972801432013512,\\\\\\\\\\\\\\\\n        0.009116198867559433,\\\\\\\\\\\\\\\\n        0.0231491569429636,\\\\\\\\\\\\\\\\n        0.004081048537045717,\\\\\\\\\\\\\\\\n        0.015878481790423393,\\\\\\\\\\\\\\\\n        0.007528350688517094,\\\\\\\\\\\\\\\\n        -0.011330829933285713,\\\\\\\\\\\\\\\\n        0.0011726050870493054,\\\\\\\\\\\\\\\\n        0.014443847350776196,\\\\\\\\\\\\\\\\n        0.0314505398273468,\\\\\\\\\\\\\\\\n        -0.010871189646422863,\\\\\\\\\\\\\\\\n        -0.024152006953954697,\\\\\\\\\\\\\\\\n        -0.01945810578763485,\\\\\\\\\\\\\\\\n        0.004760062787681818,\\\\\\\\\\\\\\\\n        0.02702127769589424,\\\\\\\\\\\\\\\\n        0.007079157046973705,\\\\\\\\\\\\\\\\n        0.010522976517677307,\\\\\\\\\\\\\\\\n        0.024750933051109314,\\\\\\\\\\\\\\\\n        0.005362470168620348,\\\\\\\\\\\\\\\\n        -0.022912371903657913,\\\\\\\\\\\\\\\\n        0.014214027673006058,\\\\\\\\\\\\\\\\n        -0.018232397735118866,\\\\\\\\\\\\\\\\n        -0.02352522499859333,\\\\\\\\\\\\\\\\n        -0.00118131039198488,\\\\\\\\\\\\\\\\n        -0.016379907727241516,\\\\\\\\\\\\\\\\n        -0.036046940833330154,\\\\\\\\\\\\\\\\n        -0.004108905792236328,\\\\\\\\\\\\\\\\n        -0.0071871024556458,\\\\\\\\\\\\\\\\n        0.014074742794036865,\\\\\\\\\\\\\\\\n        0.010731903836131096,\\\\\\\\\\\\\\\\n        0.010341905988752842,\\\\\\\\\\\\\\\\n        -0.0037049793172627687,\\\\\\\\\\\\\\\\n        0.004244708456099033,\\\\\\\\\\\\\\\\n        -0.029584120959043503,\\\\\\\\\\\\\\\\n        -0.021575236693024635,\\\\\\\\\\\\\\\\n        0.02022417262196541,\\\\\\\\\\\\\\\\n        0.002024854766204953,\\\\\\\\\\\\\\\\n        0.0305869709700346,\\\\\\\\\\\\\\\\n        -0.0076049575582146645,\\\\\\\\\\\\\\\\n        0.03225839138031006,\\\\\\\\\\\\\\\\n        0.0005266711814329028,\\\\\\\\\\\\\\\\n        0.01611526682972908,\\\\\\\\\\\\\\\\n        0.01546062808483839,\\\\\\\\\\\\\\\\n        0.00016910061822272837,\\\\\\\\\\\\\\\\n        -0.002303424524143338,\\\\\\\\\\\\\\\\n        0.009979765862226486,\\\\\\\\\\\\\\\\n        0.017299188300967216,\\\\\\\\\\\\\\\\n        0.004700866527855396,\\\\\\\\\\\\\\\\n        -0.02054452709853649,\\\\\\\\\\\\\\\\n        -0.0333169549703598,\\\\\\\\\\\\\\\\n        0.003123464761301875,\\\\\\\\\\\\\\\\n        -0.005365951918065548,\\\\\\\\\\\\\\\\n        -0.004286494106054306,\\\\\\\\\\\\\\\\n        -0.020600242540240288,\\\\\\\\\\\\\\\\n        0.011811362579464912,\\\\\\\\\\\\\\\\n        0.004450153559446335,\\\\\\\\\\\\\\\\n        -0.007932277396321297,\\\\\\\\\\\\\\\\n        -0.014227956533432007,\\\\\\\\\\\\\\\\n        -0.017842400819063187,\\\\\\\\\\\\\\\\n        -0.01891489326953888,\\\\\\\\\\\\\\\\n        0.03423623740673065,\\\\\\\\\\\\\\\\n        -0.0049655078910291195,\\\\\\\\\\\\\\\\n        0.0027456542011350393,\\\\\\\\\\\\\\\\n        0.01000762265175581,\\\\\\\\\\\\\\\\n        -0.009227626956999302,\\\\\\\\\\\\\\\\n        -0.009680302813649178,\\\\\\\\\\\\\\\\n        0.02445843443274498,\\\\\\\\\\\\\\\\n        -0.0034403379540890455,\\\\\\\\\\\\\\\\n        0.028943410143256187,\\\\\\\\\\\\\\\\n        0.01703454740345478,\\\\\\\\\\\\\\\\n        0.003194848308339715,\\\\\\\\\\\\\\\\n        0.00689808651804924,\\\\\\\\\\\\\\\\n        0.018608467653393745,\\\\\\\\\\\\\\\\n        0.0008949057082645595,\\\\\\\\\\\\\\\\n        0.020795240998268127,\\\\\\\\\\\\\\\\n        0.011651184409856796,\\\\\\\\\\\\\\\\n        -0.0010846814839169383,\\\\\\\\\\\\\\\\n        -0.014917416498064995,\\\\\\\\\\\\\\\\n        0.014513489790260792,\\\\\\\\\\\\\\\\n        -0.012855999171733856,\\\\\\\\\\\\\\\\n        -0.016379907727241516,\\\\\\\\\\\\\\\\n        0.004185512196272612,\\\\\\\\\\\\\\\\n        -0.003927835263311863,\\\\\\\\\\\\\\\\n        -0.0006729203159920871,\\\\\\\\\\\\\\\\n        0.03206339105963707,\\\\\\\\\\\\\\\\n        -0.03551765903830528,\\\\\\\\\\\\\\\\n        -0.021923448890447617,\\\\\\\\\\\\\\\\n        0.019541677087545395,\\\\\\\\\\\\\\\\n        -0.02649199403822422,\\\\\\\\\\\\\\\\n        0.0024026650935411453,\\\\\\\\\\\\\\\\n        -0.003466453868895769,\\\\\\\\\\\\\\\\n        -0.0016740307910367846,\\\\\\\\\\\\\\\\n        0.010975653305649757,\\\\\\\\\\\\\\\\n        -0.006515052635222673,\\\\\\\\\\\\\\\\n        -0.018970608711242676,\\\\\\\\\\\\\\\\n        0.030865540727972984,\\\\\\\\\\\\\\\\n        0.0036597116850316525,\\\\\\\\\\\\\\\\n        -0.026408424600958824,\\\\\\\\\\\\\\\\n        0.022856658324599266,\\\\\\\\\\\\\\\\n        0.0055853258818387985,\\\\\\\\\\\\\\\\n        0.008969949558377266,\\\\\\\\\\\\\\\\n        -0.02665913663804531,\\\\\\\\\\\\\\\\n        0.013942422345280647,\\\\\\\\\\\\\\\\n        0.0015582501655444503,\\\\\\\\\\\\\\\\n        -0.007904419675469398,\\\\\\\\\\\\\\\\n        -0.005108274985104799,\\\\\\\\\\\\\\\\n        0.007618885952979326,\\\\\\\\\\\\\\\\n        0.01703454740345478,\\\\\\\\\\\\\\\\n        0.0057141645811498165,\\\\\\\\\\\\\\\\n        -0.006351393181830645,\\\\\\\\\\\\\\\\n        -0.00853816606104374,\\\\\\\\\\\\\\\\n        0.005738539155572653,\\\\\\\\\\\\\\\\n        0.020976310595870018,\\\\\\\\\\\\\\\\n        -0.016533121466636658,\\\\\\\\\\\\\\\\n        -0.0011299489997327328,\\\\\\\\\\\\\\\\n        0.016031695529818535,\\\\\\\\\\\\\\\\n        -0.002251192694529891,\\\\\\\\\\\\\\\\n        -0.022661659866571426,\\\\\\\\\\\\\\\\n        4.6818237024126574e-05,\\\\\\\\\\\\\\\\n        -0.013949385844171047,\\\\\\\\\\\\\\\\n        -0.04276047646999359,\\\\\\\\\\\\\\\\n        0.01174868457019329,\\\\\\\\\\\\\\\\n        -0.02204880490899086,\\\\\\\\\\\\\\\\n        -0.02924983575940132,\\\\\\\\\\\\\\\\n        -0.00918584130704403,\\\\\\\\\\\\\\\\n        0.0066613019444048405,\\\\\\\\\\\\\\\\n        0.0064001427963376045,\\\\\\\\\\\\\\\\n        0.013378318399190903,\\\\\\\\\\\\\\\\n        -0.004241226240992546,\\\\\\\\\\\\\\\\n        -0.027550559490919113,\\\\\\\\\\\\\\\\n        0.020321672782301903,\\\\\\\\\\\\\\\\n        0.01370563730597496,\\\\\\\\\\\\\\\\n        -0.006072822958230972,\\\\\\\\\\\\\\\\n        0.0143742049112916,\\\\\\\\\\\\\\\\n        -0.011630292050540447,\\\\\\\\\\\\\\\\n        -0.00518836360424757,\\\\\\\\\\\\\\\\n        -0.0259209256619215,\\\\\\\\\\\\\\\\n        0.022160233929753304,\\\\\\\\\\\\\\\\n        -0.01647740788757801,\\\\\\\\\\\\\\\\n        -0.0026081104297190905,\\\\\\\\\\\\\\\\n        -0.029305551201105118,\\\\\\\\\\\\\\\\n        0.008670487441122532,\\\\\\\\\\\\\\\\n        0.015697412192821503,\\\\\\\\\\\\\\\\n        -0.019903818145394325,\\\\\\\\\\\\\\\\n        -0.012883856892585754,\\\\\\\\\\\\\\\\n        -0.014290634542703629,\\\\\\\\\\\\\\\\n        0.02461164817214012,\\\\\\\\\\\\\\\\n        -0.008496381342411041,\\\\\\\\\\\\\\\\n        0.008642630651593208,\\\\\\\\\\\\\\\\n        0.01362903043627739,\\\\\\\\\\\\\\\\n        0.002970251254737377,\\\\\\\\\\\\\\\\n        -0.01724347472190857,\\\\\\\\\\\\\\\\n        0.030141260474920273,\\\\\\\\\\\\\\\\n        0.002757841721177101,\\\\\\\\\\\\\\\\n        -0.029361264780163765,\\\\\\\\\\\\\\\\n        -0.003017259994521737,\\\\\\\\\\\\\\\\n        -0.0032975708600133657,\\\\\\\\\\\\\\\\n        0.009241555817425251,\\\\\\\\\\\\\\\\n        0.004505867604166269,\\\\\\\\\\\\\\\\n        -0.0370219349861145,\\\\\\\\\\\\\\\\n        -0.028581269085407257,\\\\\\\\\\\\\\\\n        -0.0025837356224656105,\\\\\\\\\\\\\\\\n        -0.004415332339704037,\\\\\\\\\\\\\\\\n        -0.031227681785821915,\\\\\\\\\\\\\\\\n        -0.036966223269701004,\\\\\\\\\\\\\\\\n        -0.028469840064644814,\\\\\\\\\\\\\\\\n        0.03301053121685982,\\\\\\\\\\\\\\\\n        0.046047598123550415,\\\\\\\\\\\\\\\\n        -0.008865485899150372,\\\\\\\\\\\\\\\\n        -0.00989619456231594,\\\\\\\\\\\\\\\\n        -0.020614169538021088,\\\\\\\\\\\\\\\\n        -0.00908834207803011,\\\\\\\\\\\\\\\\n        -0.010070300661027431,\\\\\\\\\\\\\\\\n        -0.022174160927534103,\\\\\\\\\\\\\\\\n        -0.009882265701889992,\\\\\\\\\\\\\\\\n        -0.023929152637720108,\\\\\\\\\\\\\\\\n        0.004760062787681818,\\\\\\\\\\\\\\\\n        -0.015613840892910957,\\\\\\\\\\\\\\\\n        0.02149166539311409,\\\\\\\\\\\\\\\\n        -0.025085216388106346,\\\\\\\\\\\\\\\\n        -0.0047705089673399925,\\\\\\\\\\\\\\\\n        0.0029215014073997736,\\\\\\\\\\\\\\\\n        0.02037738636136055,\\\\\\\\\\\\\\\\n        -0.015599912963807583,\\\\\\\\\\\\\\\\n        9.140573820332065e-05,\\\\\\\\\\\\\\\\n        0.006455856841057539,\\\\\\\\\\\\\\\\n        -0.0077512068673968315,\\\\\\\\\\\\\\\\n        -0.029779119417071342,\\\\\\\\\\\\\\\\n        -0.020084887742996216,\\\\\\\\\\\\\\\\n        -0.0008283100905828178,\\\\\\\\\\\\\\\\n        -0.0034333737567067146,\\\\\\\\\\\\\\\\n        -0.006643891334533691,\\\\\\\\\\\\\\\\n        0.0097429808229208,\\\\\\\\\\\\\\\\n        0.006737908814102411,\\\\\\\\\\\\\\\\n        -0.011365651153028011,\\\\\\\\\\\\\\\\n        0.007563171908259392,\\\\\\\\\\\\\\\\n        0.021073810756206512,\\\\\\\\\\\\\\\\n        0.029556263238191605,\\\\\\\\\\\\\\\\n        0.0026133335195481777,\\\\\\\\\\\\\\\\n        0.01628240942955017,\\\\\\\\\\\\\\\\n        -0.025280214846134186,\\\\\\\\\\\\\\\\n        -0.010000658221542835,\\\\\\\\\\\\\\\\n        0.005564433056861162,\\\\\\\\\\\\\\\\n        -0.0019151679007336497,\\\\\\\\\\\\\\\\n        -0.009283340536057949,\\\\\\\\\\\\\\\\n        -0.005296309478580952,\\\\\\\\\\\\\\\\n        0.03259267657995224,\\\\\\\\\\\\\\\\n        -0.030280545353889465,\\\\\\\\\\\\\\\\n        -9.608484106138349e-05,\\\\\\\\\\\\\\\\n        -0.04055977240204811,\\\\\\\\\\\\\\\\n        -0.0025071287527680397,\\\\\\\\\\\\\\\\n        0.008524238131940365,\\\\\\\\\\\\\\\\n        -0.009694231674075127,\\\\\\\\\\\\\\\\n        0.03390195220708847,\\\\\\\\\\\\\\\\n        0.03259267657995224,\\\\\\\\\\\\\\\\n        -0.019555604085326195,\\\\\\\\\\\\\\\\n        0.025489144027233124,\\\\\\\\\\\\\\\\n        0.0009836998069658875,\\\\\\\\\\\\\\\\n        -0.003118241438642144,\\\\\\\\\\\\\\\\n        -0.02872055396437645,\\\\\\\\\\\\\\\\n        0.012180467136204243,\\\\\\\\\\\\\\\\n        0.000898387806955725,\\\\\\\\\\\\\\\\n        -0.02078131213784218,\\\\\\\\\\\\\\\\n        0.02703520655632019,\\\\\\\\\\\\\\\\n        -0.031227681785821915,\\\\\\\\\\\\\\\\n        -0.012361537665128708,\\\\\\\\\\\\\\\\n        0.0012248369166627526,\\\\\\\\\\\\\\\\n        -0.009332090616226196,\\\\\\\\\\\\\\\\n        -0.006306125316768885,\\\\\\\\\\\\\\\\n        -0.0022372642997652292,\\\\\\\\\\\\\\\\n        -0.014214027673006058,\\\\\\\\\\\\\\\\n        -0.012507786974310875,\\\\\\\\\\\\\\\\n        -0.026993419975042343,\\\\\\\\\\\\\\\\n        0.009617624804377556,\\\\\\\\\\\\\\\\n        0.00241137039847672,\\\\\\\\\\\\\\\\n        -0.026965564116835594,\\\\\\\\\\\\\\\\n        0.016950976103544235,\\\\\\\\\\\\\\\\n        -0.018413469195365906,\\\\\\\\\\\\\\\\n        -0.002905831905081868,\\\\\\\\\\\\\\\\n        -0.01704847626388073,\\\\\\\\\\\\\\\\n        0.0039382814429700375,\\\\\\\\\\\\\\\\n        -0.0002776993496809155,\\\\\\\\\\\\\\\\n        -0.00897691398859024,\\\\\\\\\\\\\\\\n        -0.022508446127176285,\\\\\\\\\\\\\\\\n        0.013468853197991848,\\\\\\\\\\\\\\\\n        -0.014945273287594318,\\\\\\\\\\\\\\\\n        0.004387475550174713,\\\\\\\\\\\\\\\\n        0.00832227524369955,\\\\\\\\\\\\\\\\n        0.019875960424542427,\\\\\\\\\\\\\\\\n        0.00513961398974061,\\\\\\\\\\\\\\\\n        0.007107013836503029,\\\\\\\\\\\\\\\\n        0.2261987328529358,\\\\\\\\\\\\\\\\n        -0.016909191384911537,\\\\\\\\\\\\\\\\n        -0.023093441501259804,\\\\\\\\\\\\\\\\n        0.018580609932541847,\\\\\\\\\\\\\\\\n        0.0011508418247103691,\\\\\\\\\\\\\\\\n        0.010815475136041641,\\\\\\\\\\\\\\\\n        0.024695219472050667,\\\\\\\\\\\\\\\\n        0.009561911225318909,\\\\\\\\\\\\\\\\n        0.007577100303024054,\\\\\\\\\\\\\\\\n        0.010314049199223518,\\\\\\\\\\\\\\\\n        0.023762010037899017,\\\\\\\\\\\\\\\\n        -0.006943353917449713,\\\\\\\\\\\\\\\\n        -0.03746764734387398,\\\\\\\\\\\\\\\\n        -2.649678208399564e-05,\\\\\\\\\\\\\\\\n        0.011268150992691517,\\\\\\\\\\\\\\\\n        -0.0033463204745203257,\\\\\\\\\\\\\\\\n        -0.03590765595436096,\\\\\\\\\\\\\\\\n        -0.0370776504278183,\\\\\\\\\\\\\\\\n        0.0018246326362714171,\\\\\\\\\\\\\\\\n        2.875472273444757e-05,\\\\\\\\\\\\\\\\n        0.012598322704434395,\\\\\\\\\\\\\\\\n        0.0012039442081004381,\\\\\\\\\\\\\\\\n        -0.013106712140142918,\\\\\\\\\\\\\\\\n        -0.041395481675863266,\\\\\\\\\\\\\\\\n        0.04111691191792488,\\\\\\\\\\\\\\\\n        0.0008513791835866868,\\\\\\\\\\\\\\\\n        0.013287782669067383,\\\\\\\\\\\\\\\\n        0.0041681015864014626,\\\\\\\\\\\\\\\\n        0.013942422345280647,\\\\\\\\\\\\\\\\n        0.016226695850491524,\\\\\\\\\\\\\\\\n        -0.019123822450637817,\\\\\\\\\\\\\\\\n        0.020628098398447037,\\\\\\\\\\\\\\\\n        -0.00953405350446701,\\\\\\\\\\\\\\\\n        0.02225773222744465,\\\\\\\\\\\\\\\\n        -0.026728779077529907,\\\\\\\\\\\\\\\\n        -0.007653707172721624,\\\\\\\\\\\\\\\\n        -0.01102440245449543,\\\\\\\\\\\\\\\\n        -0.0048157768324017525,\\\\\\\\\\\\\\\\n        0.04189690947532654,\\\\\\\\\\\\\\\\n        0.012904749251902103,\\\\\\\\\\\\\\\\n        0.011365651153028011,\\\\\\\\\\\\\\\\n        -0.017925970256328583,\\\\\\\\\\\\\\\\n        0.0021084256004542112,\\\\\\\\\\\\\\\\n        -0.0002639884769450873,\\\\\\\\\\\\\\\\n        -0.022689515724778175,\\\\\\\\\\\\\\\\n        0.0012753276387229562,\\\\\\\\\\\\\\\\n        0.0015730492305010557,\\\\\\\\\\\\\\\\n        -0.0352390892803669,\\\\\\\\\\\\\\\\n        0.006664784159511328,\\\\\\\\\\\\\\\\n        0.02405450865626335,\\\\\\\\\\\\\\\\n        -0.027453061193227768,\\\\\\\\\\\\\\\\n        -0.0176056157797575,\\\\\\\\\\\\\\\\n        0.02612985298037529,\\\\\\\\\\\\\\\\n        0.0194441769272089,\\\\\\\\\\\\\\\\n        -0.009589768014848232,\\\\\\\\\\\\\\\\n        0.0013545459369197488,\\\\\\\\\\\\\\\\n        -0.01611526682972908,\\\\\\\\\\\\\\\\n        0.00899084284901619,\\\\\\\\\\\\\\\\n        0.0278152022510767,\\\\\\\\\\\\\\\\n        0.050504717975854874,\\\\\\\\\\\\\\\\n        -0.016783835366368294,\\\\\\\\\\\\\\\\n        0.002054452896118164,\\\\\\\\\\\\\\\\n        0.0024670844431966543,\\\\\\\\\\\\\\\\n        0.03866549953818321,\\\\\\\\\\\\\\\\n        -8.825006079860032e-05,\\\\\\\\\\\\\\\\n        -0.008872450329363346,\\\\\\\\\\\\\\\\n        -0.014903487637639046,\\\\\\\\\\\\\\\\n        0.020112745463848114,\\\\\\\\\\\\\\\\n        0.01611526682972908,\\\\\\\\\\\\\\\\n        -0.02872055396437645,\\\\\\\\\\\\\\\\n        -0.0203634575009346,\\\\\\\\\\\\\\\\n        -0.021199166774749756,\\\\\\\\\\\\\\\\n        0.0074935294687747955,\\\\\\\\\\\\\\\\n        -0.00908834207803011,\\\\\\\\\\\\\\\\n        -0.04432046785950661,\\\\\\\\\\\\\\\\n        -0.01817668415606022,\\\\\\\\\\\\\\\\n        0.016895262524485588,\\\\\\\\\\\\\\\\n        0.015182058326900005,\\\\\\\\\\\\\\\\n        0.008196918293833733,\\\\\\\\\\\\\\\\n        0.027202347293496132,\\\\\\\\\\\\\\\\n        -0.008928163908421993,\\\\\\\\\\\\\\\\n        -0.026547709479928017,\\\\\\\\\\\\\\\\n        -0.00021393295901361853,\\\\\\\\\\\\\\\\n        0.0007360338349826634,\\\\\\\\\\\\\\\\n        -0.01519598625600338,\\\\\\\\\\\\\\\\n        -0.017494188621640205,\\\\\\\\\\\\\\\\n        0.0030990897212177515,\\\\\\\\\\\\\\\\n        -0.016003839671611786,\\\\\\\\\\\\\\\\n        -0.022188089787960052,\\\\\\\\\\\\\\\\n        -0.00564800389111042,\\\\\\\\\\\\\\\\n        0.00279962713830173,\\\\\\\\\\\\\\\\n        -0.016769906505942345,\\\\\\\\\\\\\\\\n        -0.02888769470155239,\\\\\\\\\\\\\\\\n        -0.008482452481985092,\\\\\\\\\\\\\\\\n        -0.01360813807696104,\\\\\\\\\\\\\\\\n        -0.007465672679245472,\\\\\\\\\\\\\\\\n        0.02447236329317093,\\\\\\\\\\\\\\\\n        0.02002917416393757,\\\\\\\\\\\\\\\\n        0.016352051869034767,\\\\\\\\\\\\\\\\n        -0.0038303358014672995,\\\\\\\\\\\\\\\\n        -0.024737004190683365,\\\\\\\\\\\\\\\\n        0.03426409512758255,\\\\\\\\\\\\\\\\n        0.033233385533094406,\\\\\\\\\\\\\\\\n        -0.0007477860199287534,\\\\\\\\\\\\\\\\n        0.008712273091077805,\\\\\\\\\\\\\\\\n        -0.00504211476072669,\\\\\\\\\\\\\\\\n        -0.008252632804214954,\\\\\\\\\\\\\\\\n        0.002853600075468421,\\\\\\\\\\\\\\\\n        -0.0012500822776928544,\\\\\\\\\\\\\\\\n        -0.0013919788179919124,\\\\\\\\\\\\\\\\n        -0.01924917846918106,\\\\\\\\\\\\\\\\n        -0.04707830771803856,\\\\\\\\\\\\\\\\n        0.00417158380150795,\\\\\\\\\\\\\\\\n        -0.005766396410763264,\\\\\\\\\\\\\\\\n        0.002787439851090312,\\\\\\\\\\\\\\\\n        0.008273525163531303,\\\\\\\\\\\\\\\\n        -0.00015647792315576226,\\\\\\\\\\\\\\\\n        0.005480862222611904,\\\\\\\\\\\\\\\\n        0.018483111634850502,\\\\\\\\\\\\\\\\n        -0.013998135924339294,\\\\\\\\\\\\\\\\n        0.0064663030207157135,\\\\\\\\\\\\\\\\n        -0.03275981545448303,\\\\\\\\\\\\\\\\n        0.0011438775109127164,\\\\\\\\\\\\\\\\n        0.005491308402270079,\\\\\\\\\\\\\\\\n        0.015042773447930813,\\\\\\\\\\\\\\\\n        -0.023762010037899017,\\\\\\\\\\\\\\\\n        -0.01020262110978365,\\\\\\\\\\\\\\\\n        -0.008921200409531593,\\\\\\\\\\\\\\\\n        -0.01720169000327587,\\\\\\\\\\\\\\\\n        0.004798366222530603,\\\\\\\\\\\\\\\\n        0.0025889587122946978,\\\\\\\\\\\\\\\\n        -0.03312195837497711,\\\\\\\\\\\\\\\\n        0.013120641000568867,\\\\\\\\\\\\\\\\n        0.018037399277091026,\\\\\\\\\\\\\\\\n        -0.012918678112328053,\\\\\\\\\\\\\\\\n        -0.022299518808722496,\\\\\\\\\\\\\\\\n        0.009304233826696873,\\\\\\\\\\\\\\\\n        -0.029305551201105118,\\\\\\\\\\\\\\\\n        0.009171913377940655,\\\\\\\\\\\\\\\\n        -0.005923091899603605,\\\\\\\\\\\\\\\\n        -0.008969949558377266,\\\\\\\\\\\\\\\\n        -0.01416527759283781,\\\\\\\\\\\\\\\\n        -0.0040845307521522045,\\\\\\\\\\\\\\\\n        -0.01454134751111269,\\\\\\\\\\\\\\\\n        0.008252632804214954,\\\\\\\\\\\\\\\\n        -0.01462491787970066,\\\\\\\\\\\\\\\\n        0.012027254328131676,\\\\\\\\\\\\\\\\n        0.023190941661596298,\\\\\\\\\\\\\\\\n        -0.00426908303052187,\\\\\\\\\\\\\\\\n        -0.02167273499071598,\\\\\\\\\\\\\\\\n        -0.016602763906121254,\\\\\\\\\\\\\\\\n        -0.006811033468693495,\\\\\\\\\\\\\\\\n        -0.00532764894887805,\\\\\\\\\\\\\\\\n        -0.017898114398121834,\\\\\\\\\\\\\\\\n        0.004241226240992546,\\\\\\\\\\\\\\\\n        -0.0002594181860331446,\\\\\\\\\\\\\\\\n        -0.009840480983257294,\\\\\\\\\\\\\\\\n        -0.014290634542703629,\\\\\\\\\\\\\\\\n        -0.0013449701946228743,\\\\\\\\\\\\\\\\n        -0.01463884674012661,\\\\\\\\\\\\\\\\n        -0.014889559708535671,\\\\\\\\\\\\\\\\n        -0.01027922797948122,\\\\\\\\\\\\\\\\n        -0.004516314249485731,\\\\\\\\\\\\\\\\n        -0.004175066016614437,\\\\\\\\\\\\\\\\n        -0.020795240998268127,\\\\\\\\\\\\\\\\n        0.014973130077123642,\\\\\\\\\\\\\\\\n        -0.1780618578195572,\\\\\\\\\\\\\\\\n        0.006654337979853153,\\\\\\\\\\\\\\\\n        0.03075411356985569,\\\\\\\\\\\\\\\\n        -0.030057689175009727,\\\\\\\\\\\\\\\\n        0.00897691398859024,\\\\\\\\\\\\\\\\n        0.008886379189789295,\\\\\\\\\\\\\\\\n        0.002056193770840764,\\\\\\\\\\\\\\\\n        0.0029615459498018026,\\\\\\\\\\\\\\\\n        -0.046576883643865585,\\\\\\\\\\\\\\\\n        0.004498903173953295,\\\\\\\\\\\\\\\\n        0.022828800603747368,\\\\\\\\\\\\\\\\n        -0.03610265627503395,\\\\\\\\\\\\\\\\n        -0.026979491114616394,\\\\\\\\\\\\\\\\n        -0.022271661087870598,\\\\\\\\\\\\\\\\n        0.000401532364776358,\\\\\\\\\\\\\\\\n        -0.0015660850331187248,\\\\\\\\\\\\\\\\n        -0.008259596303105354,\\\\\\\\\\\\\\\\n        0.01500098779797554,\\\\\\\\\\\\\\\\n        0.013998135924339294,\\\\\\\\\\\\\\\\n        0.019569532945752144,\\\\\\\\\\\\\\\\n        0.02944483608007431,\\\\\\\\\\\\\\\\n        -0.009756909683346748,\\\\\\\\\\\\\\\\n        0.007813884876668453,\\\\\\\\\\\\\\\\n        0.0038964960258454084,\\\\\\\\\\\\\\\\n        -0.00426560128107667,\\\\\\\\\\\\\\\\n        -0.007382101379334927,\\\\\\\\\\\\\\\\n        -0.01305099856108427,\\\\\\\\\\\\\\\\n        0.031784821301698685,\\\\\\\\\\\\\\\\n        0.00472524156793952,\\\\\\\\\\\\\\\\n        -0.039751920849084854,\\\\\\\\\\\\\\\\n        0.010418512858450413,\\\\\\\\\\\\\\\\n        -0.0157252699136734,\\\\\\\\\\\\\\\\n        0.010432441718876362,\\\\\\\\\\\\\\\\n        0.005947466939687729,\\\\\\\\\\\\\\\\n        -0.00860780943185091,\\\\\\\\\\\\\\\\n        -0.0009749945602379739,\\\\\\\\\\\\\\\\n        0.001659231842495501,\\\\\\\\\\\\\\\\n        -0.03181267902255058,\\\\\\\\\\\\\\\\n        -0.020962383598089218,\\\\\\\\\\\\\\\\n        0.005386844743043184,\\\\\\\\\\\\\\\\n        0.025322001427412033,\\\\\\\\\\\\\\\\n        0.011135830543935299,\\\\\\\\\\\\\\\\n        0.009582803584635258,\\\\\\\\\\\\\\\\n        0.020990239456295967,\\\\\\\\\\\\\\\\n        -0.007207995280623436,\\\\\\\\\\\\\\\\n        0.0014172241790220141,\\\\\\\\\\\\\\\\n        0.03459837660193443,\\\\\\\\\\\\\\\\n        -0.021951306611299515,\\\\\\\\\\\\\\\\n        0.021519523113965988,\\\\\\\\\\\\\\\\n        -0.03451480716466904,\\\\\\\\\\\\\\\\n        0.019736675545573235,\\\\\\\\\\\\\\\\n        -0.00033406622242182493,\\\\\\\\\\\\\\\\n        0.003480382263660431,\\\\\\\\\\\\\\\\n        -0.02203487604856491,\\\\\\\\\\\\\\\\n        0.002682975959032774,\\\\\\\\\\\\\\\\n        0.014214027673006058,\\\\\\\\\\\\\\\\n        0.016769906505942345,\\\\\\\\\\\\\\\\n        0.026575565338134766,\\\\\\\\\\\\\\\\n        -0.006170322652906179,\\\\\\\\\\\\\\\\n        -0.019513819366693497,\\\\\\\\\\\\\\\\n        -0.014457776211202145,\\\\\\\\\\\\\\\\n        -0.019360605627298355,\\\\\\\\\\\\\\\\n        0.03225839138031006,\\\\\\\\\\\\\\\\n        -0.0017349679255858064,\\\\\\\\\\\\\\\\n        -0.005902199074625969,\\\\\\\\\\\\\\\\n        0.0028692695777863264,\\\\\\\\\\\\\\\\n        0.01020262110978365,\\\\\\\\\\\\\\\\n        0.017452402040362358,\\\\\\\\\\\\\\\\n        -0.03682693839073181,\\\\\\\\\\\\\\\\n        0.01324599701911211,\\\\\\\\\\\\\\\\n        -0.0015922009479254484,\\\\\\\\\\\\\\\\n        -0.013447960838675499,\\\\\\\\\\\\\\\\n        -0.01910989359021187,\\\\\\\\\\\\\\\\n        -0.012821177951991558,\\\\\\\\\\\\\\\\n        0.002594181802123785,\\\\\\\\\\\\\\\\n        0.03189624845981598,\\\\\\\\\\\\\\\\n        -0.028024129569530487,\\\\\\\\\\\\\\\\n        -0.004126316402107477,\\\\\\\\\\\\\\\\n        -0.016797762364149094,\\\\\\\\\\\\\\\\n        0.01614312455058098,\\\\\\\\\\\\\\\\n        -0.020335599780082703,\\\\\\\\\\\\\\\\n        0.03964049369096756,\\\\\\\\\\\\\\\\n        -0.0008139463607221842,\\\\\\\\\\\\\\\\n        0.02295415662229061,\\\\\\\\\\\\\\\\n        -0.0035604711156338453,\\\\\\\\\\\\\\\\n        -0.013141533359885216,\\\\\\\\\\\\\\\\n        0.018789537250995636,\\\\\\\\\\\\\\\\n        0.030113402754068375,\\\\\\\\\\\\\\\\n        -0.008928163908421993,\\\\\\\\\\\\\\\\n        -0.026742707937955856,\\\\\\\\\\\\\\\\n        0.024695219472050667,\\\\\\\\\\\\\\\\n        -0.022856658324599266,\\\\\\\\\\\\\\\\n        -0.0052614882588386536,\\\\\\\\\\\\\\\\n        -0.019917745143175125,\\\\\\\\\\\\\\\\n        0.021380238234996796,\\\\\\\\\\\\\\\\n        0.01943024806678295,\\\\\\\\\\\\\\\\n        0.0078695984557271,\\\\\\\\\\\\\\\\n        -0.01984810270369053,\\\\\\\\\\\\\\\\n        0.03370695561170578,\\\\\\\\\\\\\\\\n        0.003301053075119853,\\\\\\\\\\\\\\\\n        -0.017494188621640205,\\\\\\\\\\\\\\\\n        -0.005195328034460545,\\\\\\\\\\\\\\\\n        -0.017633473500609398,\\\\\\\\\\\\\\\\n        0.0033341331873089075,\\\\\\\\\\\\\\\\n        0.009589768014848232,\\\\\\\\\\\\\\\\n        0.005365951918065548,\\\\\\\\\\\\\\\\n        -0.006922461092472076,\\\\\\\\\\\\\\\\n        -0.013977243565022945,\\\\\\\\\\\\\\\\n        0.04699473828077316,\\\\\\\\\\\\\\\\n        -0.017354903742671013,\\\\\\\\\\\\\\\\n        -0.011038331314921379,\\\\\\\\\\\\\\\\n        -0.01232671644538641,\\\\\\\\\\\\\\\\n        0.004666045308113098,\\\\\\\\\\\\\\\\n        0.014861702919006348,\\\\\\\\\\\\\\\\n        0.002273826627060771,\\\\\\\\\\\\\\\\n        0.027843058109283447,\\\\\\\\\\\\\\\\n        -0.014207063242793083,\\\\\\\\\\\\\\\\n        0.011149759404361248,\\\\\\\\\\\\\\\\n        0.017340974882245064,\\\\\\\\\\\\\\\\n        0.011330829933285713,\\\\\\\\\\\\\\\\n        0.05209256708621979,\\\\\\\\\\\\\\\\n        -0.0034594896715134382,\\\\\\\\\\\\\\\\n        -0.017522044479846954,\\\\\\\\\\\\\\\\n        0.010244406759738922,\\\\\\\\\\\\\\\\n        -0.020488813519477844,\\\\\\\\\\\\\\\\n        -0.037328362464904785,\\\\\\\\\\\\\\\\n        -0.12212502956390381,\\\\\\\\\\\\\\\\n        -0.028636982664465904,\\\\\\\\\\\\\\\\n        0.002160657662898302,\\\\\\\\\\\\\\\\n        0.0015086299972608685,\\\\\\\\\\\\\\\\n        -0.002303424524143338,\\\\\\\\\\\\\\\\n        0.00620166165754199,\\\\\\\\\\\\\\\\n        0.0008439796511083841,\\\\\\\\\\\\\\\\n        0.02072559855878353,\\\\\\\\\\\\\\\\n        -0.023580940440297127,\\\\\\\\\\\\\\\\n        0.023636654019355774,\\\\\\\\\\\\\\\\n        -0.014610989950597286,\\\\\\\\\\\\\\\\n        -0.016630621626973152,\\\\\\\\\\\\\\\\n        0.0034455610439181328,\\\\\\\\\\\\\\\\n        -0.01704847626388073,\\\\\\\\\\\\\\\\n        -0.004516314249485731,\\\\\\\\\\\\\\\\n        -0.0006581213092431426,\\\\\\\\\\\\\\\\n        -0.000348429981386289,\\\\\\\\\\\\\\\\n        -0.009283340536057949,\\\\\\\\\\\\\\\\n        0.0074099586345255375,\\\\\\\\\\\\\\\\n        0.03039197251200676,\\\\\\\\\\\\\\\\n        -0.0038964960258454084,\\\\\\\\\\\\\\\\n        -0.027188418433070183,\\\\\\\\\\\\\\\\n        0.0073263878002762794,\\\\\\\\\\\\\\\\n        0.008914235979318619,\\\\\\\\\\\\\\\\n        -0.010070300661027431,\\\\\\\\\\\\\\\\n        -0.00916494894772768,\\\\\\\\\\\\\\\\n        -0.021589165553450584,\\\\\\\\\\\\\\\\n        0.013545460067689419,\\\\\\\\\\\\\\\\n        -0.010745832696557045,\\\\\\\\\\\\\\\\n        0.007256744895130396,\\\\\\\\\\\\\\\\n        0.0213105957955122,\\\\\\\\\\\\\\\\n        -0.029974117875099182,\\\\\\\\\\\\\\\\n        0.006031037773936987,\\\\\\\\\\\\\\\\n        0.007904419675469398,\\\\\\\\\\\\\\\\n        9.76082737906836e-05,\\\\\\\\\\\\\\\\n        0.014360276982188225,\\\\\\\\\\\\\\\\n        -0.032704103738069534,\\\\\\\\\\\\\\\\n        -0.009422625415027142,\\\\\\\\\\\\\\\\n        0.0023713260889053345,\\\\\\\\\\\\\\\\n        -0.018580609932541847,\\\\\\\\\\\\\\\\n        -0.005059525370597839,\\\\\\\\\\\\\\\\n        0.0008653076365590096,\\\\\\\\\\\\\\\\n        0.0055191656574606895,\\\\\\\\\\\\\\\\n        0.00943655427545309,\\\\\\\\\\\\\\\\n        -0.0012082968605682254,\\\\\\\\\\\\\\\\n        -0.00013340884470380843,\\\\\\\\\\\\\\\\n        -0.0351276621222496,\\\\\\\\\\\\\\\\n        0.02540557272732258,\\\\\\\\\\\\\\\\n        0.007535315118730068,\\\\\\\\\\\\\\\\n        -0.0143742049112916,\\\\\\\\\\\\\\\\n        -0.02150559425354004,\\\\\\\\\\\\\\\\n        -0.021547378972172737,\\\\\\\\\\\\\\\\n        -0.026422351598739624,\\\\\\\\\\\\\\\\n        -0.004861044231802225,\\\\\\\\\\\\\\\\n        0.0014859961811453104,\\\\\\\\\\\\\\\\n        -0.02484843321144581,\\\\\\\\\\\\\\\\n        -0.0027439133264124393,\\\\\\\\\\\\\\\\n        -0.0031704732682555914,\\\\\\\\\\\\\\\\n        0.016895262524485588,\\\\\\\\\\\\\\\\n        -0.004359618294984102,\\\\\\\\\\\\\\\\n        -0.00426560128107667,\\\\\\\\\\\\\\\\n        0.016560979187488556,\\\\\\\\\\\\\\\\n        -0.02349736914038658,\\\\\\\\\\\\\\\\n        0.04671616852283478,\\\\\\\\\\\\\\\\n        0.05083899945020676,\\\\\\\\\\\\\\\\n        -0.010258335620164871,\\\\\\\\\\\\\\\\n        -0.011010474525392056,\\\\\\\\\\\\\\\\n        -0.0051117572002112865,\\\\\\\\\\\\\\\\n        -0.0046033672988414764,\\\\\\\\\\\\\\\\n        -0.020126672461628914,\\\\\\\\\\\\\\\\n        -0.017118118703365326,\\\\\\\\\\\\\\\\n        0.021240953356027603,\\\\\\\\\\\\\\\\n        -0.005735057406127453,\\\\\\\\\\\\\\\\n        0.008983878418803215,\\\\\\\\\\\\\\\\n        -0.027160562574863434,\\\\\\\\\\\\\\\\n        -0.015404913574457169,\\\\\\\\\\\\\\\\n        -0.012250109575688839,\\\\\\\\\\\\\\\\n        0.0019221320981159806,\\\\\\\\\\\\\\\\n        -0.02518271654844284,\\\\\\\\\\\\\\\\n        0.008120311424136162,\\\\\\\\\\\\\\\\n        -0.021324522793293,\\\\\\\\\\\\\\\\n        -0.013935457915067673,\\\\\\\\\\\\\\\\n        -0.012605286203324795,\\\\\\\\\\\\\\\\n        0.004707830958068371,\\\\\\\\\\\\\\\\n        -0.008364059962332249,\\\\\\\\\\\\\\\\n        -0.013803137466311455,\\\\\\\\\\\\\\\\n        -0.05022614821791649,\\\\\\\\\\\\\\\\n        -0.030809827148914337,\\\\\\\\\\\\\\\\n        -0.005553986877202988,\\\\\\\\\\\\\\\\n        -0.037690501660108566,\\\\\\\\\\\\\\\\n        -0.023121299222111702,\\\\\\\\\\\\\\\\n        0.030475543811917305,\\\\\\\\\\\\\\\\n        0.02245273068547249,\\\\\\\\\\\\\\\\n        0.005905681289732456,\\\\\\\\\\\\\\\\n        -0.01240332331508398,\\\\\\\\\\\\\\\\n        -0.014875630848109722,\\\\\\\\\\\\\\\\n        -0.013023141771554947,\\\\\\\\\\\\\\\\n        -0.011553685180842876,\\\\\\\\\\\\\\\\n        0.015585984103381634,\\\\\\\\\\\\\\\\n        0.0024270399007946253,\\\\\\\\\\\\\\\\n        0.004373547155410051,\\\\\\\\\\\\\\\\n        0.0026115926448255777,\\\\\\\\\\\\\\\\n        -0.022884514182806015,\\\\\\\\\\\\\\\\n        0.018051328137516975,\\\\\\\\\\\\\\\\n        0.011379579082131386,\\\\\\\\\\\\\\\\n        0.0022477107122540474,\\\\\\\\\\\\\\\\n        -0.0056340754963457584,\\\\\\\\\\\\\\\\n        0.014388133771717548,\\\\\\\\\\\\\\\\n        0.03799692913889885,\\\\\\\\\\\\\\\\n        -0.007653707172721624,\\\\\\\\\\\\\\\\n        -0.011762612499296665,\\\\\\\\\\\\\\\\n        0.0015695671318098903,\\\\\\\\\\\\\\\\n        -0.015613840892910957,\\\\\\\\\\\\\\\\n        -0.004415332339704037,\\\\\\\\\\\\\\\\n        -0.01979238912463188,\\\\\\\\\\\\\\\\n        -0.0010176505893468857,\\\\\\\\\\\\\\\\n        -0.0115815419703722,\\\\\\\\\\\\\\\\n        -0.028246985748410225,\\\\\\\\\\\\\\\\n        0.02707699127495289,\\\\\\\\\\\\\\\\n        -0.029333407059311867,\\\\\\\\\\\\\\\\n        0.018775608390569687,\\\\\\\\\\\\\\\\n        0.006908532697707415,\\\\\\\\\\\\\\\\n        0.004498903173953295,\\\\\\\\\\\\\\\\n        0.012723678722977638,\\\\\\\\\\\\\\\\n        0.01575312577188015,\\\\\\\\\\\\\\\\n        0.008844593539834023,\\\\\\\\\\\\\\\\n        -0.010446370579302311,\\\\\\\\\\\\\\\\n        -0.01871989481151104,\\\\\\\\\\\\\\\\n        0.0037293541245162487,\\\\\\\\\\\\\\\\n        0.018761681392788887,\\\\\\\\\\\\\\\\n        -0.02299594320356846,\\\\\\\\\\\\\\\\n        -0.02372022531926632,\\\\\\\\\\\\\\\\n        0.012765464372932911,\\\\\\\\\\\\\\\\n        -0.001814186223782599,\\\\\\\\\\\\\\\\n        0.0008888120064511895,\\\\\\\\\\\\\\\\n        0.01397027913480997,\\\\\\\\\\\\\\\\n        0.00282400194555521,\\\\\\\\\\\\\\\\n        -0.01871989481151104,\\\\\\\\\\\\\\\\n        0.014123492874205112,\\\\\\\\\\\\\\\\n        0.02221594750881195,\\\\\\\\\\\\\\\\n        0.027160562574863434,\\\\\\\\\\\\\\\\n        -0.0115745784714818,\\\\\\\\\\\\\\\\n        0.005310238339006901,\\\\\\\\\\\\\\\\n        -0.02388736605644226,\\\\\\\\\\\\\\\\n        -0.009213698096573353,\\\\\\\\\\\\\\\\n        -0.021199166774749756,\\\\\\\\\\\\\\\\n        0.012089932337403297,\\\\\\\\\\\\\\\\n        0.009554946795105934,\\\\\\\\\\\\\\\\n        -0.017118118703365326,\\\\\\\\\\\\\\\\n        -0.013190283440053463,\\\\\\\\\\\\\\\\n        0.011776541359722614,\\\\\\\\\\\\\\\\n        0.0011665113270282745,\\\\\\\\\\\\\\\\n        0.013830994255840778,\\\\\\\\\\\\\\\\n        0.017299188300967216,\\\\\\\\\\\\\\\\n        0.005052560940384865,\\\\\\\\\\\\\\\\n        -0.012298859655857086,\\\\\\\\\\\\\\\\n        -0.017744900658726692,\\\\\\\\\\\\\\\\n        -0.008036741055548191,\\\\\\\\\\\\\\\\n        0.009798695333302021,\\\\\\\\\\\\\\\\n        -0.011240294203162193,\\\\\\\\\\\\\\\\n        0.010432441718876362,\\\\\\\\\\\\\\\\n        -0.01590633951127529,\\\\\\\\\\\\\\\\n        0.025711998343467712,\\\\\\\\\\\\\\\\n        0.0019325785106047988,\\\\\\\\\\\\\\\\n        0.0033759186044335365,\\\\\\\\\\\\\\\\n        -0.01008422952145338,\\\\\\\\\\\\\\\\n        0.012619215063750744,\\\\\\\\\\\\\\\\n        -0.0030573043040931225,\\\\\\\\\\\\\\\\n        -0.006880675908178091,\\\\\\\\\\\\\\\\n        0.020614169538021088,\\\\\\\\\\\\\\\\n        -0.00750049389898777,\\\\\\\\\\\\\\\\n        -0.03596337139606476,\\\\\\\\\\\\\\\\n        -0.004147208761423826,\\\\\\\\\\\\\\\\n        0.004592920653522015,\\\\\\\\\\\\\\\\n        8.800522664387245e-06,\\\\\\\\\\\\\\\\n        -0.007876562885940075,\\\\\\\\\\\\\\\\n        0.02721627615392208,\\\\\\\\\\\\\\\\n        -0.004133280366659164,\\\\\\\\\\\\\\\\n        0.002930206712335348,\\\\\\\\\\\\\\\\n        0.006375767756253481,\\\\\\\\\\\\\\\\n        -0.024876289069652557,\\\\\\\\\\\\\\\\n        0.031756963580846786,\\\\\\\\\\\\\\\\n        0.006347910966724157,\\\\\\\\\\\\\\\\n        -0.018190613016486168,\\\\\\\\\\\\\\\\n        -0.004272565245628357,\\\\\\\\\\\\\\\\n        0.00629567913711071,\\\\\\\\\\\\\\\\n        0.04278833046555519,\\\\\\\\\\\\\\\\n        0.012382430955767632,\\\\\\\\\\\\\\\\n        -0.008015847764909267,\\\\\\\\\\\\\\\\n        0.019402392208576202,\\\\\\\\\\\\\\\\n        -0.004161137621849775,\\\\\\\\\\\\\\\\n        -0.010961724445223808,\\\\\\\\\\\\\\\\n        0.01742454618215561,\\\\\\\\\\\\\\\\n        -0.0027682881336659193,\\\\\\\\\\\\\\\\n        0.013552424497902393,\\\\\\\\\\\\\\\\n        0.010126015171408653,\\\\\\\\\\\\\\\\n        0.017633473500609398,\\\\\\\\\\\\\\\\n        0.014875630848109722,\\\\\\\\\\\\\\\\n        -0.016937047243118286,\\\\\\\\\\\\\\\\n        0.01741061732172966,\\\\\\\\\\\\\\\\n        0.02369236759841442,\\\\\\\\\\\\\\\\n        0.01851096749305725,\\\\\\\\\\\\\\\\n        0.010717975907027721,\\\\\\\\\\\\\\\\n        0.010028515011072159,\\\\\\\\\\\\\\\\n        -0.014186170883476734,\\\\\\\\\\\\\\\\n        -0.010773689486086369,\\\\\\\\\\\\\\\\n        -0.019694888964295387,\\\\\\\\\\\\\\\\n        0.0027421722188591957,\\\\\\\\\\\\\\\\n        0.0014868667349219322,\\\\\\\\\\\\\\\\n        -0.016017766669392586,\\\\\\\\\\\\\\\\n        -0.0019378017168492079,\\\\\\\\\\\\\\\\n        0.040281202644109726,\\\\\\\\\\\\\\\\n        0.022731302306056023,\\\\\\\\\\\\\\\\n        0.01129600778222084,\\\\\\\\\\\\\\\\n        0.021909520030021667,\\\\\\\\\\\\\\\\n        -0.0035569891333580017,\\\\\\\\\\\\\\\\n        -0.007799956481903791,\\\\\\\\\\\\\\\\n        0.02111559547483921,\\\\\\\\\\\\\\\\n        -0.013928493484854698,\\\\\\\\\\\\\\\\n        0.0001116455823648721,\\\\\\\\\\\\\\\\n        -0.020279886201024055,\\\\\\\\\\\\\\\\n        0.00018085278861690313,\\\\\\\\\\\\\\\\n        -0.004383993335068226,\\\\\\\\\\\\\\\\n        -0.02150559425354004,\\\\\\\\\\\\\\\\n        0.013538495637476444,\\\\\\\\\\\\\\\\n        -0.0101817287504673,\\\\\\\\\\\\\\\\n        0.04092191532254219,\\\\\\\\\\\\\\\\n        0.01813489943742752,\\\\\\\\\\\\\\\\n        0.007674599997699261,\\\\\\\\\\\\\\\\n        -0.03295481577515602,\\\\\\\\\\\\\\\\n        0.03487694635987282,\\\\\\\\\\\\\\\\n        0.010711011476814747,\\\\\\\\\\\\\\\\n        0.014485633000731468,\\\\\\\\\\\\\\\\n        -0.0035831050481647253,\\\\\\\\\\\\\\\\n        0.004049709532409906,\\\\\\\\\\\\\\\\n        -0.01683954894542694,\\\\\\\\\\\\\\\\n        -0.003823371371254325,\\\\\\\\\\\\\\\\n        -0.013030105270445347,\\\\\\\\\\\\\\\\n        0.0012648813426494598,\\\\\\\\\\\\\\\\n        0.022536301985383034,\\\\\\\\\\\\\\\\n        0.012291895225644112,\\\\\\\\\\\\\\\\n        0.09142663329839706,\\\\\\\\\\\\\\\\n        0.005985769908875227,\\\\\\\\\\\\\\\\n        0.008691379800438881,\\\\\\\\\\\\\\\\n        -0.03599122539162636,\\\\\\\\\\\\\\\\n        -0.009659410454332829,\\\\\\\\\\\\\\\\n        0.0021293184254318476,\\\\\\\\\\\\\\\\n        0.013615102507174015,\\\\\\\\\\\\\\\\n        0.0001742149906931445,\\\\\\\\\\\\\\\\n        -0.04106120020151138,\\\\\\\\\\\\\\\\n        -0.012821177951991558,\\\\\\\\\\\\\\\\n        -0.002681235084310174,\\\\\\\\\\\\\\\\n        0.01628240942955017,\\\\\\\\\\\\\\\\n        -0.013447960838675499,\\\\\\\\\\\\\\\\n        -0.029416978359222412,\\\\\\\\\\\\\\\\n        0.0003438596904743463,\\\\\\\\\\\\\\\\n        0.02034952864050865,\\\\\\\\\\\\\\\\n        -0.009485304355621338,\\\\\\\\\\\\\\\\n        0.02221594750881195,\\\\\\\\\\\\\\\\n        -0.010864225216209888,\\\\\\\\\\\\\\\\n        -0.016560979187488556,\\\\\\\\\\\\\\\\n        0.027313776314258575,\\\\\\\\\\\\\\\\n        -3.237286728108302e-05,\\\\\\\\\\\\\\\\n        0.023302368819713593,\\\\\\\\\\\\\\\\n        0.011741720139980316,\\\\\\\\\\\\\\\\n        0.0019935155287384987,\\\\\\\\\\\\\\\\n        0.008691379800438881,\\\\\\\\\\\\\\\\n        0.008586916141211987,\\\\\\\\\\\\\\\\n        -0.011031366884708405,\\\\\\\\\\\\\\\\n        0.004749616142362356,\\\\\\\\\\\\\\\\n        -0.046799737960100174,\\\\\\\\\\\\\\\\n        0.026422351598739624,\\\\\\\\\\\\\\\\n        0.013587245717644691,\\\\\\\\\\\\\\\\n        -0.016630621626973152,\\\\\\\\\\\\\\\\n        -0.0024618611205369234,\\\\\\\\\\\\\\\\n        0.0006933778058737516,\\\\\\\\\\\\\\\\n        0.005122203379869461,\\\\\\\\\\\\\\\\n        -0.005560950841754675,\\\\\\\\\\\\\\\\n        0.005146578419953585,\\\\\\\\\\\\\\\\n        0.017452402040362358,\\\\\\\\\\\\\\\\n        0.015878481790423393,\\\\\\\\\\\\\\\\n        0.001499924692325294,\\\\\\\\\\\\\\\\n        0.018497038632631302,\\\\\\\\\\\\\\\\n        -0.012869928032159805,\\\\\\\\\\\\\\\\n        -0.0101817287504673,\\\\\\\\\\\\\\\\n        -0.03869335353374481,\\\\\\\\\\\\\\\\n        0.0006285232957452536,\\\\\\\\\\\\\\\\n        -0.0020701223984360695,\\\\\\\\\\\\\\\\n        -0.020057030022144318,\\\\\\\\\\\\\\\\n        -0.014931345358490944\\\\\\\\\\\\\\\\n      ],\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""index\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0,\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""embedding\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""ada\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""list\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""usage\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""prompt_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 10,\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""total_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 10\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"", \\\\\\\\\\\\\\\""children\\\\\\\\\\\\\\\"": []}\\\\\\\""]}\\\""]}\"", \""{\\\""attributes\\\"": \\\""{\\\\\\\""flow_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""framework\\\\\\\"":\\\\\\\""promptflow\\\\\\\"",\\\\\\\""function\\\\\\\"":\\\\\\\""generate_prompt_context\\\\\\\"",\\\\\\\""inputs\\\\\\\"":\\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""search_result\\\\\\\\\\\\\\\"": [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf3\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n        \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 3,\\\\\\\\n        \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 551,\\\\\\\\n          \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 2502,\\\\\\\\n          \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 35\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n        }\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.3431832194328308\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf0\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n        \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 0,\\\\\\\\n        \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 668,\\\\\\\\n          \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 2874,\\\\\\\\n          \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 50\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n        }\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.3687279224395752\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\\\\\\\\\ndepicted in Figure 2.\\\\\\\\\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\\\\\\\\\ni, KWK\\\\\\\\\\\\\\\\ni, V WV\\\\\\\\\\\\\\\\ni)\\\\\\\\\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dk,WK\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dk,WV\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dv\\\\\\\\\\\\\\\\nandWO\\\\\\\\\\\\\\\\u2208Rhdv\\\\\\\\\\\\\\\\u00d7dmodel.\\\\\\\\\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022In \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\\\\\\\\\n[38, 2, 9].\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\\\\\\\\\nencoder.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\\\\\\\\\u2212\\\\\\\\\\\\\\\\u221e) all values in the input\\\\\\\\\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\\\\\\\\\ndff= 2048 .\\\\\\\\\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\\\\\\\\\u221admodel.\\\\\\\\\\\\\\\\n5\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""metadata\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""source_doc_id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf4\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""chunk_hash\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""b0907ffb4546970af003d72d3c66917f5f097f5428599ff50f68323e538f0da6\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": null,\\\\\\\\n        \\\\\\\\\\\\\\\""page_number\\\\\\\\\\\\\\\"": 4,\\\\\\\\n        \\\\\\\\\\\\\\\""stats\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""tiktokens\\\\\\\\\\\\\\\"": 743,\\\\\\\\n          \\\\\\\\\\\\\\\""chars\\\\\\\\\\\\\\\"": 3190,\\\\\\\\n          \\\\\\\\\\\\\\\""lines\\\\\\\\\\\\\\\"": 49\\\\\\\\n        },\\\\\\\\n        \\\\\\\\\\\\\\\""source\\\\\\\\\\\\\\\"": {\\\\\\\\n          \\\\\\\\\\\\\\\""filename\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""url\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n          \\\\\\\\\\\\\\\""mtime\\\\\\\\\\\\\\\"": 1706775620.0\\\\\\\\n        }\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""score\\\\\\\\\\\\\\\"": 0.3867444396018982\\\\\\\\n    }\\\\\\\\n  ]\\\\\\\\n}\\\\\\\"",\\\\\\\""line_run_id\\\\\\\"":\\\\\\\""371856bd-457d-490c-8f4e-69f825b727d1\\\\\\\"",\\\\\\\""node_name\\\\\\\"":\\\\\\\""generate_prompt_context\\\\\\\"",\\\\\\\""output\\\\\\\"":\\\\\\\""\\\\\\\\\\\\\\\""Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\\\\\\\\\ndepicted in Figure 2.\\\\\\\\\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\\\\\\\\\ni, KWK\\\\\\\\\\\\\\\\ni, V WV\\\\\\\\\\\\\\\\ni)\\\\\\\\\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dk,WK\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dk,WV\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dv\\\\\\\\\\\\\\\\nandWO\\\\\\\\\\\\\\\\u2208Rhdv\\\\\\\\\\\\\\\\u00d7dmodel.\\\\\\\\\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022In \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\\\\\\\\\n[38, 2, 9].\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\\\\\\\\\nencoder.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\\\\\\\\\u2212\\\\\\\\\\\\\\\\u221e) all values in the input\\\\\\\\\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\\\\\\\\\ndff= 2048 .\\\\\\\\\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\\\\\\\\\u221admodel.\\\\\\\\\\\\\\\\n5\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\""\\\\\\\"",\\\\\\\""root_run_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""span_type\\\\\\\"":\\\\\\\""Tool\\\\\\\""}\\\"", \\\""context\\\"": \\\""{\\\\\\\""span_id\\\\\\\"":\\\\\\\""0xfa84e7b78cf74329\\\\\\\"",\\\\\\\""trace_id\\\\\\\"":\\\\\\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\\\\\"",\\\\\\\""trace_state\\\\\\\"":\\\\\\\""[]\\\\\\\""}\\\"", \\\""end_time\\\"": \\\""2024-02-05T15:00:35.432549\\\"", \\\""events\\\"": \\\""[]\\\"", \\\""kind\\\"": \\\""SpanKind.INTERNAL\\\"", \\\""links\\\"": \\\""[]\\\"", \\\""name\\\"": \\\""generate_prompt_context\\\"", \\\""parent_id\\\"": \\\""0xb1e57bf254752dd7\\\"", \\\""resource\\\"": \\\""{\\\\\\\""attributes\\\\\\\"":{\\\\\\\""service.name\\\\\\\"":\\\\\\\""promptflow\\\\\\\""},\\\\\\\""schema_url\\\\\\\"":\\\\\\\""\\\\\\\""}\\\"", \\\""start_time\\\"": \\\""2024-02-05T15:00:35.428012\\\"", \\\""status\\\"": \\\""OK\\\"", \\\""trace_id\\\"": \\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\"", \\\""span_id\\\"": \\\""0xfa84e7b78cf74329\\\"", \\\""span_type\\\"": \\\""Tool\\\"", \\\""framework\\\"": \\\""promptflow\\\"", \\\""input\\\"": \\\""{\\\\n  \\\\\\\""search_result\\\\\\\"": [\\\\n    {\\\\n      \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\n Multi-Head Attention\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\nattention layers running in parallel.\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\nquery with the corresponding key.\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\nquery with all keys, divide each by\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\nvalues.\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\nthe matrix of outputs as:\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\n\\\\\\\\u221adk)V (1)\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\nof1\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\nmatrix multiplication code.\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\u221adk.\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\u00b7k=Pdk\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\n4\\\\\\\"",\\\\n      \\\\\\\""metadata\\\\\\\"": {\\\\n        \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf3\\\\\\\"",\\\\n        \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""5e70d3f796a778829940a4e9a74ec45d4b77ab22a6d4528922932a29f8efe7eb\\\\\\\"",\\\\n        \\\\\\\""mtime\\\\\\\"": null,\\\\n        \\\\\\\""page_number\\\\\\\"": 3,\\\\n        \\\\\\\""stats\\\\\\\"": {\\\\n          \\\\\\\""tiktokens\\\\\\\"": 551,\\\\n          \\\\\\\""chars\\\\\\\"": 2502,\\\\n          \\\\\\\""lines\\\\\\\"": 35\\\\n        },\\\\n        \\\\\\\""source\\\\\\\"": {\\\\n          \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n        }\\\\n      },\\\\n      \\\\\\\""score\\\\\\\"": 0.3431832194328308\\\\n    },\\\\n    {\\\\n      \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\nscholarly works.\\\\\\\\nAttention Is All You Need\\\\\\\\nAshish Vaswani\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nusz@google.com\\\\\\\\nLlion Jones\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\u2217 \\\\\\\\u2020\\\\\\\\nUniversity of Toronto\\\\\\\\naidan@cs.toronto.edu\\\\\\\\u0141ukasz Kaiser\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nlukaszkaiser@google.com\\\\\\\\nIllia Polosukhin\\\\\\\\u2217 \\\\\\\\u2021\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\nAbstract\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\nlarge and limited training data.\\\\\\\\n\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\nour research.\\\\\\\\n\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\n\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\"",\\\\n      \\\\\\\""metadata\\\\\\\"": {\\\\n        \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf0\\\\\\\"",\\\\n        \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""c75669a2c4ea0f4ddb0e7b2c4e85534297615151bb8e8dfef1d05b62aa134744\\\\\\\"",\\\\n        \\\\\\\""mtime\\\\\\\"": null,\\\\n        \\\\\\\""page_number\\\\\\\"": 0,\\\\n        \\\\\\\""stats\\\\\\\"": {\\\\n          \\\\\\\""tiktokens\\\\\\\"": 668,\\\\n          \\\\\\\""chars\\\\\\\"": 2874,\\\\n          \\\\\\\""lines\\\\\\\"": 50\\\\n        },\\\\n        \\\\\\\""source\\\\\\\"": {\\\\n          \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n        }\\\\n      },\\\\n      \\\\\\\""score\\\\\\\"": 0.3687279224395752\\\\n    },\\\\n    {\\\\n      \\\\\\\""text\\\\\\\"": \\\\\\\""Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\ndepicted in Figure 2.\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\ni, KWK\\\\\\\\ni, V WV\\\\\\\\ni)\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dk,WK\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dk,WV\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dv\\\\\\\\nandWO\\\\\\\\u2208Rhdv\\\\\\\\u00d7dmodel.\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\n\\\\\\\\u2022In \\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\n[38, 2, 9].\\\\\\\\n\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\nencoder.\\\\\\\\n\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\u2212\\\\\\\\u221e) all values in the input\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\ndff= 2048 .\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\u221admodel.\\\\\\\\n5\\\\\\\"",\\\\n      \\\\\\\""metadata\\\\\\\"": {\\\\n        \\\\\\\""source_doc_id\\\\\\\"": \\\\\\\""1706.03762.pdf4\\\\\\\"",\\\\n        \\\\\\\""chunk_hash\\\\\\\"": \\\\\\\""b0907ffb4546970af003d72d3c66917f5f097f5428599ff50f68323e538f0da6\\\\\\\"",\\\\n        \\\\\\\""mtime\\\\\\\"": null,\\\\n        \\\\\\\""page_number\\\\\\\"": 4,\\\\n        \\\\\\\""stats\\\\\\\"": {\\\\n          \\\\\\\""tiktokens\\\\\\\"": 743,\\\\n          \\\\\\\""chars\\\\\\\"": 3190,\\\\n          \\\\\\\""lines\\\\\\\"": 49\\\\n        },\\\\n        \\\\\\\""source\\\\\\\"": {\\\\n          \\\\\\\""filename\\\\\\\"": \\\\\\\""1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""url\\\\\\\"": \\\\\\\""azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n          \\\\\\\""mtime\\\\\\\"": 1706775620.0\\\\n        }\\\\n      },\\\\n      \\\\\\\""score\\\\\\\"": 0.3867444396018982\\\\n    }\\\\n  ]\\\\n}\\\"", \\\""output\\\"": \\\""\\\\\\\""Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\n Multi-Head Attention\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\nattention layers running in parallel.\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\nquery with the corresponding key.\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\nquery with all keys, divide each by\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\nvalues.\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\nthe matrix of outputs as:\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\n\\\\\\\\u221adk)V (1)\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\nof1\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\nmatrix multiplication code.\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\u221adk.\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\u00b7k=Pdk\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\n4\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\nscholarly works.\\\\\\\\nAttention Is All You Need\\\\\\\\nAshish Vaswani\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nusz@google.com\\\\\\\\nLlion Jones\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\u2217 \\\\\\\\u2020\\\\\\\\nUniversity of Toronto\\\\\\\\naidan@cs.toronto.edu\\\\\\\\u0141ukasz Kaiser\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nlukaszkaiser@google.com\\\\\\\\nIllia Polosukhin\\\\\\\\u2217 \\\\\\\\u2021\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\nAbstract\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\nlarge and limited training data.\\\\\\\\n\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\nour research.\\\\\\\\n\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\n\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\ndepicted in Figure 2.\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\ni, KWK\\\\\\\\ni, V WV\\\\\\\\ni)\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dk,WK\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dk,WV\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dv\\\\\\\\nandWO\\\\\\\\u2208Rhdv\\\\\\\\u00d7dmodel.\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\n\\\\\\\\u2022In \\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\n[38, 2, 9].\\\\\\\\n\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\nencoder.\\\\\\\\n\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\u2212\\\\\\\\u221e) all values in the input\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\ndff= 2048 .\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\u221admodel.\\\\\\\\n5\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\""\\\"", \\\""children\\\"": []}\"", \""{\\\""attributes\\\"": \\\""{\\\\\\\""flow_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""framework\\\\\\\"":\\\\\\\""promptflow\\\\\\\"",\\\\\\\""function\\\\\\\"":\\\\\\\""render_template_jinja2\\\\\\\"",\\\\\\\""inputs\\\\\\\"":\\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""template\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""system: \\\\\\\\\\\\\\\\nYou are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"".\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n user: \\\\\\\\\\\\\\\\n {{contexts}} \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n chat history: \\\\\\\\\\\\\\\\n{% for item in chat_history %} user: \\\\\\\\\\\\\\\\n{{ item.inputs.question }} \\\\\\\\\\\\\\\\nassistant: \\\\\\\\\\\\\\\\n{{ item.outputs.output }} \\\\\\\\\\\\\\\\n{% endfor %}\\\\\\\\\\\\\\\\nuser: {{question}} \\\\\\\\\\\\\\\\nassistant:\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""chat_history\\\\\\\\\\\\\\\"": [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""inputs\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""question\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""what's Attention?\\\\\\\\\\\\\\\""\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\""outputs\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""output\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Attention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf)\\\\\\\\\\\\\\\""\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  ],\\\\\\\\n  \\\\\\\\\\\\\\\""contexts\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\\\\\\\\\ndepicted in Figure 2.\\\\\\\\\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\\\\\\\\\ni, KWK\\\\\\\\\\\\\\\\ni, V WV\\\\\\\\\\\\\\\\ni)\\\\\\\\\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dk,WK\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dk,WV\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dv\\\\\\\\\\\\\\\\nandWO\\\\\\\\\\\\\\\\u2208Rhdv\\\\\\\\\\\\\\\\u00d7dmodel.\\\\\\\\\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022In \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\\\\\\\\\n[38, 2, 9].\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\\\\\\\\\nencoder.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\\\\\\\\\u2212\\\\\\\\\\\\\\\\u221e) all values in the input\\\\\\\\\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\\\\\\\\\ndff= 2048 .\\\\\\\\\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\\\\\\\\\u221admodel.\\\\\\\\\\\\\\\\n5\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""question\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""how to calculate Attention?\\\\\\\\\\\\\\\""\\\\\\\\n}\\\\\\\"",\\\\\\\""line_run_id\\\\\\\"":\\\\\\\""371856bd-457d-490c-8f4e-69f825b727d1\\\\\\\"",\\\\\\\""node_name\\\\\\\"":\\\\\\\""Prompt_variants\\\\\\\"",\\\\\\\""output\\\\\\\"":\\\\\\\""\\\\\\\\\\\\\\\""system: \\\\\\\\\\\\\\\\nYou are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"".\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n user: \\\\\\\\\\\\\\\\n Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\\\\\\\\\ndepicted in Figure 2.\\\\\\\\\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\\\\\\\\\ni, KWK\\\\\\\\\\\\\\\\ni, V WV\\\\\\\\\\\\\\\\ni)\\\\\\\\\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dk,WK\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dk,WV\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dv\\\\\\\\\\\\\\\\nandWO\\\\\\\\\\\\\\\\u2208Rhdv\\\\\\\\\\\\\\\\u00d7dmodel.\\\\\\\\\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022In \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\\\\\\\\\n[38, 2, 9].\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\\\\\\\\\nencoder.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\\\\\\\\\u2212\\\\\\\\\\\\\\\\u221e) all values in the input\\\\\\\\\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\\\\\\\\\ndff= 2048 .\\\\\\\\\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\\\\\\\\\u221admodel.\\\\\\\\\\\\\\\\n5\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n chat history: \\\\\\\\\\\\\\\\n user: \\\\\\\\\\\\\\\\nwhat's Attention? \\\\\\\\\\\\\\\\nassistant: \\\\\\\\\\\\\\\\nAttention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf) \\\\\\\\\\\\\\\\nuser: how to calculate Attention? \\\\\\\\\\\\\\\\nassistant:\\\\\\\\\\\\\\\""\\\\\\\"",\\\\\\\""root_run_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""span_type\\\\\\\"":\\\\\\\""Tool\\\\\\\""}\\\"", \\\""context\\\"": \\\""{\\\\\\\""span_id\\\\\\\"":\\\\\\\""0x378f894483e371f1\\\\\\\"",\\\\\\\""trace_id\\\\\\\"":\\\\\\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\\\\\"",\\\\\\\""trace_state\\\\\\\"":\\\\\\\""[]\\\\\\\""}\\\"", \\\""end_time\\\"": \\\""2024-02-05T15:00:35.440283\\\"", \\\""events\\\"": \\\""[]\\\"", \\\""kind\\\"": \\\""SpanKind.INTERNAL\\\"", \\\""links\\\"": \\\""[]\\\"", \\\""name\\\"": \\\""Prompt_variants\\\"", \\\""parent_id\\\"": \\\""0xb1e57bf254752dd7\\\"", \\\""resource\\\"": \\\""{\\\\\\\""attributes\\\\\\\"":{\\\\\\\""service.name\\\\\\\"":\\\\\\\""promptflow\\\\\\\""},\\\\\\\""schema_url\\\\\\\"":\\\\\\\""\\\\\\\""}\\\"", \\\""start_time\\\"": \\\""2024-02-05T15:00:35.437097\\\"", \\\""status\\\"": \\\""OK\\\"", \\\""trace_id\\\"": \\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\"", \\\""span_id\\\"": \\\""0x378f894483e371f1\\\"", \\\""span_type\\\"": \\\""Tool\\\"", \\\""framework\\\"": \\\""promptflow\\\"", \\\""input\\\"": \\\""{\\\\n  \\\\\\\""template\\\\\\\"": \\\\\\\""system: \\\\\\\\nYou are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\"".\\\\\\\\n\\\\\\\\n user: \\\\\\\\n {{contexts}} \\\\\\\\n\\\\\\\\n chat history: \\\\\\\\n{% for item in chat_history %} user: \\\\\\\\n{{ item.inputs.question }} \\\\\\\\nassistant: \\\\\\\\n{{ item.outputs.output }} \\\\\\\\n{% endfor %}\\\\\\\\nuser: {{question}} \\\\\\\\nassistant:\\\\\\\"",\\\\n  \\\\\\\""chat_history\\\\\\\"": [\\\\n    {\\\\n      \\\\\\\""inputs\\\\\\\"": {\\\\n        \\\\\\\""question\\\\\\\"": \\\\\\\""what's Attention?\\\\\\\""\\\\n      },\\\\n      \\\\\\\""outputs\\\\\\\"": {\\\\n        \\\\\\\""output\\\\\\\"": \\\\\\\""Attention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf)\\\\\\\""\\\\n      }\\\\n    }\\\\n  ],\\\\n  \\\\\\\""contexts\\\\\\\"": \\\\\\\""Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\n Multi-Head Attention\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\nattention layers running in parallel.\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\nquery with the corresponding key.\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\nquery with all keys, divide each by\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\nvalues.\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\nthe matrix of outputs as:\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\n\\\\\\\\u221adk)V (1)\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\nof1\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\nmatrix multiplication code.\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\u221adk.\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\u00b7k=Pdk\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\n4\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\nscholarly works.\\\\\\\\nAttention Is All You Need\\\\\\\\nAshish Vaswani\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nusz@google.com\\\\\\\\nLlion Jones\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\u2217 \\\\\\\\u2020\\\\\\\\nUniversity of Toronto\\\\\\\\naidan@cs.toronto.edu\\\\\\\\u0141ukasz Kaiser\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nlukaszkaiser@google.com\\\\\\\\nIllia Polosukhin\\\\\\\\u2217 \\\\\\\\u2021\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\nAbstract\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\nlarge and limited training data.\\\\\\\\n\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\nour research.\\\\\\\\n\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\n\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\ndepicted in Figure 2.\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\ni, KWK\\\\\\\\ni, V WV\\\\\\\\ni)\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dk,WK\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dk,WV\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dv\\\\\\\\nandWO\\\\\\\\u2208Rhdv\\\\\\\\u00d7dmodel.\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\n\\\\\\\\u2022In \\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\n[38, 2, 9].\\\\\\\\n\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\nencoder.\\\\\\\\n\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\u2212\\\\\\\\u221e) all values in the input\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\ndff= 2048 .\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\u221admodel.\\\\\\\\n5\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\"",\\\\n  \\\\\\\""question\\\\\\\"": \\\\\\\""how to calculate Attention?\\\\\\\""\\\\n}\\\"", \\\""output\\\"": \\\""\\\\\\\""system: \\\\\\\\nYou are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\"".\\\\\\\\n\\\\\\\\n user: \\\\\\\\n Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\n Multi-Head Attention\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\nattention layers running in parallel.\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\nquery with the corresponding key.\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\nquery with all keys, divide each by\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\nvalues.\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\nthe matrix of outputs as:\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\n\\\\\\\\u221adk)V (1)\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\nof1\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\nmatrix multiplication code.\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\u221adk.\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\u00b7k=Pdk\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\n4\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\nscholarly works.\\\\\\\\nAttention Is All You Need\\\\\\\\nAshish Vaswani\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nusz@google.com\\\\\\\\nLlion Jones\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\u2217 \\\\\\\\u2020\\\\\\\\nUniversity of Toronto\\\\\\\\naidan@cs.toronto.edu\\\\\\\\u0141ukasz Kaiser\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nlukaszkaiser@google.com\\\\\\\\nIllia Polosukhin\\\\\\\\u2217 \\\\\\\\u2021\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\nAbstract\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\nlarge and limited training data.\\\\\\\\n\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\nour research.\\\\\\\\n\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\n\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\ndepicted in Figure 2.\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\ni, KWK\\\\\\\\ni, V WV\\\\\\\\ni)\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dk,WK\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dk,WV\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dv\\\\\\\\nandWO\\\\\\\\u2208Rhdv\\\\\\\\u00d7dmodel.\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\n\\\\\\\\u2022In \\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\n[38, 2, 9].\\\\\\\\n\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\nencoder.\\\\\\\\n\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\u2212\\\\\\\\u221e) all values in the input\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\ndff= 2048 .\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\u221admodel.\\\\\\\\n5\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf \\\\\\\\n\\\\\\\\n chat history: \\\\\\\\n user: \\\\\\\\nwhat's Attention? \\\\\\\\nassistant: \\\\\\\\nAttention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf) \\\\\\\\nuser: how to calculate Attention? \\\\\\\\nassistant:\\\\\\\""\\\"", \\\""children\\\"": []}\"", \""{\\\""attributes\\\"": \\\""{\\\\\\\""flow_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""framework\\\\\\\"":\\\\\\\""promptflow\\\\\\\"",\\\\\\\""function\\\\\\\"":\\\\\\\""AzureOpenAI.chat\\\\\\\"",\\\\\\\""inputs\\\\\\\"":\\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""prompt\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""{{prompt_text}}\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""deployment_name\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""temperature\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""top_p\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\n  \\\\\\\\\\\\\\\""max_tokens\\\\\\\\\\\\\\\"": 1000,\\\\\\\\n  \\\\\\\\\\\\\\\""presence_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""frequency_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""prompt_text\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""system: \\\\\\\\\\\\\\\\nYou are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"".\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n user: \\\\\\\\\\\\\\\\n Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\\\\\\\\\ndepicted in Figure 2.\\\\\\\\\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\\\\\\\\\ni, KWK\\\\\\\\\\\\\\\\ni, V WV\\\\\\\\\\\\\\\\ni)\\\\\\\\\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dk,WK\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dk,WV\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dv\\\\\\\\\\\\\\\\nandWO\\\\\\\\\\\\\\\\u2208Rhdv\\\\\\\\\\\\\\\\u00d7dmodel.\\\\\\\\\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022In \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\\\\\\\\\n[38, 2, 9].\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\\\\\\\\\nencoder.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\\\\\\\\\u2212\\\\\\\\\\\\\\\\u221e) all values in the input\\\\\\\\\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\\\\\\\\\ndff= 2048 .\\\\\\\\\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\\\\\\\\\u221admodel.\\\\\\\\\\\\\\\\n5\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n chat history: \\\\\\\\\\\\\\\\n user: \\\\\\\\\\\\\\\\nwhat's Attention? \\\\\\\\\\\\\\\\nassistant: \\\\\\\\\\\\\\\\nAttention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf) \\\\\\\\\\\\\\\\nuser: how to calculate Attention? \\\\\\\\\\\\\\\\nassistant:\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""stream\\\\\\\\\\\\\\\"": false\\\\\\\\n}\\\\\\\"",\\\\\\\""line_run_id\\\\\\\"":\\\\\\\""371856bd-457d-490c-8f4e-69f825b727d1\\\\\\\"",\\\\\\\""node_name\\\\\\\"":\\\\\\\""answer_the_question_with_context\\\\\\\"",\\\\\\\""output\\\\\\\"":\\\\\\\""\\\\\\\\\\\\\\\""There are different ways to calculate attention, but one commonly used method is Scaled Dot-Product Attention. In this method, the input consists of queries and keys of dimension dk, and values of dimension dv. The dot products of the query with all keys are computed, divided by the square root of dk, and a softmax function is applied to obtain the weights on the values. The attention function can be computed on a set of queries simultaneously, packed together into a matrix Q, with the keys and values also packed together into matrices K and V. The matrix of outputs is then computed as Attention(Q, K, V) = softmax(QKT/\\\\\\\\\\\\\\\\u221adk)V. (Source: 1706.03762.pdf)\\\\\\\\\\\\\\\""\\\\\\\"",\\\\\\\""root_run_id\\\\\\\"":\\\\\\\""\\\\\\\"",\\\\\\\""span_type\\\\\\\"":\\\\\\\""Tool\\\\\\\""}\\\"", \\\""context\\\"": \\\""{\\\\\\\""span_id\\\\\\\"":\\\\\\\""0x5ede77c145eebbff\\\\\\\"",\\\\\\\""trace_id\\\\\\\"":\\\\\\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\\\\\"",\\\\\\\""trace_state\\\\\\\"":\\\\\\\""[]\\\\\\\""}\\\"", \\\""end_time\\\"": \\\""2024-02-05T15:00:37.703542\\\"", \\\""events\\\"": \\\""[]\\\"", \\\""kind\\\"": \\\""SpanKind.INTERNAL\\\"", \\\""links\\\"": \\\""[]\\\"", \\\""name\\\"": \\\""answer_the_question_with_context\\\"", \\\""parent_id\\\"": \\\""0xb1e57bf254752dd7\\\"", \\\""resource\\\"": \\\""{\\\\\\\""attributes\\\\\\\"":{\\\\\\\""service.name\\\\\\\"":\\\\\\\""promptflow\\\\\\\""},\\\\\\\""schema_url\\\\\\\"":\\\\\\\""\\\\\\\""}\\\"", \\\""start_time\\\"": \\\""2024-02-05T15:00:35.443959\\\"", \\\""status\\\"": \\\""OK\\\"", \\\""trace_id\\\"": \\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\"", \\\""span_id\\\"": \\\""0x5ede77c145eebbff\\\"", \\\""span_type\\\"": \\\""Tool\\\"", \\\""framework\\\"": \\\""promptflow\\\"", \\\""input\\\"": \\\""{\\\\n  \\\\\\\""prompt\\\\\\\"": \\\\\\\""{{prompt_text}}\\\\\\\"",\\\\n  \\\\\\\""deployment_name\\\\\\\"": \\\\\\\""gpt-35-turbo\\\\\\\"",\\\\n  \\\\\\\""temperature\\\\\\\"": 0.0,\\\\n  \\\\\\\""top_p\\\\\\\"": 1.0,\\\\n  \\\\\\\""max_tokens\\\\\\\"": 1000,\\\\n  \\\\\\\""presence_penalty\\\\\\\"": 0.0,\\\\n  \\\\\\\""frequency_penalty\\\\\\\"": 0.0,\\\\n  \\\\\\\""prompt_text\\\\\\\"": \\\\\\\""system: \\\\\\\\nYou are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\"".\\\\\\\\n\\\\\\\\n user: \\\\\\\\n Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\n Multi-Head Attention\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\nattention layers running in parallel.\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\nquery with the corresponding key.\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\nquery with all keys, divide each by\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\nvalues.\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\nthe matrix of outputs as:\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\n\\\\\\\\u221adk)V (1)\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\nof1\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\nmatrix multiplication code.\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\u221adk.\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\u00b7k=Pdk\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\n4\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\nscholarly works.\\\\\\\\nAttention Is All You Need\\\\\\\\nAshish Vaswani\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nusz@google.com\\\\\\\\nLlion Jones\\\\\\\\u2217\\\\\\\\nGoogle Research\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\u2217 \\\\\\\\u2020\\\\\\\\nUniversity of Toronto\\\\\\\\naidan@cs.toronto.edu\\\\\\\\u0141ukasz Kaiser\\\\\\\\u2217\\\\\\\\nGoogle Brain\\\\\\\\nlukaszkaiser@google.com\\\\\\\\nIllia Polosukhin\\\\\\\\u2217 \\\\\\\\u2021\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\nAbstract\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\nlarge and limited training data.\\\\\\\\n\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\nour research.\\\\\\\\n\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\n\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\n\\\\\\\\nContent: Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\ndepicted in Figure 2.\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\ni, KWK\\\\\\\\ni, V WV\\\\\\\\ni)\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dk,WK\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dk,WV\\\\\\\\ni\\\\\\\\u2208Rdmodel\\\\\\\\u00d7dv\\\\\\\\nandWO\\\\\\\\u2208Rhdv\\\\\\\\u00d7dmodel.\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\n\\\\\\\\u2022In \\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\n[38, 2, 9].\\\\\\\\n\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\nencoder.\\\\\\\\n\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\u2212\\\\\\\\u221e) all values in the input\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\ndff= 2048 .\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\u221admodel.\\\\\\\\n5\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf \\\\\\\\n\\\\\\\\n chat history: \\\\\\\\n user: \\\\\\\\nwhat's Attention? \\\\\\\\nassistant: \\\\\\\\nAttention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf) \\\\\\\\nuser: how to calculate Attention? \\\\\\\\nassistant:\\\\\\\"",\\\\n  \\\\\\\""stream\\\\\\\"": false\\\\n}\\\"", \\\""output\\\"": \\\""\\\\\\\""There are different ways to calculate attention, but one commonly used method is Scaled Dot-Product Attention. In this method, the input consists of queries and keys of dimension dk, and values of dimension dv. The dot products of the query with all keys are computed, divided by the square root of dk, and a softmax function is applied to obtain the weights on the values. The attention function can be computed on a set of queries simultaneously, packed together into a matrix Q, with the keys and values also packed together into matrices K and V. The matrix of outputs is then computed as Attention(Q, K, V) = softmax(QKT/\\\\\\\\u221adk)V. (Source: 1706.03762.pdf)\\\\\\\""\\\"", \\\""children\\\"": [\\\""{\\\\\\\""attributes\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""flow_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""framework\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""function\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""openai.resources.chat.completions.Completions.create\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""inputs\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""messages\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""system\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""You are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"".\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndepicted in Figure 2.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni, KWK\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni, V WV\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u00d7dk,WK\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u00d7dk,WV\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u00d7dv\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nandWO\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2208Rhdv\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u00d7dmodel.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2022In \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n[38, 2, 9].\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nencoder.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2212\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221e) all values in the input\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ndff= 2048 .\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221admodel.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n5\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n chat history:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""what's Attention?\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    },\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Attention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf) \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nuser: how to calculate Attention? \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nassistant:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""temperature\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""top_p\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stream\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": false,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""max_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1000,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""presence_penalty\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""frequency_penalty\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""logit_bias\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {},\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""response_format\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""line_run_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""371856bd-457d-490c-8f4e-69f825b727d1\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""node_name\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""answer_the_question_with_context\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""output\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""{\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chatcmpl-8oukVwdxBlTok7CeTJgzgw2kZXOlp\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""choices\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": [\\\\\\\\\\\\\\\\n    {\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""finish_reason\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""index\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 0,\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""logprobs\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""message\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""There are different ways to calculate attention, but one commonly used method is Scaled Dot-Product Attention. In this method, the input consists of queries and keys of dimension dk, and values of dimension dv. The dot products of the query with all keys are computed, divided by the square root of dk, and a softmax function is applied to obtain the weights on the values. The attention function can be computed on a set of queries simultaneously, packed together into a matrix Q, with the keys and values also packed together into matrices K and V. The matrix of outputs is then computed as Attention(Q, K, V) = softmax(QKT/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u221adk)V. (Source: 1706.03762.pdf)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""function_call\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""tool_calls\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null\\\\\\\\\\\\\\\\n      }\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n  ],\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""created\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 1707145235,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""chat.completion\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""system_fingerprint\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": null,\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""usage\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": {\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""completion_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 146,\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""prompt_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 2296,\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""total_tokens\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"": 2442\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""root_run_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""span_type\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""LLM\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""context\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""span_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""0xfd838350b49af420\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""trace_id\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\\\\\\\\\\\\\"",\\\\\\\\\\\\\\\""trace_state\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""[]\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""end_time\\\\\\\"": \\\\\\\""2024-02-05T15:00:37.701347\\\\\\\"", \\\\\\\""events\\\\\\\"": \\\\\\\""[]\\\\\\\"", \\\\\\\""kind\\\\\\\"": \\\\\\\""SpanKind.INTERNAL\\\\\\\"", \\\\\\\""links\\\\\\\"": \\\\\\\""[]\\\\\\\"", \\\\\\\""name\\\\\\\"": \\\\\\\""openai.resources.chat.completions.Completions.create\\\\\\\"", \\\\\\\""parent_id\\\\\\\"": \\\\\\\""0x5ede77c145eebbff\\\\\\\"", \\\\\\\""resource\\\\\\\"": \\\\\\\""{\\\\\\\\\\\\\\\""attributes\\\\\\\\\\\\\\\"":{\\\\\\\\\\\\\\\""service.name\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""promptflow\\\\\\\\\\\\\\\""},\\\\\\\\\\\\\\\""schema_url\\\\\\\\\\\\\\\"":\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\""}\\\\\\\"", \\\\\\\""start_time\\\\\\\"": \\\\\\\""2024-02-05T15:00:35.446699\\\\\\\"", \\\\\\\""status\\\\\\\"": \\\\\\\""OK\\\\\\\"", \\\\\\\""trace_id\\\\\\\"": \\\\\\\""0x1f1ba2e1d4bdeb64c858cd9c0fc941cf\\\\\\\"", \\\\\\\""span_id\\\\\\\"": \\\\\\\""0xfd838350b49af420\\\\\\\"", \\\\\\\""span_type\\\\\\\"": \\\\\\\""LLM\\\\\\\"", \\\\\\\""framework\\\\\\\"": \\\\\\\""promptflow\\\\\\\"", \\\\\\\""input\\\\\\\"": \\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""messages\\\\\\\\\\\\\\\"": [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""system\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""You are an AI assistant that helps users answer questions given a specific context and conversation history. You will be given a context and chat history, and then asked a question based on that context and history. Your answer should be as precise as possible, and should only come from the context.\\\\\\\\\\\\\\\\nPlease add citation after each sentence when possible in a form \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""(Source: citation)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"".\\\\\\\\\\\\\\\""\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Content: Title: 1706.03762.pdfScaled Dot-Product Attention\\\\\\\\\\\\\\\\n Multi-Head Attention\\\\\\\\\\\\\\\\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\\\\\\\\\\\\\\\\nattention layers running in parallel.\\\\\\\\\\\\\\\\nof the values, where the weight assigned to each value is computed by a compatibility function of the\\\\\\\\\\\\\\\\nquery with the corresponding key.\\\\\\\\\\\\\\\\n3.2.1 Scaled Dot-Product Attention\\\\\\\\\\\\\\\\nWe call our particular attention \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""Scaled Dot-Product Attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" (Figure 2). The input consists of\\\\\\\\\\\\\\\\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\\\\\\\\\\\\\\\\nquery with all keys, divide each by\\\\\\\\\\\\\\\\u221adk, and apply a softmax function to obtain the weights on the\\\\\\\\\\\\\\\\nvalues.\\\\\\\\\\\\\\\\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\\\\\\\\\\\\\\\\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\\\\\\\\\\\\\\\\nthe matrix of outputs as:\\\\\\\\\\\\\\\\nAttention( Q, K, V ) = softmax(QKT\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u221adk)V (1)\\\\\\\\\\\\\\\\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\\\\\\\\\\\\\\\\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\\\\\\\\\\\\\\\\nof1\\\\\\\\\\\\\\\\u221adk. Additive attention computes the compatibility function using a feed-forward network with\\\\\\\\\\\\\\\\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\\\\\\\\\\\\\\\\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\\\\\\\\\\\\\\\\nmatrix multiplication code.\\\\\\\\\\\\\\\\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\\\\\\\\\\\\\\\\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\\\\\\\\\\\\\\\\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\\\\\\\\\\\\\\\\nextremely small gradients4. To counteract this effect, we scale the dot products by1\\\\\\\\\\\\\\\\u221adk.\\\\\\\\\\\\\\\\n3.2.2 Multi-Head Attention\\\\\\\\\\\\\\\\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\\\\\\\\\\\\\\\\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\\\\\\\\\\\\\\\\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\\\\\\\\\\\\\\\\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\\\\\\\\\\\\\\\\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\\\\\\\\\\\\\\\\nvariables with mean 0and variance 1. Then their dot product, q\\\\\\\\\\\\\\\\u00b7k=Pdk\\\\\\\\\\\\\\\\ni=1qiki, has mean 0and variance dk.\\\\\\\\\\\\\\\\n4\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfProvided proper attribution is provided, Google hereby grants permission to\\\\\\\\\\\\\\\\nreproduce the tables and figures in this paper solely for use in journalistic or\\\\\\\\\\\\\\\\nscholarly works.\\\\\\\\\\\\\\\\nAttention Is All You Need\\\\\\\\\\\\\\\\nAshish Vaswani\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\navaswani@google.comNoam Shazeer\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nnoam@google.comNiki Parmar\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nnikip@google.comJakob Uszkoreit\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nusz@google.com\\\\\\\\\\\\\\\\nLlion Jones\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Research\\\\\\\\\\\\\\\\nllion@google.comAidan N. Gomez\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2020\\\\\\\\\\\\\\\\nUniversity of Toronto\\\\\\\\\\\\\\\\naidan@cs.toronto.edu\\\\\\\\\\\\\\\\u0141ukasz Kaiser\\\\\\\\\\\\\\\\u2217\\\\\\\\\\\\\\\\nGoogle Brain\\\\\\\\\\\\\\\\nlukaszkaiser@google.com\\\\\\\\\\\\\\\\nIllia Polosukhin\\\\\\\\\\\\\\\\u2217 \\\\\\\\\\\\\\\\u2021\\\\\\\\\\\\\\\\nillia.polosukhin@gmail.com\\\\\\\\\\\\\\\\nAbstract\\\\\\\\\\\\\\\\nThe dominant sequence transduction models are based on complex recurrent or\\\\\\\\\\\\\\\\nconvolutional neural networks that include an encoder and a decoder. The best\\\\\\\\\\\\\\\\nperforming models also connect the encoder and decoder through an attention\\\\\\\\\\\\\\\\nmechanism. We propose a new simple network architecture, the Transformer,\\\\\\\\\\\\\\\\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\\\\\\\\\\\\\\\\nentirely. Experiments on two machine translation tasks show these models to\\\\\\\\\\\\\\\\nbe superior in quality while being more parallelizable and requiring significantly\\\\\\\\\\\\\\\\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\\\\\\\\\\\\\\\\nto-German translation task, improving over the existing best results, including\\\\\\\\\\\\\\\\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\\\\\\\\\\\\\\\\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\\\\\\\\\\\\\\\\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\\\\\\\\\\\\\\\\nbest models from the literature. We show that the Transformer generalizes well to\\\\\\\\\\\\\\\\nother tasks by applying it successfully to English constituency parsing both with\\\\\\\\\\\\\\\\nlarge and limited training data.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\\\\\\\\\\\\\\\\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\\\\\\\\\\\\\\\\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\\\\\\\\\\\\\\\\nattention and the parameter-free position representation and became the other person involved in nearly every\\\\\\\\\\\\\\\\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\\\\\\\\\\\\\\\\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\\\\\\\\\\\\\\\\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\\\\\\\\\\\\\\\\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\\\\\\\\\\\\\\\\nour research.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2020Work performed while at Google Brain.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2021Work performed while at Google Research.\\\\\\\\\\\\\\\\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nContent: Title: 1706.03762.pdfoutput values. These are concatenated and once again projected, resulting in the final values, as\\\\\\\\\\\\\\\\ndepicted in Figure 2.\\\\\\\\\\\\\\\\nMulti-head attention allows the model to jointly attend to information from different representation\\\\\\\\\\\\\\\\nsubspaces at different positions. With a single attention head, averaging inhibits this.\\\\\\\\\\\\\\\\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\\\\\\\\\\\\\\\\nwhere head i= Attention( QWQ\\\\\\\\\\\\\\\\ni, KWK\\\\\\\\\\\\\\\\ni, V WV\\\\\\\\\\\\\\\\ni)\\\\\\\\\\\\\\\\nWhere the projections are parameter matrices WQ\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dk,WK\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dk,WV\\\\\\\\\\\\\\\\ni\\\\\\\\\\\\\\\\u2208Rdmodel\\\\\\\\\\\\\\\\u00d7dv\\\\\\\\\\\\\\\\nandWO\\\\\\\\\\\\\\\\u2208Rhdv\\\\\\\\\\\\\\\\u00d7dmodel.\\\\\\\\\\\\\\\\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\\\\\\\\\\\\\\\\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\\\\\\\\\\\\\\\\nis similar to that of single-head attention with full dimensionality.\\\\\\\\\\\\\\\\n3.2.3 Applications of Attention in our Model\\\\\\\\\\\\\\\\nThe Transformer uses multi-head attention in three different ways:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022In \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""encoder-decoder attention\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"" layers, the queries come from the previous decoder layer,\\\\\\\\\\\\\\\\nand the memory keys and values come from the output of the encoder. This allows every\\\\\\\\\\\\\\\\nposition in the decoder to attend over all positions in the input sequence. This mimics the\\\\\\\\\\\\\\\\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\\\\\\\\\\\\\\\\n[38, 2, 9].\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\\\\\\\\\\\\\\\\nand queries come from the same place, in this case, the output of the previous layer in the\\\\\\\\\\\\\\\\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\\\\\\\\\\\\\\\\nencoder.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\\\\\\\\\\\\\\\\nall positions in the decoder up to and including that position. We need to prevent leftward\\\\\\\\\\\\\\\\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\\\\\\\\\\\\\\\\ninside of scaled dot-product attention by masking out (setting to \\\\\\\\\\\\\\\\u2212\\\\\\\\\\\\\\\\u221e) all values in the input\\\\\\\\\\\\\\\\nof the softmax which correspond to illegal connections. See Figure 2.\\\\\\\\\\\\\\\\n3.3 Position-wise Feed-Forward Networks\\\\\\\\\\\\\\\\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\\\\\\\\\\\\\\\\nconnected feed-forward network, which is applied to each position separately and identically. This\\\\\\\\\\\\\\\\nconsists of two linear transformations with a ReLU activation in between.\\\\\\\\\\\\\\\\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\\\\\\\\\\\\\\\\nWhile the linear transformations are the same across different positions, they use different parameters\\\\\\\\\\\\\\\\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\\\\\\\\\\\\\\\\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\\\\\\\\\\\\\\\\ndff= 2048 .\\\\\\\\\\\\\\\\n3.4 Embeddings and Softmax\\\\\\\\\\\\\\\\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\\\\\\\\\\\\\\\\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\\\\\\\\\\\\\\\\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\\\\\\\\\\\\\\\\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\\\\\\\\\\\\\\\\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\\\\\\\\\\\\\\\\u221admodel.\\\\\\\\\\\\\\\\n5\\\\\\\\\\\\\\\\nSource: azureml://locations/centralus/workspaces/e96a5813-c919-42fc-b816-908261dd06ab/data/vector-index-input-1706775617472/versions/1/1706.03762.pdf \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n chat history:\\\\\\\\\\\\\\\""\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""what's Attention?\\\\\\\\\\\\\\\""\\\\\\\\n    },\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""Attention is a mechanism used in machine learning models to focus on specific parts of input data when making predictions or generating output. It allows the model to selectively weigh different parts of the input, giving more importance to certain aspects and ignoring others. (Source: 1706.03762.pdf) \\\\\\\\\\\\\\\\nuser: how to calculate Attention? \\\\\\\\\\\\\\\\nassistant:\\\\\\\\\\\\\\\""\\\\\\\\n    }\\\\\\\\n  ],\\\\\\\\n  \\\\\\\\\\\\\\\""temperature\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""top_p\\\\\\\\\\\\\\\"": 1.0,\\\\\\\\n  \\\\\\\\\\\\\\\""n\\\\\\\\\\\\\\\"": 1,\\\\\\\\n  \\\\\\\\\\\\\\\""stream\\\\\\\\\\\\\\\"": false,\\\\\\\\n  \\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\"": null,\\\\\\\\n  \\\\\\\\\\\\\\\""max_tokens\\\\\\\\\\\\\\\"": 1000,\\\\\\\\n  \\\\\\\\\\\\\\\""presence_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""frequency_penalty\\\\\\\\\\\\\\\"": 0.0,\\\\\\\\n  \\\\\\\\\\\\\\\""logit_bias\\\\\\\\\\\\\\\"": {},\\\\\\\\n  \\\\\\\\\\\\\\\""user\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""response_format\\\\\\\\\\\\\\\"": null\\\\\\\\n}\\\\\\\"", \\\\\\\""output\\\\\\\"": \\\\\\\""{\\\\\\\\n  \\\\\\\\\\\\\\\""id\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""chatcmpl-8oukVwdxBlTok7CeTJgzgw2kZXOlp\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""choices\\\\\\\\\\\\\\\"": [\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\\""finish_reason\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""stop\\\\\\\\\\\\\\\"",\\\\\\\\n      \\\\\\\\\\\\\\\""index\\\\\\\\\\\\\\\"": 0,\\\\\\\\n      \\\\\\\\\\\\\\\""logprobs\\\\\\\\\\\\\\\"": null,\\\\\\\\n      \\\\\\\\\\\\\\\""message\\\\\\\\\\\\\\\"": {\\\\\\\\n        \\\\\\\\\\\\\\\""content\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""There are different ways to calculate attention, but one commonly used method is Scaled Dot-Product Attention. In this method, the input consists of queries and keys of dimension dk, and values of dimension dv. The dot products of the query with all keys are computed, divided by the square root of dk, and a softmax function is applied to obtain the weights on the values. The attention function can be computed on a set of queries simultaneously, packed together into a matrix Q, with the keys and values also packed together into matrices K and V. The matrix of outputs is then computed as Attention(Q, K, V) = softmax(QKT/\\\\\\\\\\\\\\\\u221adk)V. (Source: 1706.03762.pdf)\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""role\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""assistant\\\\\\\\\\\\\\\"",\\\\\\\\n        \\\\\\\\\\\\\\\""function_call\\\\\\\\\\\\\\\"": null,\\\\\\\\n        \\\\\\\\\\\\\\\""tool_calls\\\\\\\\\\\\\\\"": null\\\\\\\\n      }\\\\\\\\n    }\\\\\\\\n  ],\\\\\\\\n  \\\\\\\\\\\\\\\""created\\\\\\\\\\\\\\\"": 1707145235,\\\\\\\\n  \\\\\\\\\\\\\\\""model\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""gpt-35-turbo\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""object\\\\\\\\\\\\\\\"": \\\\\\\\\\\\\\\""chat.completion\\\\\\\\\\\\\\\"",\\\\\\\\n  \\\\\\\\\\\\\\\""system_fingerprint\\\\\\\\\\\\\\\"": null,\\\\\\\\n  \\\\\\\\\\\\\\\""usage\\\\\\\\\\\\\\\"": {\\\\\\\\n    \\\\\\\\\\\\\\\""completion_tokens\\\\\\\\\\\\\\\"": 146,\\\\\\\\n    \\\\\\\\\\\\\\\""prompt_tokens\\\\\\\\\\\\\\\"": 2296,\\\\\\\\n    \\\\\\\\\\\\\\\""total_tokens\\\\\\\\\\\\\\\"": 2442\\\\\\\\n  }\\\\\\\\n}\\\\\\\"", \\\\\\\""children\\\\\\\"": []}\\\""]}\""]}"
