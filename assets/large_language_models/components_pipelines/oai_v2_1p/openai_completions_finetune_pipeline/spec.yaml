$schema: http://azureml/sdk-2-0/PipelineComponent.json
type: pipeline
version: 0.0.6
name: openai_completions_finetune_pipeline
display_name: OpenAI Completions Finetune Pipeline
description: Finetune your own OAI model. Visit https://learn.microsoft.com/en-us/azure/cognitive-services/openai/ for more info.
tags:
  contact: gpt3finetuning@microsoft.com
is_deterministic: true

inputs:
  model:
    type: string
    optional: False
    default: gpt-35-turbo
    description: GPT model engine
    enum:
      - babbage-002
      - davinci-002
      - gpt-35-turbo
  train_dataset:
    type: uri_folder
    optional: False
    description: Input dataset (file or folder). If a folder dataset is passed, includes all nested files.
  validation_dataset:
    type: uri_folder
    optional: True
    description: Input dataset (file or folder). If a folder dataset is passed, includes all nested files.
  task_type:
    type: string
    optional: False
    description: Dataset type - chat or completion
    enum:
      - chat
      - completion
  registered_model_name:
    type: string
    optional: False
    description: User-defined registered model name
  epochs:
    type: integer
    optional: False
    default: -1
    description: Number of training epochs. If set to -1, number of epochs will be determined dynamically based on the input data.

outputs:
  output_model:
    type: uri_folder
    description: Dataset with the output model weights (LoRA weights)
    mode: mount

jobs:
  openai_data_import:
    type: command
    component: azureml://registries/azure-openai-v2/components/openai_data_import/versions/0.3.0
    inputs:
      train_dataset: ${{parent.inputs.train_dataset}}
      validation_dataset: ${{parent.inputs.validation_dataset}}
      model: ${{parent.inputs.model}}
  openai_completions_finetune:
    type: command
    component: azureml://registries/azure-openai-v2/components/openai_completions_finetune/versions/0.3.0
    inputs:
      input_dataset: ${{parent.jobs.openai_data_import.outputs.out_dataset}}
      model: ${{parent.inputs.model}}
      task_type: ${{parent.inputs.task_type}}
      registered_model_name: ${{parent.inputs.registered_model_name}}
      epochs: ${{parent.inputs.epochs}}
    outputs:
      output_model: ${{parent.outputs.output_model}}
