$schema: https://azuremlschemas.azureedge.net/latest/pipelineComponent.schema.json
type: pipeline

tags:
    Preview: ""

version: 0.0.35
name: llm_ingest_existing_acs_qa_only
display_name: LLM - Existing ACS Pipeline (Only Test Data)
is_deterministic: false

description: Single job pipeline to import embedded data from ACS index, and create MlIndex, generate test/prompt data, and create PF

settings:
   default_compute: serverless

inputs:
   # openai settings
   openai_api_type:
     type: string
     default: "azure"
     description: "Type of OpenAI endpoint hosting model. Defaults to azure for AOAI endpoints."
   openai_api_version:
     type: string
     default: "2023-03-15-preview"
     description: "Version of OpenAI API to use for communicating with LLM."
      # llm_model config
   llm_config:
     type: string
     default: '{"type": "azure_open_ai", "model_name": "gpt-35-turbo", "deployment_name": "gpt-35-turbo", "temperature": 0, "max_tokens": 2000}'
     description: "JSON describing the LLM provider and model details to use for prompt generation."
   llm_connection:
     type: string
     optional: true
     description: "Azure OpenAI workspace connection ARM ID"
   # register settings
   register_outputs:
     type: string
     enum:
      - "True"
      - "False"
     default: "True"
     description: "Boolean to determine whether generated data should be saved as an AzureML Dataset"
   embeddings_dataset_name:
     type: string
     optional: true
     default: "VectorIndexDS"
     description: "Name of the vector index"
   # compute settings
   serverless_instance_count:
     type: integer
     default: 1
     optional: true
     description: "Instance count to use for the serverless compute"
   serverless_instance_type:
     type: string
     default: "Standard_E8s_v3"
     optional: true
     description: "The Instance Type to be used for the serverless compute"
   # acs import component
   acs_import_connection:
     type: string
     optional: true
     description: "Azure Cognitive Search workspace connection ARM ID"
   acs_import_config:
     type: string
     description: "JSON containing information about the ACS resource"
   num_docs_to_import:
     type: integer
     default: 50
     description: "Number of documents to retreive from ACS for QA/Prompt Generation"
   # Data Chunker
   chunk_size:
     type: integer
     default: 1024
     description: "Chunk size (by token) to pass into the text splitter before performing embeddings"
   chunk_overlap:
     type: integer
     default: 0
     description: "Overlap of content (by token) between the chunks"
   input_glob:
     type: string
     optional: true
     description: "Glob pattern to filter files from the input folder. e.g. 'articles/**/*''"
   max_sample_files:
     type: integer
     default: -1
     optional: true
     description: "Number of files read in during QA test data generation"
   data_source_url:
     type: string
     optional: true
     description: "The url which can be appended to file names to form citation links for documents"
   document_path_replacement_regex:
     type: string
     optional: true
     description: "A JSON string with two fields, 'match_pattern' and 'replacement_pattern' to be used with re.sub on the source url. e.g. '{\"match_pattern\": \"(.*)/articles/(.*)(\\\\.[^.]+)$\", \"replacement_pattern\": \"\\\\1/\\\\2\"}' would remove '/articles' from the middle of the url."
   # data generation component
   dataset_size:
     type: integer
     default: 20
     optional: true
     description: "Number of question/answer pairs which data generator should produce for model evaluation"
   # Embedding connection
   embedding_connection:
    type: string
    optional: true
    description: "Azure OpenAI workspace connection ARM ID for what embeddings were used to embed ACS index"

outputs:
   data_generation_output:
     type: uri_folder
     description: "Folder containing the QA Generation test dataset."

#defaults:
#  compute: azureml:cpu-cluster
jobs:
  #############
  validate_deployments_job:
    type: command
    resources:
      instance_count: ${{parent.inputs.serverless_instance_count}}
      instance_type: ${{parent.inputs.serverless_instance_type}}
      properties:
        compute_specification:
          automatic: true
    component: 'azureml:llm_rag_validate_deployments:0.0.31'
    identity:
      type: user_identity
    inputs:
      llm_config: ${{parent.inputs.llm_config}}
      check_embeddings: "False"
      check_completion: "True"
    outputs:
      output_data:
        type: uri_file
    environment_variables:
       AZUREML_WORKSPACE_CONNECTION_ID_AOAI_EMBEDDING : ${{parent.inputs.embedding_connection}}
       AZUREML_WORKSPACE_CONNECTION_ID_AOAI_COMPLETION: ${{parent.inputs.llm_connection}}
  #############
  data_import_job:
    type: command
    resources:
      instance_count: ${{parent.inputs.serverless_instance_count}}
      instance_type: ${{parent.inputs.serverless_instance_type}}
      properties:
        compute_specification:
          automatic: true
    component: azureml:llm_rag_data_import_acs:0.0.25
    inputs:
      num_docs: ${{parent.inputs.num_docs_to_import}}
      acs_config: ${{parent.inputs.acs_import_config}}
      use_existing: true
    outputs:
      output_data:
        type: uri_folder
      ml_index:
        type: uri_folder
    environment_variables:
       AZUREML_WORKSPACE_CONNECTION_ID_ACS : ${{parent.inputs.acs_import_connection}}
       AZUREML_WORKSPACE_CONNECTION_ID_AOAI: ${{parent.inputs.embedding_connection}}
  ############
  data_chunking_job:
    type: command
    resources:
      instance_count: ${{parent.inputs.serverless_instance_count}}
      instance_type: ${{parent.inputs.serverless_instance_type}}
      properties:
        compute_specification:
          automatic: true
    component: 'azureml:llm_rag_crack_and_chunk:0.0.30'
    inputs:
      input_data: ${{parent.jobs.data_import_job.outputs.output_data}}
      input_glob: ${{parent.inputs.input_glob}}
      chunk_size: ${{parent.inputs.chunk_size}}
      chunk_overlap: ${{parent.inputs.chunk_overlap}}
      data_source_url: ${{parent.inputs.data_source_url}}
      document_path_replacement_regex: ${{parent.inputs.document_path_replacement_regex}}
      max_sample_files: ${{parent.inputs.max_sample_files}}
    outputs:
      output_chunks:
        type: uri_folder
  ############
  data_generation_job:
    type: command
    resources:
      instance_count: ${{parent.inputs.serverless_instance_count}}
      instance_type: ${{parent.inputs.serverless_instance_type}}
      properties:
        compute_specification:
          automatic: true
    component: 'azureml:llm_rag_qa_data_generation:0.0.28'
    inputs:
      openai_api_version: ${{parent.inputs.openai_api_version}}
      openai_api_type: ${{parent.inputs.openai_api_type}}
      input_data: ${{parent.jobs.data_chunking_job.outputs.output_chunks}}
      llm_config: ${{parent.inputs.llm_config}}
      dataset_size: ${{parent.inputs.dataset_size}}
      deployment_validation: ${{parent.jobs.validate_deployments_job.outputs.output_data}}
    outputs:
      output_data: ${{parent.outputs.data_generation_output}}
    environment_variables:
       AZUREML_WORKSPACE_CONNECTION_ID_AOAI : ${{parent.inputs.llm_connection}}
  ############
  register_qa_data_job:
    type: command
    resources:
      instance_count: ${{parent.inputs.serverless_instance_count}}
      instance_type: ${{parent.inputs.serverless_instance_type}}
      properties:
        compute_specification:
          automatic: true
    component: 'azureml:llm_rag_register_qa_data_asset:0.0.21'
    inputs:
      storage_uri: ${{parent.jobs.data_generation_job.outputs.output_data}}
      register_output: ${{parent.inputs.register_outputs}}
      asset_name: ${{parent.inputs.embeddings_dataset_name}}
  ############
  promptflow_creation_job:
    type: command
    resources:
      instance_count: ${{parent.inputs.serverless_instance_count}}
      instance_type: ${{parent.inputs.serverless_instance_type}}
      properties:
        compute_specification:
          automatic: true
    component: 'azureml:llm_rag_create_promptflow:0.0.38'
    inputs:
      mlindex_asset_id: ${{parent.jobs.register_mlindex_asset_job.outputs.asset_id}}
      mlindex_name: ${{parent.inputs.embeddings_dataset_name}}
      llm_connection_name: ${{parent.inputs.llm_connection}}
      llm_config: ${{parent.inputs.llm_config}}
  ############
  register_mlindex_asset_job:
    type: command
    resources:
      instance_count: ${{parent.inputs.serverless_instance_count}}
      instance_type: ${{parent.inputs.serverless_instance_type}}
      properties:
        compute_specification:
          automatic: true
    component: 'azureml:llm_rag_register_mlindex_asset:0.0.28'
    inputs:
      storage_uri: ${{parent.jobs.data_import_job.outputs.ml_index}}
      asset_name: ${{parent.inputs.embeddings_dataset_name}}
    outputs:
      asset_id:
        type: uri_file
