inputs:
  question:
    type: string
    is_chat_input: false
outputs:
  output:
    type: string
    reference: ${answer_the_question_with_context.output}
    evaluation_only: false
nodes:
- name: lookup_question_from_indexed_docs
  type: python
  source:
    type: package
    tool: promptflow_vectordb.tool.common_index_lookup.search
  inputs:
    mlindex_content: >
@@MLIndex_Content
    queries: ${flow.question}
    query_type: Vector
    top_k: 2
- name: generate_prompt_context
  type: python
  source:
    type: code
    path: generate_prompt_context.py
  inputs:
    search_result: ${lookup_question_from_indexed_docs.output}
  aggregation: false
- name: Prompt_variants
  use_variants: true
- name: answer_the_question_with_context
  type: llm
  source:
    type: code
    path: answer_the_question_with_context.jinja2
  inputs:
    deployment_name: @@Completion_Deployment_Name
    suffix: ""
    max_tokens: 1000
    temperature: 0
    top_p: 1.0
    logprobs: ""
    echo: False
    stop: ""
    presence_penalty: 0
    frequency_penalty: 0
    best_of: 1
    logit_bias: ""
    prompt_text: ${Prompt_variants.output}
  api: @@API
  provider: AzureOpenAI
  connection: @@Completion_Connection
  module: promptflow.tools.aoai
  aggregation: false
node_variants:
  Prompt_variants:
    default_variant_id: Variant_0
    variants:
      Variant_0:
        node:
          type: prompt
          source:
            type: code
            path: Prompt_variants__Variant_0.jinja2
          inputs:
            contexts: ${generate_prompt_context.output}
            question: ${flow.question}
          aggregation: false
      Variant_1:
        node:
          type: prompt
          source:
            type: code
            path: Prompt_variants__Variant_1.jinja2
          inputs:
            contexts: ${generate_prompt_context.output}
            question: ${flow.question}
          aggregation: false
      Variant_2:
        node:
          type: prompt
          source:
            type: code
            path: Prompt_variants__Variant_2.jinja2
          inputs:
            contexts: ${generate_prompt_context.output}
            question: ${flow.question}
          aggregation: false
environment:
  python_requirements_txt: requirements.txt
