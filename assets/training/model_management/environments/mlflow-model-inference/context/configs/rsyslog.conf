# Original file can be found at: https://msdata.visualstudio.com/Vienna/_git/o16n-base-images?path=%2Fsrc%2Fcommon%2Frsyslog-slim.conf&_a=contents&version=GBmaster
# Changes made after copying original file:
# 1. changed $FileOwner and $FileGroup to dockeruser
# 2. replaced `binary="<action binary placeholder>"`
#        with `binary="/opt/miniconda/envs/myenv/bin/python /var/azureml-logger/rsyslog_plugin.py"`
# 3. replaced all tabs with spaces

#  /etc/rsyslog.conf Configuration file for rsyslog.
#
#  For more information see
#  /usr/share/doc/rsyslog-doc/html/rsyslog_conf.html
#
#  Default logging rules can be found in /etc/rsyslog.d/50-default.conf


#################
#### MODULES ####
#################

module(load="imuxsock"
       SysSock.Use="off") # provides support for local system logging
# gunicorn should have write access to this socket
# if container is started as non-root user, remember to give the non-root user write access
input(type="imuxsock" Socket="/var/log/rsyslog-custom-socket")
module(load="omprog")   # provides support for handing logs off to programs

###########################
#### GLOBAL DIRECTIVES ####
###########################

#
# Use traditional timestamp format.
# To enable high precision timestamps, comment out the following line.
#
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# Filter duplicated messages
$RepeatedMsgReduction on

#
# Set the default permissions for all log files.
#
$FileOwner dockeruser
$FileGroup dockeruser
$FileCreateMode 0640
$DirCreateMode 0755
$Umask 0022

#
# Where to place spool and state files
#
$WorkDirectory /var/spool/rsyslog

#
# Include all config files in /etc/rsyslog.d/
#
$IncludeConfig /etc/rsyslog.d/*.conf

########################################
#### Azure ML Logging Configuration ####
########################################

#
# Include config for directing output to python plugin
#
template(name="aml_stdout_format" type="list") {
    constant(value="STDOUT,")
    property(name="hostname") constant(value=",")
    property(name="timestamp") constant(value=",")
    property(name="msg")
    constant(value="\n")
}

template(name="aml_stderr_format" type="list") {
    constant(value="STDERR,")
    property(name="hostname") constant(value=",")
    property(name="timestamp") constant(value=",")
    property(name="msg")
    constant(value="\n")
}

if (getenv('AML_APP_INSIGHTS_ENABLED') == 'true') then {
    if ($syslogfacility-text == 'local1') then {
        action(type="omprog"
            binary="/opt/miniconda/envs/amlenv/bin/python /var/azureml-logger/rsyslog_plugin.py"
            template="aml_stdout_format"
            signalOnClose="on"
            hup.signal="TERM")
        stop
    } else if ($syslogfacility-text == 'local2') then {
        action(type="omprog"
            binary="/opt/miniconda/envs/amlenv/bin/python /var/azureml-logger/rsyslog_plugin.py"
            template="aml_stderr_format"
            signalOnClose="on"
            hup.signal="TERM")
        stop
    }
    stop
}
