$schema: https://azuremlschemas.azureedge.net/latest/commandComponent.schema.json
name: medimgage_embedding_finetune
version: 0.0.27

type: command

is_deterministic: True

display_name: Medical Image Insight Embedding Finetune
description: Component to finetune the model using the medical image data

environment : azureml://registries/mablonde-registry-101/environments/acpt-medimage-embedding/versions/16
code: ../../../src/medimage_insight_embedding_finetune

distribution:
  type: pytorch

inputs:
  mlflow_model_path:
    type: uri_folder
    optional: false
    description: Path to the MLflow model to be imported.
    mode: ro_mount

  eval_image_tsv:
    type: uri_file
    optional: false
    description: Path to the evaluation image TSV file.
    mode: ro_mount

  eval_text_tsv:
    type: uri_file
    optional: false
    description: Path to the evaluation text TSV file.
    mode: ro_mount

  image_tsv:
    type: uri_file
    optional: false
    description: Path to the image TSV file.
    mode: ro_mount

  text_tsv:
    type: uri_file
    optional: false
    description: Path to the text TSV file.
    mode: ro_mount

  label_file:
    type: uri_file
    optional: false
    description: Path to the label file.
    mode: ro_mount

  conf_files:
    type: uri_file
    optional: false
    description: Path to the configuration files.
    mode: ro_mount

  log_every:
    type: integer
    min: 1
    default: 10
    optional: true
    description: Log every n steps.

  resume:
    type: boolean
    default: false
    optional: true
    description: Resume training from checkpoint.

  reset_data_loader:
    type: boolean
    default: false
    optional: true
    description: Reset data loader.

  fp16:
    type: boolean
    default: false
    optional: true
    description: Use mixed precision training.

  zero_stage:
    type: integer
    min: 0
    default: 0
    optional: true
    description: Zero optimization stage.

  deepspeed:
    type: boolean
    default: false
    optional: true
    description: Use DeepSpeed for distributed training.

  save_per_optim_steps:
    type: integer
    min: 1
    default: 100
    optional: true
    description: Save model every n optimization steps.

  eval_per_optim_steps:
    type: integer
    min: 1
    default: 100
    optional: true
    description: Evaluate model every n optimization steps.

  grad_clipping:
    type: number
    default: 1.0
    optional: true
    description: Gradient clipping value.

  world_size:
    type: integer
    min: 1
    default: 8
    optional: true
    description: Number of GPUs on which to finetune.

  set_sampler_epoch:
    type: boolean
    default: False
    optional: true
    description: Set sampler epoch.

  verbose:
    type: boolean
    default: false
    optional: true
    description: Verbose logging.

  workers:
    type: integer
    min: 0
    default: 6
    optional: true
    description: Number of workers.

  pin_memory:
    type: boolean
    default: false
    optional: true
    description: Pin memory.

  knn:
    type: integer
    min: 0
    default: 200
    optional: true
    description: Number of nearest neighbors.

  batch_size_per_gpu:
    type: integer
    min: 1
    default: 2
    optional: true
    description: Batch size per GPU.

  max_num_epochs:
    type: integer
    min: 1
    default: 10000
    optional: true
    description: Maximum number of epochs.

  gradient_accumulate_step:
    type: integer
    min: 1
    default: 1
    optional: true
    description: Gradient accumulation steps.

  drop_path_rate:
    type: number
    default: 0.2
    optional: true
    description: Drop path rate.

  context_length:
    type: integer
    default: 77
    optional: true
    description: Context length.

  scale:
    type: number
    default: 0.8
    optional: true
    description: Scale range.

  ratio:
    type: number
    default: 0.75
    optional: true
    description: Aspect ratio range.

  re_prob:
    type: number
    default: 0.25
    optional: true
    description: Random erasing probability.

  hflip:
    type: number
    default: 0.0
    optional: true
    description: Horizontal flip probability.

  vflip:
    type: number
    default: 0.0
    optional: true
    description: Vertical flip probability.

  text_augmentation:
    type: integer
    default: 1
    optional: true
    description: Text augmentation flag.

  batch_size_total:
    type: integer
    default: 1024
    optional: true
    description: Total batch size.

  decay:
    type: number
    default: 0.999
    optional: true
    description: Decay rate.

  start_learning_rate:
    type: number
    default: 0.00001
    optional: true
    description: Start learning rate.

outputs:
  save_dir:
    type: uri_folder
    description: Directory to save the model.
    mode: rw_mount
  
  mlflow_model_folder:
    type: uri_folder
    description: Directory to save the MLflow model.
    mode: rw_mount


command: >-
  python medimage_embedding_finetune.py 
  --task_name "MedEmbedFT" 
  --mlflow_model_folder '${{inputs.mlflow_model_path}}' 
  --log_every $[[${{inputs.log_every}}]] 
  --resume $[[${{inputs.resume}}]] 
  --reset_data_loader $[[${{inputs.reset_data_loader}}]] 
  --fp16 $[[${{inputs.fp16}}]] 
  --zero_stage $[[${{inputs.zero_stage}}]] 
  --deepspeed $[[${{inputs.deepspeed}}]] 
  --save_per_optim_steps $[[${{inputs.save_per_optim_steps}}]] 
  --eval_per_optim_steps $[[${{inputs.eval_per_optim_steps}}]] 
  --grad_clipping $[[${{inputs.grad_clipping}}]] 
  --set_sampler_epoch $[[${{inputs.set_sampler_epoch}}]] 
  --verbose $[[${{inputs.verbose}}]] 
  --workers $[[${{inputs.workers}}]] 
  --world_size $[[${{inputs.world_size}}]] 
  --pin_memory $[[${{inputs.pin_memory}}]] 
  --eval_image_tsv "${{inputs.eval_image_tsv}}" 
  --eval_text_tsv "${{inputs.eval_text_tsv}}" 
  --image_tsv "${{inputs.image_tsv}}" 
  --text_tsv "${{inputs.text_tsv}}" 
  --label_file "${{inputs.label_file}}" 
  --knn $[[${{inputs.knn}}]] 
  --batch_size_per_gpu $[[${{inputs.batch_size_per_gpu}}]] 
  --max_num_epochs $[[${{inputs.max_num_epochs}}]] 
  --gradient_accumulate_step $[[${{inputs.gradient_accumulate_step}}]] 
  --conf_files "${{inputs.conf_files}}"
  --save_dir "${{outputs.save_dir}}" 
  --mlflow_output_model_folder "${{outputs.mlflow_model_folder}}"

