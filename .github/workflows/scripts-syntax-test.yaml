name: scripts-syntax-testing

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  scripts_validation_dir: scripts/validation
  test_resources_dir: test/resources

permissions:
  # Required to clone repo
  contents: read

defaults:
  run:
    shell: bash

jobs:
  check-syntax-files:
    name: Check syntax files
    runs-on: ubuntu-latest 
    outputs:
      my-changed-files: ${{ steps.check-changed-scripts.outputs.changed-files }}

    steps:
      - name: Clone branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
    
      - name: Get changed Python scripts
        id: changed-scripts
        uses: tj-actions/changed-files@v35
        with:
          files_separator: ','
          separator: ','
          files: |
            **/*.py

      - name: Check changed Python scripts count
        id: check-changed-scripts
        run: |
          if ${{ steps.changed-scripts.outputs.all_modified_files_count == 0 }}; then
            echo "No changed Python scripts"
          fi
          echo "Modified files: ${{ steps.changed-scripts.outputs.all_modified_files }}"
          echo "changed-files=${{ steps.changed-scripts.outputs.all_modified_files }}" >> "$GITHUB_OUTPUT"


  check-syntax:
    name: Check syntax
    runs-on: ubuntu-latest 
    needs: check-syntax-files
    if: needs.check-syntax-files.outputs.changed-files != ''

    steps:
      - env:
          OUTPUT1: ${{ needs.check-syntax-files.outputs.my-changed-files }}
        run: echo "$OUTPUT1"

      - name: Clone branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Use Python 3.10 or newer
        uses: actions/setup-python@v4
        with:
          python-version: '>=3.10'
      
      - name: Install dependencies
        run: pip install -r $scripts_validation_dir/requirements.txt

      - name: Check for copyright notice
        run: python $scripts_validation_dir/copyright_validation.py -i . -e $test_resources_dir
      
      - name: Test echo
        run: echo "OUTPUT1 is ${{ env.OUTPUT1 }}"

      - name: Check code health
        run: python $scripts_validation_dir/code_health.py -i .
      
      # TODO: Remove "if" property, -c argument, and changed-scripts step above
      - name: Check code documentation
        run: |
          echo "OUTPUT1 is ${{ env.OUTPUT1 }}"
          python $scripts_validation_dir/doc_style.py -i . -c "${{ env.OUTPUT1 }}"