name: Promptflow CI
on:
  # Triggers the Promptflow CI on pull request targeting the main branch
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - 'assets/promptflow/models/**'
      - '.github/workflows/promptflow_ci.yml'
      - 'scripts/promptflow_ci/**'

env:
  PROMPTFLOW_DIR: "assets/promptflow/models"

permissions:
  # Required for OIDC login to Azure
  id-token: write

jobs:
  check_spec_yaml:
    runs-on: ubuntu-latest
    name: Check spec.yaml fields
    timeout-minutes: 45
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python 3.9 environment
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Check spec yaml
      run: |-
        pip install PyYAML
        python scripts/promptflow-ci/check_spec_yaml.py --models_dir ${{ env.PROMPTFLOW_DIR }}

  run_promptflow_ci_job:
    runs-on: ubuntu-latest
    name: Flow tests
    environment: Testing
    timeout-minutes: 60

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 18.x  
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Install cspell
        run: npm install -g cspell

      - name: Set up Python 3.9 environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - run: |
          python -m pip install --upgrade pip
          pip install -r scripts/promptflow-ci/requirement.txt

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_PROMPT_FLOW_SUBSCRIPTION_ID  }}

      - name: Validate prompt flows
        run: |
          python scripts/promptflow-ci/promptflow_ci.py --local

      - name: Run cspell for typo check
        working-directory: ${{ env.PROMPTFLOW_DIR }}
        run: |-
          cspell lint "**" > cspell_check.log || true
          if [ -s cspell_check.log ]; then
            echo -e "\e[91mNote: If the detected words are expected, add them into "assets/promptflow/.cspell.json"\e[0m" 
            echo -e "====================== Summary of cspell errors ======================"
            echo -e "\e[31m$(cat cspell_check.log)\e[0m" 
            exit 1
          fi
          rm -rf cspell_check.log