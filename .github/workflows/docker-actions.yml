name: docker-actions

on:
  workflow_call:
    inputs:
      machine_type:
        required: true
        type: string
      os_to_build:
        required: true
        type: string
      image_dirs:
        required: true
        type: string
      build_log_dir:
        required: true
        type: string
      env_config_filename:
        default: env_config.yml
        required: false
        type: string
      build_artifact_name:
        required: false
        type: string
      target_image_prefix:
        required: false
        type: string

env:
  SCRIPTS_DIR: scripts/environments

defaults:
  run:
    shell: bash

jobs:
  docker-actions:
    name: Docker actions
    runs-on: ${{ inputs.machine_type }}
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      
      - name: Get changed environments
        id: changed-environments
        uses: tj-actions/changed-files@v18.6
        with:
          files: ${{ inputs.image_dirs }}
          files_separator: ','
          separator: ','
      
      - name: Get changed environment scripts
        id: changed-scripts
        uses: tj-actions/changed-files@v18.6
        with:
          files: ${{ env.SCRIPTS_DIR }}
          separator: ','
      
      - name: Create build logs directory
        run: mkdir ${{ inputs.build_log_dir }}
      
      - name: Install dependencies
        run: pip install -r $SCRIPTS_DIR/requirements.txt
      
      - name: Build all images
        if: steps.changed-environments.outputs.any_changed == 'false' || steps.changed-scripts.outputs.any_changed == 'true'
        run: python -u $SCRIPTS_DIR/build.py -i "${{ inputs.image_dirs }}" -e ${{ inputs.env_config_filename }} -o ${{ inputs.os_to_build }} -l ${{ inputs.build_log_dir }} -k IMAGE_NAMES

      - name: Build changed images
        if: steps.changed-environments.outputs.any_changed == 'true' && steps.changed-scripts.outputs.any_changed == 'false'
        run: python -u $SCRIPTS_DIR/build.py -i "${{ inputs.image_dirs }}" -e ${{ inputs.env_config_filename }} -o ${{ inputs.os_to_build }} -l ${{ inputs.build_log_dir }} -k IMAGE_NAMES -c "${{ steps.changed-environments.outputs.all_changed_and_modified_files }}"

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ inputs.build_artifact_name || inputs.build_log_dir }}
          path: ${{ inputs.build_log_dir }}

      - name: Test images
        if: env.IMAGE_NAMES != ''
        run: python -u $SCRIPTS_DIR/test.py -i "$IMAGE_NAMES"

      - name: Log into registry
        if: inputs.target_image_prefix != '' && env.IMAGE_NAMES != ''
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push images
        if: inputs.target_image_prefix != '' && env.IMAGE_NAMES != ''
        run: python -u $SCRIPTS_DIR/push.py -i "$IMAGE_NAMES" -t ${{ inputs.target_image_prefix }}