name: environments-release

on:
  push:
    branches:
      - main
      - elesel/build-and-test-before-release
  schedule:
    - cron: '30 6 * * *'
  workflow_dispatch:
    inputs:
      image_dirs:
        description: Image directories
        default: general/src/environments
        required: true

env:
  release_dir: release
  scripts_dir: scripts/environments
  release_artifact: changed-assets
  asset_config_filename: asset.yaml

defaults:
  run:
    shell: bash

jobs:
  identify-updated-assets:
    name: Identify updated assets
    runs-on: ubuntu-latest

    steps:
      - name: Clone branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      
      - name: Clone release branch
        uses: actions/checkout@v3
        with:
          ref: release
          fetch-depth: 0
          path: ${{ env.release_dir }}
      
      - name: Use Python 3.8 or newer
        uses: actions/setup-python@v3
        with:
          python-version: '>=3.8'
    
      - name: Install dependencies
        run: pip install -r $scripts_dir/requirements.txt
      
      - name: Update release branch
        run: python -u $scripts_dir/update_release.py -i "${{ github.event.inputs.image_dirs || 'general/src/environments' }}" -r $release_dir -o ${{ runner.temp }}/$release_artifact

      - name: Upload changed assets
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.release_artifact }}
          path: ${{ runner.temp }}/${{ env.release_artifact }}

  build-linux-images:
    name: Build Linux images
    runs-on: ubuntu-latest
    needs: identify-updated-assets

    env:
      os_to_build: linux
      build_log_dir: ${{ runner.temp }}/build-logs
      build_log_artifact_name: build-logs-linux

    steps:
      - name: Clone branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      
      - name: Download changed assets
        uses: actions/download-artifact@v3
        with:
          name: changed-assets
          path: ${{ runner.temp }}/${{ env.release_artifact }}
    
      - name: Use Python 3.8 or newer
        uses: actions/setup-python@v3
        with:
          python-version: '>=3.8'
    
      - name: Install dependencies
        run: pip install -r $scripts_dir/requirements.txt
      
      # TODO: Update this so that per-image failures don't kill the whole thing
      # TODO: Make it delete failed envs from changed_assets_dir
      - name: Build images
        run: python -u $scripts_dir/build.py -i "${{ runner.temp }}/$release_artifact" -a $asset_config_filename -o $os_to_build -l $build_log_dir -k IMAGE_NAMES

      - name: Upload build logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ env.build_log_artifact_name }}
          path: ${{ env.build_log_dir }}

      - name: Test images
        if: env.IMAGE_NAMES != ''
        run: python -u $scripts_dir/test.py -i "$IMAGE_NAMES"

  # release-environments:
  #   name: Release environments
  #   runs-on: ubuntu-latest
    
  #   steps:
  #     - name: Clone branch
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 2
      
  #     - name: Clone release branch
  #       uses: actions/checkout@v3
  #       with:
  #         ref: release
  #         fetch-depth: 0
  #         path: ${{ env.release_dir }}
      
  #     - name: Use Python 3.8 or newer
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: '>=3.8'
    
  #     - name: Install dependencies
  #       run: pip install -r $scripts_dir/requirements.txt
      
  #     - name: Update release branch
  #       run: python -u $scripts_dir/update_release.py -i "${{ github.event.inputs.image_dirs || 'general/src/environments' }}" -r $release_dir
  
  #     - name: Create commit and push
  #       run: |
  #         if [[ -z $(git status -s) ]]; then
  #           echo "No updates to the release branch"
  #           exit 0
  #         fi
  #         git config user.email "<>"
  #         git config user.name "$GITHUB_WORKFLOW"
  #         git add -A .
  #         git commit -m "Release $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
  #         git push
  #       working-directory: ${{ env.release_dir }}
