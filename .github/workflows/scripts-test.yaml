name: scripts-test

on:
  pull_request:
    branches:
      - main
    paths:
      - scripts/**
  pull_request_target:
    branches:
      - main
    paths:
      - scripts/**
    types:
      - opened
      - labeled
      - synchronize
      - reopened
  workflow_dispatch:

env:
  scripts_dir: scripts
  scripts_azureml_assets_dir: scripts/azureml-assets
  scripts_setup_dir: scripts/setup
  test_dir: test
  resources_dir: test/resources
  pytest_reports: pytest-reports
  fork_required_label: "safe to test"

permissions:
  # Required to clone repo
  contents: read
  # Required for OIDC login to Azure
  id-token: write
  # Required for EnricoMi/publish-unit-test-result-action
  checks: write
  issues: read
  pull-requests: write

defaults:
  run:
    shell: bash

jobs:
  check-execution-context:
    name: Check execution context
    runs-on: ubuntu-latest

    steps:
      - name: Check event type
        run: echo "continue=${{ github.event_name == 'workflow_dispatch' || github.event.pull_request.head.repo.fork == (github.event_name == 'pull_request_target') }}" >> $GITHUB_ENV
      
      - name: Check PR origin
        if: env.continue && github.event.pull_request != null && github.event.pull_request.head.repo.fork && !contains(github.event.pull_request.labels.*.name, '${{ env.fork_required_label }}')
        run: |
          echo "::error::This PR was created from a fork and requires the '${{ env.fork_required_label }}' label to run this check."
          exit 1
      
      - name: Check secrets
        if: env.continue
        env:
          has_secrets: ${{ secrets.AZURE_CLIENT_ID != null }}
        run: echo "continue=$has_secrets" >> $GITHUB_ENV

      - name: Set branch refs for forked PR
        if: env.continue && github.event.pull_request.head.repo.fork
        run: |
          echo "main_ref=${{ github.ref }}" >> $GITHUB_ENV
          echo "testing_ref=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
      
      - name: Set branch refs for non-forked PR
        if: env.continue && !github.event.pull_request.head.repo.fork
        run: |
          echo "main_ref=${{ github.ref }}" >> $GITHUB_ENV
          echo "testing_ref=${{ github.ref }}" >> $GITHUB_ENV
      
    outputs:
      continue: ${{ env.continue }}
      main_ref: ${{ env.main_ref }}
      testing_ref: ${{ env.testing_ref }}

  test:
    name: Test scripts
    if: needs.check-execution-context.outputs.continue
    runs-on: ubuntu-latest
    needs: check-execution-context
    environment: Testing

    steps:
      - name: Clone branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Use Python 3.8 or newer
        uses: actions/setup-python@v3
        with:
          python-version: '>=3.8'
    
      - name: Install dependencies
        run: pip install -e $scripts_azureml_assets_dir -r $scripts_dir/test-requirements.txt
      
      - name: Log in to Azure and create resources
        uses: ./.github/actions/create-azure-resources
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          scripts-setup-dir: ${{ env.scripts_setup_dir }}
      
      - name: Test scripts
        run: pytest --junitxml=$pytest_reports/test-result.xml --ignore=$resources_dir --resource-group $resource_group --registry $container_registry $test_dir

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: Test Results for ${{ github.workflow }}
          junit_files: ${{ env.pytest_reports }}/**/*.xml
