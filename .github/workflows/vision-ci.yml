name: vision-ci
on:
  # can be triggered manually
  workflow_dispatch:
    inputs:
      test_run:
        description: 'Run canary e2e (approx 10 mins) ? (y/n)'
        required: true
        default: 'n'
  # build triggered for every PR to main
  pull_request:
    branches:
      - main
    paths:
      - vision/**
      - scripts/setup.sh

jobs:
  test:
    # Runs all unit tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: vision/

    steps:

    - name: check out repo
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip==21.3.1
        pip install flake8==3.9.1 pytest~=6.2 pytest-cov~=2.11
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Test with pytest
      run: >-
        python -m pytest tests/
        --junitxml=test-build-result.xml
        --cov=src/ --cov-report xml:coverage.xml --cov-report term

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action/composite@v1
      with:
        check_name: Unit Test Results for Build
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: vision/test-build-result.xml

    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.0.2
      with:
        filename: vision/coverage.xml
        badge: true
        format: 'markdown'
        output: 'both'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md


  canary:
    # Tests running a sample pipeline end-to-end
    # and wait for completion
    name: "Run canary pipeline to test end-to-end"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: vision/
    needs: [test]
    environment: BuiltinRegistryDev
    # timeout-minutes: 30 # TBD
    steps:

    - name: check out repo
      uses: actions/checkout@v2

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZ_CREDS_BUILTINREGISTRYDEV}}

    - name: Install AzureML sdk v2
      run: |
        pip install azure-ml==0.0.139 --extra-index-url  https://azuremlsdktestpypi.azureedge.net/sdk-cli-v2

    - name : Validate canary pipeline [classification_random]
      # runs only if (from main branch) or (triggered manually)
      run: >-
        python ./src/pipelines/canary/classification_random.py
        --aml_subscription_id ${{secrets.SUBSCRIPTION}}
        --aml_resource_group_name ${{secrets.RESOURCE_GROUP}}
        --aml_workspace_name ${{secrets.WORKSPACE_NAME}}
        --validate_only

    - name : Run canary pipeline e2e [classification_random]
      # runs only if (from main branch) or (triggered manually)
      if: ${{ (github.ref == 'refs/heads/main') || (github.event.inputs.test_run == 'y') }}
      run: >-
        python ./src/pipelines/canary/classification_random.py
        --aml_subscription_id ${{secrets.SUBSCRIPTION}}
        --aml_resource_group_name ${{secrets.RESOURCE_GROUP}}
        --aml_workspace_name ${{secrets.WORKSPACE_NAME}}
        --experiment_name canary
        --wait_for_completion


  publish:
    # If everything ok, published the component in a dev workspace
    name: "Publish vision components from main branch"
    runs-on: ubuntu-latest
    needs: [test, canary]
    # runs only from main branch
    if: github.ref == 'refs/heads/main'

    steps:

    - name: check out repo
      uses: actions/checkout@v2

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.BUILTINREGISTRYDEVSECRET}}

    - name: setup
      run: bash setup.sh
      working-directory: scripts
      continue-on-error: true

    - name: run job
      run: |
        az ml component create --file spec.yaml
      working-directory: vision/src/components/torchvision_finetune
