name: assets-test

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - .github/**
      - scripts/**
  workflow_dispatch:
    inputs:
      asset_dirs:
        description: Asset directories
        default: .,!test,!scripts
        required: true

env:
  default_asset_dirs: .,!test,!scripts
  scripts_azureml_assets_dir: scripts/azureml-assets
  scripts_assets_dir: scripts/azureml-assets/azureml/assets
  asset_config_filename: asset.yaml
  pytest_reports_dir: pytest
  package_versions_file: scripts/test-requirements.txt

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test assets
    runs-on: ubuntu-latest

    steps:
      - name: Clone branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v18.6
        with:
          files_separator: ','
          separator: ','

      - name: Use Python 3.8 or newer
        uses: actions/setup-python@v3
        with:
          python-version: '>=3.8'
    
      - name: Install dependencies
        run: pip install -e $scripts_azureml_assets_dir
      
      - name: Test all assets
        id: test-all-assets
        if: steps.changed-files.outputs.any_modified != 'true'
        run: python -u $scripts_assets_dir/test_assets.py -i "${{ github.event.inputs.asset_dirs || env.default_asset_dirs }}" -a $asset_config_filename -p $package_versions_file -r ${{ runner.temp }}/$pytest_reports_dir

      - name: Test changed assets
        id: test-changed-assets
        if: steps.changed-files.outputs.any_modified == 'true'
        run: python -u $scripts_assets_dir/test_assets.py -i "${{ github.event.inputs.asset_dirs || env.default_asset_dirs }}" -a $asset_config_filename -p $package_versions_file -r ${{ runner.temp }}/$pytest_reports_dir -c "${{ steps.changed-files.outputs.all_changed_and_modified_files }}"
      
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: ${{ runner.temp }}/${{ env.pytest_reports_dir }}/**/*.xml
