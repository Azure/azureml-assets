$schema: http://azureml/sdk-2-0/SparkComponent.json
type: spark

name: action_analyzer_identify_problem_traffic
display_name: Action Analyzer - Identify Problem Traffic
description: Separate bad queries into different groups.
version: 0.0.20
is_deterministic: true
inputs:
  signal_output:
    type: uri_folder
    mode: direct
    description: violated metrics names
  signal_scored_data:
    type: mltable
    mode: direct
    description: production data with metrics scores from monitoring signal
  signal_name:
    type: string
    optional: false
    description: signal name for action
  workspace_connection_arm_id:
    type: string
    optional: false
    description: path to the workspace connection
  model_deployment_name:
    type: string
    optional: false
    description: model name, e.g., name of the deployment for Azure OpenAI
  llm_summary_enabled:
    type: string
    description: enable llm generated topic name to user
    default: "true"
outputs:
  data_with_groups:
    type: mltable
    mode: direct

conf:
  spark.aml.internal.system.job: true
  spark.driver.cores: 4
  spark.driver.memory: 28g
  spark.executor.cores: 4
  spark.executor.memory: 28g
  spark.executor.instances: 1
  spark.dynamicAllocation.enabled: true
  spark.dynamicAllocation.minExecutors: 1
  spark.dynamicAllocation.maxExecutors: 4
  spark.synapse.library.python.env: |
    channels:
      - defaults
    dependencies:
      - python=3.10
      - pip:
        - azure-storage-file-datalake~=12.8.0
        - azure-ai-ml~=1.23.1
        - mltable~=1.3.0
        - azureml-fsspec~=1.0.0
        - protobuf==3.20.1
        - fsspec~=2023.4.0
        - bertopic[flair]
        - nbformat
        - openAI
code: ../../src

entry:
  file: ./action_analyzer/action_analyzer_identify_problem_traffic/run.py

args: >-
  --signal_scored_data ${{inputs.signal_scored_data}}
  --signal_output ${{inputs.signal_output}}
  --signal_name ${{inputs.signal_name}}
  --model_deployment_name ${{inputs.model_deployment_name}}
  --workspace_connection_arm_id ${{inputs.workspace_connection_arm_id}}
  --llm_summary_enabled ${{inputs.llm_summary_enabled}}
  --data_with_groups ${{outputs.data_with_groups}}
