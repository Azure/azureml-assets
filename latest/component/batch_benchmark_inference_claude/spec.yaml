$schema: https://azuremlschemas.azureedge.net/latest/pipelineComponent.schema.json
type: pipeline

name: batch_benchmark_inference_claude
display_name: Batch Benchmark Inference with claude support
description: Components for batch endpoint inference
version: 0.0.3

inputs:
  input_dataset:
    type: uri_folder
    description: Input jsonl dataset that contains prompt.  For the performance test,
      this one will be neglected.
    optional: true
  model_type:
    type: string
    description: Type of model. Can be one of ('aoai', 'oss', 'vision_oss', 'claude')
    optional: true
  batch_input_pattern:
    type: string
    description: >-
      The string for the batch input pattern. The input should be the payload format
      with substitution
      for the key for the value put in the `###<key>`. For example, one can use the
      following format for
      a llama text-gen model with a input dataset has `prompt` for the payload
      and `_batch_request_metadata` storing the corresponding ground truth.
      {
        "input_data":
        {
          "input_string": ["###<prompt>"],
          "parameters":
          {
            "temperature": 0.6,
            "max_new_tokens": 100,
            "do_sample": true
          }
        },
        "_batch_request_metadata": ###<_batch_request_metadata>
      }
      For AOAI model, the following pattern can be used,
      {
          "messages":
          [
            {"role": "user", "content": "###<prompt>" } ],
            "temperature": 0.7,
            "top_p": 0.95,
            "frequency_penalty": 0,
            "presence_penalty": 0,
            "max_tokens": 800,
            "stop": null
      }
      For Vision OSS, the input should be as follows
      {
          "image": "image1",
          "text": "label1, label2, label3"
      }
      For Claude model, another pattern should be used
      {
          "prompt": "Prompt text \n\nHuman:<example>\n### Question: Question text\n###Answer:\n\nAssistant:",
          "prompt_length": 775,
          "completion": "The correct answer"
      }
    optional: false
  endpoint_url:
    type: string
    optional: false
    description: The endpoint url.
  is_performance_test:
    type: boolean
    default: false
    description: If true, the performance test will be run and the input dataset will
      be neglected.
  deployment_name:
    type: string
    optional: true
    description: The deployment name. Only needed for managed OSS deployment.
  connections_name:
    type: string
    optional: false
    description: Connections name for the endpoint.
  label_column_name:
    type: string
    optional: true
    description: The label column name.
  n_samples:
    type: integer
    description: The number of top samples send to endpoint. When performance test
      is enabled, this will be the number of repeated samples send to the endpoint.
    optional: true
  handle_response_failure:
    type: string
    optional: false
    description: The way that the formatter handles the failed response.
    enum:
    - use_fallback
    - neglect
    default: use_fallback
  fallback_value:
    description: The fallback value that can be used when request payload failed.
      If not provided, the fallback value will be an empty string.
    type: string
    optional: true
  additional_headers:
    type: string
    optional: true
    description: A stringified json expressing additional headers to be added to each
      request.
  ensure_ascii:
    type: boolean
    optional: false
    default: false
    description: If ensure_ascii is true, the output is guaranteed to have all incoming
      non-ASCII characters escaped. If ensure_ascii is false, these characters will
      be output as-is. More detailed information can be found at https://docs.python.org/3/library/json.html
  max_retry_time_interval:
    type: integer
    optional: true
    description: The maximum time (in seconds) spent retrying a payload. If unspecified,
      payloads are retried unlimited times.
  mini_batch_size:
    type: string
    optional: true
    default: 100KB
    description: The mini batch size for parallel run.
  initial_worker_count:
    type: integer
    optional: false
    default: 5
    description: The initial number of workers to use for scoring.
  max_worker_count:
    type: integer
    optional: false
    default: 200
    description: Overrides initial_worker_count if necessary
  instance_count:
    type: integer
    default: 1
    description: 'Number of nodes in a compute cluster we will run the train step
      on.'
  max_concurrency_per_instance:
    type: integer
    default: 1
    description: Number of processes that will be run concurrently on any given node.
      This number should not be larger than 1/2 of the number of cores in an individual
      node in the specified cluster.
  debug_mode:
    type: boolean
    optional: false
    default: false
    description: Enable debug mode will print all the debug logs in the score step.
outputs:
  predictions:
    type: uri_file
    description: The prediction data.
  performance_metadata:
    type: uri_file
    description: The performance data.
  ground_truth:
    type: uri_file
    description: The ground truth data that has a one-to-one mapping with the prediction
      data.

jobs:
  # Preparer
  batch_inference_preparer:
    type: command
    component: azureml:batch_inference_preparer:0.0.7
    inputs:
      input_dataset: ${{parent.inputs.input_dataset}}
      model_type: ${{parent.inputs.model_type}}
      batch_input_pattern: ${{parent.inputs.batch_input_pattern}}
      is_performance_test: ${{parent.inputs.is_performance_test}}
      n_samples: ${{parent.inputs.n_samples}}
      endpoint_url: ${{parent.inputs.endpoint_url}}
      label_column_name: ${{parent.inputs.label_column_name}}
    outputs:
      formatted_data:
        type: mltable
      ground_truth_metadata:
        type: uri_folder
  # Inference
  endpoint_batch_score:
    type: parallel
    component: azureml:batch_benchmark_score:0.0.6
    inputs:
      model_type: ${{parent.inputs.model_type}}
      online_endpoint_url: ${{parent.inputs.endpoint_url}}
      deployment_name: ${{parent.inputs.deployment_name}}
      connections_name: ${{parent.inputs.connections_name}}
      debug_mode: ${{parent.inputs.debug_mode}}
      additional_headers: ${{parent.inputs.additional_headers}}
      ensure_ascii: ${{parent.inputs.ensure_ascii}}
      max_retry_time_interval: ${{parent.inputs.max_retry_time_interval}}
      initial_worker_count: ${{parent.inputs.initial_worker_count}}
      max_worker_count: ${{parent.inputs.max_worker_count}}
      data_input_table: ${{parent.jobs.batch_inference_preparer.outputs.formatted_data}}
      mini_batch_size: ${{parent.inputs.mini_batch_size}}
    outputs:
      job_out_path:
        type: uri_file
      mini_batch_results_out_directory:
        type: uri_folder
      metrics_out_directory:
        type: uri_folder
    resources:
      instance_count: ${{parent.inputs.instance_count}}
    max_concurrency_per_instance: ${{parent.inputs.max_concurrency_per_instance}}
    mini_batch_size: "100KB"
    retry_settings:
      timeout: 6000
      max_retries: 10
  # Reformat
  batch_output_formatter:
    type: command
    component: azureml:batch_output_formatter:0.0.7
    inputs:
      model_type: ${{parent.inputs.model_type}}
      batch_inference_output: ${{parent.jobs.endpoint_batch_score.outputs.mini_batch_results_out_directory}}
      label_column_name: ${{parent.inputs.label_column_name}}
      ground_truth_input: ${{parent.jobs.batch_inference_preparer.outputs.ground_truth_metadata}}
      fallback_value: ${{parent.inputs.fallback_value}}
      handle_response_failure: ${{parent.inputs.handle_response_failure}}
      is_performance_test: ${{parent.inputs.is_performance_test}}
      endpoint_url: ${{parent.inputs.endpoint_url}}
    outputs:
      predictions:
        type: uri_file
        path: ${{parent.outputs.predictions}}
      performance_metadata:
        type: uri_file
        path: ${{parent.outputs.performance_metadata}}
      ground_truth:
        type: uri_file
        path: ${{parent.outputs.ground_truth}}

