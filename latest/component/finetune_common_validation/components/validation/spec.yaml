$schema: https://azuremlschemas.azureedge.net/latest/commandComponent.schema.json
type: command

version: 0.0.2
name: finetune_common_validation
display_name: Common Validation Component
description: Component to validate the finetune job against Validation Service

is_deterministic: true

environment: azureml://registries/azureml/environments/acpt-pytorch-2.0-cuda11.7/versions/21

code: ../../src/validation

inputs:

  # component input: mlflow model path
  mlflow_model_path:
    type: mlflow_model
    optional: true
    description: MLflow model asset path. Special characters like \ and ' are invalid
      in the parameter value.

  # ###################################### Data validation ###################################### #
  # component input: training mltable
  train_mltable_path:
    type: mltable
    optional: false
    description: Path to the mltable of the training dataset.

  # optional component input: validation mltable
  validation_mltable_path:
    type: mltable
    optional: true
    description: Path to the mltable of the validation dataset.

  # component input: test mltable
  test_mltable_path:
    type: mltable
    optional: true
    description: Path to the mltable of the test dataset.

  user_column_names:
    type: string
    optional: true
    description: Comma separated list of column names to be used for training.

  # ###################################### Compute validation ###################################### #
  compute_preprocess:
    type: string
    optional: true
    description: Compute to be used for preprocess eg. provide 'FT-Cluster' if your
      compute is named 'FT-Cluster'. Special characters like \ and ' are invalid in
      the parameter value. If compute cluster name is provided, instance_type field
      will be ignored and the respective cluster will be used.

  instance_type_preprocess:
    type: string
    optional: true
    description: Instance type to be used for preprocess component in case of serverless
      compute, eg. standard_d12_v2. The parameter compute_preprocess must be set to
      'serverless' for instance_type to be used

  compute_model_import:
    type: string
    optional: true
    description: Compute to be used for model_import eg. provide 'FT-Cluster' if your
      compute is named 'FT-Cluster'

  instance_type_model_import:
    type: string
    optional: true
    description: Instance type to be used for model_import component in case of serverless
      compute, eg. standard_d12_v2. The parameter compute_model_import must be set
      to 'serverless' for instance_type to be used

  compute_finetune:
    type: string
    optional: true
    description: Compute to be used for finetuning  eg. provide 'FT-Cluster' if your
      compute is named 'FT-Cluster'. Special characters like \ and ' are invalid in
      the parameter value. If compute cluster name is provided, instance_type field
      will be ignored and the respective cluster will be used

  instance_type_finetune:
    type: string
    optional: true
    description: Instance type to be used for finetune component in case of serverless
      compute, eg. standard_nc24rs_v3. The parameter compute_finetune must be set
      to 'serverless' for instance_type to be used

  instance_count:
    type: integer
    default: 1
    optional: true
    description: Number of nodes to be used for finetuning (used for distributed training)

  process_count_per_instance:
    type: integer
    default: 1
    optional: true
    description: Number of gpus to be used per node for finetuning, should be equal
      to number of gpu per node in the compute SKU used for finetune

  compute_model_evaluation:
    type: string
    optional: true
    description: Compute to be used for model evaluation eg. provide 'FT-Cluster'
      if your compute is named 'FT-Cluster'

  instance_type_model_evaluation:
    type: string
    optional: true
    description: Instance type to be used for model_evaluation components in case
      of serverless compute, eg. standard_nc24rs_v3. The parameter compute_model_evaluation
      must be set to 'serverless' for instance_type to be used


  task_name:
    type: string
    enum:
    - tabular-classification
    - tabular-classification-multilabel
    - tabular-regression
    - text-classification
    - text-classification-multilabel
    - text-named-entity-recognition
    - text-summarization
    - question-answering
    - text-translation
    - text-generation
    - fill-mask
    - image-classification
    - image-classification-multilabel
    - image-object-detection
    - image-instance-segmentation
    - video-multi-object-tracking
    description: Which task the model is solving.

  # ###################################### ME validation ###################################### #
  test_batch_size:
    type: integer
    default: 1
    optional: true
    description: Test batch size.

  label_column_name:
    type: string
    default: label
    optional: true
    description: Label column name in provided test dataset, for example "label".

  device:
    type: string
    optional: false
    default: auto
    enum:
    - auto
    - cpu
    - gpu

  evaluation_config:
    type: uri_file
    optional: true
    description: Additional parameters for Computing Metrics.

  evaluation_config_params:
    type: string
    optional: true
    description: Additional parameters as JSON serialized string.

# ############################### Task Speciffic params validation ################################### #
  task_specific_extra_params:
    type: string
    optional: true
    description: All extra params. The values should be key values pairs separated
      by semi-colon. For example "param1=value1;param2=value2"

outputs:
  validation_info:
    type: uri_file
    description: Validation status.

command: >-
  python validation.py
  --validation-info '${{outputs.validation_info}}'
