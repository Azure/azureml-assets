$schema: https://azuremlschemas.azureedge.net/latest/model.schema.json
name: microsoft-Orca-2-13b
path: ./
properties:
  SharedComputeCapacityEnabled: true
  SHA: 2539ff53e6baa4cc603774ad5a2d646f4041ea4e
  inference-min-sku-spec: 24|4|448|2948
  inference-recommended-sku: Standard_NC24s_v3, Standard_NC64as_T4_v3, Standard_NC24ads_A100_v4,
    Standard_NC48ads_A100_v4, Standard_NC96ads_A100_v4, Standard_ND96asr_v4, Standard_ND96amsr_A100_v4,
    Standard_ND40rs_v2
  languages: en
tags:
  Preview: ""
  license: other
  SharedComputeCapacityEnabled: ''
  task: text-generation
  author: Microsoft Research
  huggingface_model_id: microsoft/Orca-2-13b
  inference_compute_allow_list: [Standard_NC24s_v3, Standard_NC64as_T4_v3, Standard_NC24ads_A100_v4,
    Standard_NC48ads_A100_v4, Standard_NC96ads_A100_v4, Standard_ND96asr_v4, Standard_ND96amsr_A100_v4,
    Standard_ND40rs_v2]

version: 3
description: |
  Orca 2 is a finetuned version of LLAMA-2. Orca 2’s training data is a synthetic dataset that was created to enhance the small model’s reasoning abilities. All synthetic training data was moderated using the Microsoft Azure content filters. More details about the model can be found in the [Orca 2 paper](https://arxiv.org/pdf/2311.11045.pdf).

  Orca 2 is built for research purposes only and provides a single turn response in tasks such as reasoning over user given data, reading comprehension, math problem solving and text summarization. The model is designed to excel particularly in reasoning.

  **Note that:**
  1. This is a research model, intended to show that we can use capable models and complex workflows (advanced prompts, multiple calls) to create synthetic data that can teach Small Language Models (SLMs) new capabilities. We chose reasoning because it is a widely useful capability that SLMs lack.
  2. The model is not optimized for chat and has not been trained with RLHF or DPO. It is best used after being finetuned for chat or for a specific task.
  3. Beyond reasoning, the model inherits capabilities and limitations of its base (LLAMA-2 base). We have already seen that the benefits of the Orca training can be applied to other base model too.

  # Training Details

  We trained Orca 2 on 32 NVIDIA A100 GPUs with 80GB memory with bfloat16. For the 13B checkpoint, it took ~17 hours to train Orca 2 on FLAN dataset for one epoch, ~40 hours to train on 5 million ChatGPT data for 3 epochs and ~23 hours to continue training on ~1.8 million GPT-4 data for 4 epochs.

  ## Training Procedure

  ### 1. Progressive Learning
  We start with LLaMA-2-7B or LLaMA-2-13B checkpoint and finetune it on the train split of FLAN-v2 dataset for one epoch. Note that FLAN-v2 dataset contains both zero-shot and few-shot problems. We then train on 5 million ChatGPT data from Orca 1 for 3 epochs. Then we train on the combination of 1 million GPT-4 data from Orca 1 and Orca 2’s 817K data for 4 epochs.

  ### 2. Tokenization
  We utilize the LLaMA Byte Pair Encoding (BPE) tokenizer for processing the input examples. Notably, the LLaMA tokenizer splits all numbers into individual digits,
  and fallbacks to bytes to decompose unknown UTF-8 characters. To deal with variable
  length sequences we add a padding token *[[PAD]]* into the LLaMA tokenizer vocabulary. We also add the ChatML special tokens *<|im_start|>* and *<|im_end|>*. The resulting vocabulary contains 32,003 tokens.

  ### 3. Packing
  To optimize the training process and utilize computational resources efficiently,
  we employ the packing technique [25]. This method involves concatenating multiple input examples into a single sequence, which is then used for training the model. The packing is performed such that the total length of the concatenated sequence does not exceed max_len = 4096 tokens. Particularly, we shuffle the input examples and then partition the examples into groups such that length of the concatenated sequence in each group is at most max_len. Padding tokens are then added to the concatenated sequence to achieve a uniform input sequence length of max_len.

  ### 4. Loss
  For the purpose of training Orca 2, we compute the loss only on the tokens generated
  by the teacher model, i.e., it learns to generate responses conditioned on the system
  instruction and task instructions. This approach ensures that the model focuses on
  learning from the most relevant and informative tokens, improving the overall efficiency and effectiveness of the training process.

  # Evaluation Results

  Orca 2 has been evaluated on a large number of tasks ranging from reasoning to grounding and safety. Please refer
  to Section 6 and Appendix in the [Orca 2 paper](https://arxiv.org/pdf/2311.11045.pdf) for details on evaluations.

  # Limitations and Biases

  Orca 2, built upon the LLaMA 2 model family, retains many of its limitations, as well as the common limitations of other large language models or limitation caused by its training
  process, including:

  **Data Biases**: Large language models, trained on extensive data, can inadvertently carry biases present in the source data. Consequently, the models may generate outputs that could be potentially biased or unfair.

  **Lack of Contextual Understanding**: Despite their impressive capabilities in language understanding and generation, these models exhibit limited real-world understanding, resulting in potential inaccuracies or nonsensical responses.

  **Lack of Transparency**: Due to the complexity and size, large language models can act as “black boxes”, making it difficult to comprehend the rationale behind specific outputs or
  decisions. We recommend reviewing transparency notes from Azure for more information.

  **Content Harms**: There are various types of content harms that large language models can cause. It is important to be aware of them when using these models, and to take actions to prevent them. It is recommended to leverage various content moderation services provided by different companies and institutions. On an important note, we hope for better regulations and standards from government and technology leaders around content harms for AI technologies in future. We value and acknowledge the important role that research and open source community can play in this direction.

  **Hallucination**: It is important to be aware and cautious not to entirely rely on a given language model for critical decisions or information that might have deep impact as it is
  not obvious how to prevent these models from fabricating content. Moreover, it is not clear whether small models may be more susceptible to hallucination in ungrounded generation
  use cases due to their smaller sizes and hence reduced memorization capacities. This is an active research topic and we hope there will be more rigorous measurement, understanding and mitigations around this topic.

  **Potential for Misuse**: Without suitable safeguards, there is a risk that these models could be maliciously used for generating disinformation or harmful content.

  **Data Distribution**: Orca 2’s performance is likely to correlate strongly with the distribution of the tuning data. This correlation might limit its accuracy in areas underrepresented in the training dataset such as math, coding, and reasoning.

  **System messages**: Orca 2 demonstrates variance in performance depending on the system instructions. Additionally, the stochasticity introduced by the model size may lead to generation of non-deterministic responses to different system instructions.

  **Zero-Shot Settings**: Orca 2 was trained on data that mostly simulate zero-shot settings. While the model demonstrate very strong performance in zero-shot settings, it does not show the same gains of using few-shot learning compared to other, specially larger, models.

  **Synthetic data**: As Orca 2 is trained on synthetic data, it could inherit both the advantages and shortcomings of the models and methods used for data generation. We posit that Orca 2 benefits from the safety measures incorporated during training and safety guardrails (e.g., content filter) within the Azure OpenAI API. However, detailed studies are required for better quantification of such risks.

  This model is solely designed for research settings, and its testing has only been carried out in such environments. It should not be used in downstream applications, as additional
  analysis is needed to assess potential harm or bias in the proposed application.

  # License

  * Orca 2 is licensed under the [Microsoft Research License](https://huggingface.co/microsoft/Orca-2-7b/blob/main/LICENSE).

  * Llama 2 is licensed under the [LLAMA 2 Community License](https://ai.meta.com/llama/license/), Copyright © Meta Platforms, Inc. All Rights Reserved.

  # Sample inputs and outputs

  ### Sample input
  ```json
  {
      "input_data": [
          "I believe the meaning of life is"
      ],
      "params": {
          "top_p": 0.9,
          "temperature": 0.2,
          "max_new_tokens": 100,
          "do_sample": true,
          "return_full_text": true
      }
  }
  ```

  ### Sample output
  ```json
  [
    "I believe the meaning of life is to find your purpose and live it out. I think that everyone has a unique purpose in life, and it's up to each individual to discover what that purpose is and then pursue it with passion and determination.\n\nI also believe that the meaning of life is to create positive change in the world. This can be done through various means, such as helping others, making the world a better place, or simply being a positive influence on those around you.\n\nIn conclusion,"
  ]
  ```
